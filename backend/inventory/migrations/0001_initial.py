# Generated by Django 4.2.7 on 2025-05-29 05:56

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('jobs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='inventory.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjustment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('adjustment_type', models.CharField(choices=[('audit', 'Audit Adjustment'), ('damage', 'Damage'), ('theft', 'Theft'), ('found', 'Found Items'), ('correction', 'Data Correction'), ('write_off', 'Write Off')], max_length=20)),
                ('adjustment_date', models.DateField(default=datetime.date.today)),
                ('description', models.CharField(max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('approved', models.BooleanField(default=False)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_adjustments', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_adjustments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('item_type', models.CharField(choices=[('part', 'Part'), ('tool', 'Tool'), ('material', 'Material'), ('consumable', 'Consumable'), ('equipment', 'Equipment')], default='part', max_length=20)),
                ('unit_of_measure', models.CharField(choices=[('each', 'Each'), ('foot', 'Foot'), ('meter', 'Meter'), ('gallon', 'Gallon'), ('liter', 'Liter'), ('pound', 'Pound'), ('kilogram', 'Kilogram'), ('box', 'Box'), ('roll', 'Roll'), ('sheet', 'Sheet')], default='each', max_length=20)),
                ('weight', models.DecimalField(blank=True, decimal_places=3, help_text='Weight per unit', max_digits=8, null=True)),
                ('dimensions', models.CharField(blank=True, help_text='Length x Width x Height', max_length=100)),
                ('cost_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('sell_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('markup_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('current_stock', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('minimum_stock', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('maximum_stock', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('reorder_point', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('reorder_quantity', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('warehouse_location', models.CharField(blank=True, help_text='Shelf, bin, etc.', max_length=100)),
                ('supplier_part_number', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_serialized', models.BooleanField(default=False, help_text='Track individual serial numbers')),
                ('is_taxable', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='inventory.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['item_code'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('website', models.URLField(blank=True)),
                ('address_line1', models.CharField(blank=True, max_length=200)),
                ('address_line2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('zip_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='USA', max_length=100)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('account_number', models.CharField(blank=True, max_length=100)),
                ('default_lead_time_days', models.PositiveIntegerField(default=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('movement_type', models.CharField(choices=[('purchase', 'Purchase'), ('sale', 'Sale'), ('job_use', 'Used on Job'), ('return', 'Return'), ('adjustment', 'Adjustment'), ('transfer', 'Transfer'), ('damage', 'Damaged'), ('loss', 'Lost'), ('found', 'Found')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('purchase_order', models.CharField(blank=True, max_length=100)),
                ('invoice_reference', models.CharField(blank=True, max_length=100)),
                ('reason', models.CharField(blank=True, max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('from_location', models.CharField(blank=True, max_length=100)),
                ('to_location', models.CharField(blank=True, max_length=100)),
                ('movement_date', models.DateTimeField(default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='inventory.item')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='jobs.job')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_movements', to=settings.AUTH_USER_MODEL)),
                ('technician', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='jobs.technician')),
            ],
            options={
                'ordering': ['-movement_date'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('confirmed', 'Confirmed'), ('partial', 'Partially Received'), ('received', 'Fully Received'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('order_date', models.DateField(default=datetime.date.today)),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
                ('actual_delivery_date', models.DateField(blank=True, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('shipping_address', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('terms', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_pos', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='inventory.supplier')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='item',
            name='primary_supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_items', to='inventory.supplier'),
        ),
        migrations.CreateModel(
            name='PurchaseOrderLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.DecimalField(decimal_places=3, max_digits=10)),
                ('quantity_received', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('supplier_part_number', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('line_number', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='po_line_items', to='inventory.item')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='inventory.purchaseorder')),
            ],
            options={
                'ordering': ['line_number'],
                'unique_together': {('purchase_order', 'line_number')},
            },
        ),
        migrations.CreateModel(
            name='InventoryAdjustmentLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_before', models.DecimalField(decimal_places=3, max_digits=10)),
                ('quantity_after', models.DecimalField(decimal_places=3, max_digits=10)),
                ('quantity_difference', models.DecimalField(decimal_places=3, max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.CharField(blank=True, max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('line_number', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('adjustment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='inventory.inventoryadjustment')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjustment_line_items', to='inventory.item')),
            ],
            options={
                'ordering': ['line_number'],
                'unique_together': {('adjustment', 'line_number')},
            },
        ),
    ]
