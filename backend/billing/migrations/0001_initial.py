# Generated by Django 4.2.7 on 2025-05-29 05:48

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0002_property_latitude_property_longitude'),
        ('jobs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('invoice_date', models.DateField(default=datetime.date.today)),
                ('due_date', models.DateField()),
                ('payment_terms', models.CharField(choices=[('due_on_receipt', 'Due on Receipt'), ('net_15', 'Net 15'), ('net_30', 'Net 30'), ('net_45', 'Net 45'), ('net_60', 'Net 60')], default='net_30', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('viewed', 'Viewed'), ('paid', 'Paid'), ('partial', 'Partially Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='draft', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('amount_due', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('terms_and_conditions', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True)),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('viewed_date', models.DateTimeField(blank=True, null=True)),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('billing_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='customers.property')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_invoices', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='customers.customer')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='jobs.job')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('rate_percentage', models.DecimalField(decimal_places=4, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('jurisdiction', models.CharField(help_text='State, county, city, etc.', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('effective_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['jurisdiction', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('check', 'Check'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('online', 'Online Payment'), ('other', 'Other')], max_length=20)),
                ('payment_date', models.DateTimeField(default=datetime.datetime.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('processor_name', models.CharField(blank=True, help_text='Stripe, Square, etc.', max_length=50)),
                ('processor_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('check_number', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='customers.customer')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='billing.invoice')),
                ('processed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Estimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimate_number', models.CharField(max_length=50, unique=True)),
                ('estimate_date', models.DateField(default=datetime.date.today)),
                ('expiration_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('viewed', 'Viewed'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired'), ('converted', 'Converted to Invoice')], default='draft', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('description', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('terms_and_conditions', models.TextField(blank=True)),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('viewed_date', models.DateTimeField(blank=True, null=True)),
                ('accepted_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('converted_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_estimate', to='billing.invoice')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_estimates', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estimates', to='customers.customer')),
                ('estimate_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estimates', to='customers.property')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BillingSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('company_address', models.TextField()),
                ('company_phone', models.CharField(max_length=50)),
                ('company_email', models.EmailField(max_length=254)),
                ('company_website', models.URLField(blank=True)),
                ('invoice_prefix', models.CharField(default='INV', max_length=10)),
                ('estimate_prefix', models.CharField(default='EST', max_length=10)),
                ('default_payment_terms', models.CharField(choices=[('due_on_receipt', 'Due on Receipt'), ('net_15', 'Net 15'), ('net_30', 'Net 30'), ('net_45', 'Net 45'), ('net_60', 'Net 60')], default='net_30', max_length=20)),
                ('late_fee_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('late_fee_grace_days', models.PositiveIntegerField(default=0)),
                ('default_invoice_terms', models.TextField(blank=True)),
                ('default_estimate_terms', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('default_tax_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='billing.taxrate')),
            ],
            options={
                'verbose_name': 'Billing Settings',
                'verbose_name_plural': 'Billing Settings',
            },
        ),
        migrations.CreateModel(
            name='InvoiceLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('service', 'Service'), ('material', 'Material'), ('labor', 'Labor'), ('travel', 'Travel'), ('discount', 'Discount'), ('fee', 'Fee')], default='service', max_length=20)),
                ('description', models.CharField(max_length=500)),
                ('quantity', models.DecimalField(decimal_places=3, default=1, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('line_number', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='billing.invoice')),
                ('service_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobs.servicetype')),
                ('technician', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobs.technician')),
            ],
            options={
                'ordering': ['line_number'],
                'unique_together': {('invoice', 'line_number')},
            },
        ),
        migrations.CreateModel(
            name='EstimateLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('service', 'Service'), ('material', 'Material'), ('labor', 'Labor'), ('travel', 'Travel'), ('discount', 'Discount'), ('fee', 'Fee')], default='service', max_length=20)),
                ('description', models.CharField(max_length=500)),
                ('quantity', models.DecimalField(decimal_places=3, default=1, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('line_number', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='billing.estimate')),
                ('service_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobs.servicetype')),
                ('technician', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobs.technician')),
            ],
            options={
                'ordering': ['line_number'],
                'unique_together': {('estimate', 'line_number')},
            },
        ),
    ]
