{"version":3,"file":"static/js/146.fdc7d553.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Lock.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/icons-material/esm/Visibility.js","components/Login.tsx","../node_modules/@mui/icons-material/esm/Business.js","utils/validation.ts","../node_modules/@mui/icons-material/esm/Person.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1z\"\n}), 'Lock');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7M2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2m4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3z\"\n}), 'VisibilityOff');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Alert,\n  Card,\n  CardContent,\n  Grid,\n  Divider,\n  CircularProgress,\n  InputAdornment,\n  IconButton\n} from '@mui/material';\nimport {\n  Visibility,\n  VisibilityOff,\n  Person as PersonIcon,\n  Lock as LockIcon,\n  Business as BusinessIcon\n} from '@mui/icons-material';\nimport { useAuth } from '../contexts/AuthContext';\nimport { validateForm, commonValidationRules } from '../utils/validation';\n\nconst Login: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { login, loading, error, isAuthenticated } = useAuth();\n  \n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [formErrors, setFormErrors] = useState<Record<string, string>>({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  // Redirect if already authenticated\n  useEffect(() => {\n    if (isAuthenticated) {\n      const from = location.state?.from?.pathname || '/';\n      navigate(from, { replace: true });\n    }\n  }, [isAuthenticated, navigate, location]);\n\n  const handleInputChange = (field: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: event.target.value\n    }));\n    \n    // Clear field error when user starts typing\n    if (formErrors[field]) {\n      setFormErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  const validateLoginForm = () => {\n    const validationRules = {\n      username: { required: true, minLength: 3 },\n      password: { required: true, minLength: 6 }\n    };\n    \n    const result = validateForm(formData, validationRules);\n    setFormErrors(result.errors);\n    return result.isValid;\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    \n    if (!validateLoginForm()) {\n      return;\n    }\n\n    setSubmitting(true);\n    \n    try {\n      const success = await login(formData.username, formData.password);\n      \n      if (success) {\n        const from = location.state?.from?.pathname || '/';\n        navigate(from, { replace: true });\n      }\n    } catch (error) {\n      console.error('Login submission error:', error);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleDemoLogin = (username: string) => {\n    setFormData({\n      username: username,\n      password: `${username}123`\n    });\n  };\n\n  if (loading) {\n    return (\n      <Box \n        display=\"flex\" \n        justifyContent=\"center\" \n        alignItems=\"center\" \n        minHeight=\"100vh\"\n        bgcolor=\"grey.100\"\n      >\n        <CircularProgress size={40} />\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      sx={{\n        minHeight: '100vh',\n        background: 'linear-gradient(135deg, #1976d2 0%, #42a5f5 100%)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        p: 2\n      }}\n    >\n      <Paper \n        elevation={10}\n        sx={{ \n          maxWidth: 900, \n          width: '100%',\n          borderRadius: 3,\n          overflow: 'hidden'\n        }}\n      >\n        <Grid container>\n          {/* Left Side - Branding */}\n          <Grid \n            item \n            xs={12} \n            md={6} \n            sx={{\n              background: 'linear-gradient(45deg, #1565c0 0%, #1976d2 100%)',\n              color: 'white',\n              p: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center'\n            }}\n          >\n            <BusinessIcon sx={{ fontSize: 80, mb: 2, opacity: 0.9 }} />\n            <Typography variant=\"h4\" fontWeight=\"bold\" textAlign=\"center\" gutterBottom>\n              AJ Long Electric\n            </Typography>\n            <Typography variant=\"h6\" textAlign=\"center\" sx={{ opacity: 0.9 }}>\n              Field Service Management\n            </Typography>\n            <Typography variant=\"body1\" textAlign=\"center\" sx={{ mt: 2, opacity: 0.8 }}>\n              Streamline your electrical service operations with our comprehensive management platform\n            </Typography>\n          </Grid>\n\n          {/* Right Side - Login Form */}\n          <Grid item xs={12} md={6}>\n            <Box sx={{ p: 4 }}>\n              <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom color=\"primary\">\n                Welcome Back\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                Sign in to access your dashboard\n              </Typography>\n\n              {error && (\n                <Alert severity=\"error\" sx={{ mb: 3 }}>\n                  {error}\n                </Alert>\n              )}\n\n              <Box component=\"form\" onSubmit={handleSubmit}>\n                <TextField\n                  fullWidth\n                  label=\"Username\"\n                  value={formData.username}\n                  onChange={handleInputChange('username')}\n                  error={!!formErrors.username}\n                  helperText={formErrors.username}\n                  margin=\"normal\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <PersonIcon color=\"action\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n\n                <TextField\n                  fullWidth\n                  label=\"Password\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={formData.password}\n                  onChange={handleInputChange('password')}\n                  error={!!formErrors.password}\n                  helperText={formErrors.password}\n                  margin=\"normal\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <LockIcon color=\"action\" />\n                      </InputAdornment>\n                    ),\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={() => setShowPassword(!showPassword)}\n                          edge=\"end\"\n                        >\n                          {showPassword ? <VisibilityOff /> : <Visibility />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  size=\"large\"\n                  disabled={submitting}\n                  sx={{ mt: 3, mb: 2, py: 1.5 }}\n                >\n                  {submitting ? <CircularProgress size={24} /> : 'Sign In'}\n                </Button>\n              </Box>\n\n              <Divider sx={{ my: 3 }}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Demo Accounts\n                </Typography>\n              </Divider>\n\n              {/* Demo Account Cards */}\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Card \n                    sx={{ \n                      cursor: 'pointer', \n                      '&:hover': { boxShadow: 3 },\n                      border: '1px solid',\n                      borderColor: 'divider'\n                    }}\n                    onClick={() => handleDemoLogin('admin')}\n                  >\n                    <CardContent sx={{ textAlign: 'center', py: 1.5 }}>\n                      <Typography variant=\"subtitle2\" fontWeight=\"bold\" color=\"error.main\">\n                        Admin\n                      </Typography>\n                      <Typography variant=\"caption\" display=\"block\">\n                        Full Access\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                <Grid item xs={6}>\n                  <Card \n                    sx={{ \n                      cursor: 'pointer', \n                      '&:hover': { boxShadow: 3 },\n                      border: '1px solid',\n                      borderColor: 'divider'\n                    }}\n                    onClick={() => handleDemoLogin('manager')}\n                  >\n                    <CardContent sx={{ textAlign: 'center', py: 1.5 }}>\n                      <Typography variant=\"subtitle2\" fontWeight=\"bold\" color=\"primary.main\">\n                        Manager\n                      </Typography>\n                      <Typography variant=\"caption\" display=\"block\">\n                        Management\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                <Grid item xs={6}>\n                  <Card \n                    sx={{ \n                      cursor: 'pointer', \n                      '&:hover': { boxShadow: 3 },\n                      border: '1px solid',\n                      borderColor: 'divider'\n                    }}\n                    onClick={() => handleDemoLogin('technician')}\n                  >\n                    <CardContent sx={{ textAlign: 'center', py: 1.5 }}>\n                      <Typography variant=\"subtitle2\" fontWeight=\"bold\" color=\"success.main\">\n                        Technician\n                      </Typography>\n                      <Typography variant=\"caption\" display=\"block\">\n                        Field Work\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                <Grid item xs={6}>\n                  <Card \n                    sx={{ \n                      cursor: 'pointer', \n                      '&:hover': { boxShadow: 3 },\n                      border: '1px solid',\n                      borderColor: 'divider'\n                    }}\n                    onClick={() => handleDemoLogin('customer')}\n                  >\n                    <CardContent sx={{ textAlign: 'center', py: 1.5 }}>\n                      <Typography variant=\"subtitle2\" fontWeight=\"bold\" color=\"warning.main\">\n                        Customer\n                      </Typography>\n                      <Typography variant=\"caption\" display=\"block\">\n                        Limited View\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              </Grid>\n\n              <Typography variant=\"caption\" display=\"block\" textAlign=\"center\" sx={{ mt: 2 }}>\n                Click any demo account card to auto-fill credentials\n              </Typography>\n\n              <Typography variant=\"body2\" textAlign=\"center\" color=\"text.secondary\" sx={{ mt: 3 }}>\n                Don't have an account?{' '}\n                <Button variant=\"text\" onClick={() => navigate('/register')}>\n                  Create Account\n                </Button>\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default Login;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7V3H2v18h20V7zM6 19H4v-2h2zm0-4H4v-2h2zm0-4H4V9h2zm0-4H4V5h2zm4 12H8v-2h2zm0-4H8v-2h2zm0-4H8V9h2zm0-4H8V5h2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8zm-2-8h-2v2h2zm0 4h-2v2h2z\"\n}), 'Business');","import React from 'react';\n\nexport interface ValidationRule {\n  required?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  pattern?: RegExp;\n  min?: number;\n  max?: number;\n  custom?: (value: any) => string | null;\n}\n\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: Record<string, string>;\n}\n\nexport const validateField = (value: any, rules: ValidationRule): string | null => {\n  if (rules.required && (!value || (typeof value === 'string' && value.trim() === ''))) {\n    return 'This field is required';\n  }\n\n  if (!value) return null;\n\n  if (rules.minLength && typeof value === 'string' && value.length < rules.minLength) {\n    return `Must be at least ${rules.minLength} characters`;\n  }\n\n  if (rules.maxLength && typeof value === 'string' && value.length > rules.maxLength) {\n    return `Must be no more than ${rules.maxLength} characters`;\n  }\n\n  if (rules.pattern && typeof value === 'string' && !rules.pattern.test(value)) {\n    return 'Invalid format';\n  }\n\n  if (rules.min && typeof value === 'number' && value < rules.min) {\n    return `Must be at least ${rules.min}`;\n  }\n\n  if (rules.max && typeof value === 'number' && value > rules.max) {\n    return `Must be no more than ${rules.max}`;\n  }\n\n  if (rules.custom) {\n    return rules.custom(value);\n  }\n\n  return null;\n};\n\nexport const validateForm = (data: Record<string, any>, rules: Record<string, ValidationRule>): ValidationResult => {\n  const errors: Record<string, string> = {};\n\n  for (const [field, fieldRules] of Object.entries(rules)) {\n    const error = validateField(data[field], fieldRules);\n    if (error) {\n      errors[field] = error;\n    }\n  }\n\n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors\n  };\n};\n\n// Common validation patterns\nexport const validationPatterns = {\n  email: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n  phone: /^[\\+]?[1-9][\\d]{0,15}$/,\n  phoneUS: /^(\\+1)?[\\s\\-]?\\(?([0-9]{3})\\)?[\\s\\-]?([0-9]{3})[\\s\\-]?([0-9]{4})$/,\n  postalCode: /^[A-Za-z]\\d[A-Za-z][ -]?\\d[A-Za-z]\\d$/,\n  zipCode: /^\\d{5}(-\\d{4})?$/,\n  url: /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$/,\n  alphanumeric: /^[a-zA-Z0-9]+$/,\n  currency: /^\\d+(\\.\\d{1,2})?$/,\n  jobNumber: /^JOB-\\d{4}-\\d{4}$/,\n  invoiceNumber: /^INV-\\d{4}-\\d{4}$/,\n  strongPassword: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n};\n\n// Helper functions to create validation rules\nexport const commonValidationRules = {\n  required: (message?: string): ValidationRule => ({\n    required: true,\n    custom: (value: any) => {\n      if (!value || (typeof value === 'string' && value.trim() === '')) {\n        return message || 'This field is required';\n      }\n      return null;\n    }\n  }),\n  \n  minLength: (length: number, message?: string): ValidationRule => ({\n    minLength: length,\n    custom: (value: string) => {\n      if (value && value.length < length) {\n        return message || `Must be at least ${length} characters`;\n      }\n      return null;\n    }\n  }),\n  \n  maxLength: (length: number, message?: string): ValidationRule => ({\n    maxLength: length,\n    custom: (value: string) => {\n      if (value && value.length > length) {\n        return message || `Must be no more than ${length} characters`;\n      }\n      return null;\n    }\n  }),\n  \n  email: (message?: string): ValidationRule => ({\n    pattern: validationPatterns.email,\n    custom: (value: string) => {\n      if (value && !validationPatterns.email.test(value)) {\n        return message || 'Please enter a valid email address';\n      }\n      return null;\n    }\n  }),\n  \n  phone: (message?: string): ValidationRule => ({\n    pattern: validationPatterns.phoneUS,\n    custom: (value: string) => {\n      if (value && !validationPatterns.phoneUS.test(value)) {\n        return message || 'Please enter a valid phone number (e.g., (555) 123-4567)';\n      }\n      return null;\n    }\n  }),\n\n  // Pre-defined validation rule objects\n  emailRule: { \n    required: true, \n    pattern: validationPatterns.email,\n    custom: (value: string) => {\n      if (value && !validationPatterns.email.test(value)) {\n        return 'Please enter a valid email address';\n      }\n      return null;\n    }\n  },\n  phoneRule: { \n    required: true, \n    pattern: validationPatterns.phoneUS,\n    custom: (value: string) => {\n      if (value && !validationPatterns.phoneUS.test(value)) {\n        return 'Please enter a valid phone number (e.g., (555) 123-4567)';\n      }\n      return null;\n    }\n  },\n  currencyRule: {\n    required: true,\n    min: 0,\n    custom: (value: number) => {\n      if (value !== undefined && value < 0) {\n        return 'Amount cannot be negative';\n      }\n      return null;\n    }\n  },\n  \n  // Backward compatibility aliases\n  currency: {\n    required: true,\n    min: 0,\n    custom: (value: number) => {\n      if (value !== undefined && value < 0) {\n        return 'Amount cannot be negative';\n      }\n      return null;\n    }\n  },\n  duration: {\n    required: true,\n    min: 0.5,\n    max: 24,\n    custom: (value: number) => {\n      if (value !== undefined && (value < 0.5 || value > 24)) {\n        return 'Duration must be between 0.5 and 24 hours';\n      }\n      return null;\n    }\n  },\n  postalCode: {\n    pattern: validationPatterns.postalCode,\n    custom: (value: string) => {\n      if (value && !validationPatterns.postalCode.test(value) && !validationPatterns.zipCode.test(value)) {\n        return 'Please enter a valid postal/zip code';\n      }\n      return null;\n    }\n  },\n  strongPassword: {\n    required: true,\n    minLength: 8,\n    pattern: validationPatterns.strongPassword,\n    custom: (value: string) => {\n      if (value && !validationPatterns.strongPassword.test(value)) {\n        return 'Password must contain at least 8 characters with uppercase, lowercase, number, and special character';\n      }\n      return null;\n    }\n  },\n  customerName: {\n    required: true,\n    minLength: 2,\n    maxLength: 100,\n    custom: (value: string) => {\n      if (value && value.trim().length < 2) {\n        return 'Name must be at least 2 characters';\n      }\n      return null;\n    }\n  },\n  address: {\n    required: true,\n    minLength: 10,\n    maxLength: 255,\n    custom: (value: string) => {\n      if (value && value.trim().length < 10) {\n        return 'Please enter a complete address';\n      }\n      return null;\n    }\n  },\n  description: {\n    required: true,\n    minLength: 10,\n    maxLength: 1000,\n    custom: (value: string) => {\n      if (value && value.trim().length < 10) {\n        return 'Description must be at least 10 characters';\n      }\n      return null;\n    }\n  }\n};\n\n// Utility functions for specific validations\nexport const validateEmailFormat = (email: string): boolean => {\n  return validationPatterns.email.test(email);\n};\n\nexport const validatePhoneFormat = (phone: string): boolean => {\n  return validationPatterns.phoneUS.test(phone);\n};\n\nexport const validateCurrencyFormat = (amount: string): boolean => {\n  return validationPatterns.currency.test(amount);\n};\n\nexport const formatPhoneNumber = (phone: string): string => {\n  const digits = phone.replace(/\\D/g, '');\n  if (digits.length === 10) {\n    return `(${digits.slice(0, 3)}) ${digits.slice(3, 6)}-${digits.slice(6)}`;\n  }\n  if (digits.length === 11 && digits[0] === '1') {\n    return `+1 (${digits.slice(1, 4)}) ${digits.slice(4, 7)}-${digits.slice(7)}`;\n  }\n  return phone;\n};\n\nexport const formatCurrency = (amount: number | string): string => {\n  const numAmount = typeof amount === 'string' ? parseFloat(amount) : amount;\n  if (isNaN(numAmount)) return '$0.00';\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(numAmount);\n};\n\n// Real-time validation hook\nexport const useFormValidation = (initialData: Record<string, any>, validationRules: Record<string, ValidationRule>) => {\n  const [data, setData] = React.useState(initialData);\n  const [errors, setErrors] = React.useState<Record<string, string>>({});\n  const [touched, setTouched] = React.useState<Record<string, boolean>>({});\n\n  const validateSingleField = (field: string, value: any) => {\n    const rule = validationRules[field];\n    if (!rule) return null;\n    return validateField(value, rule);\n  };\n\n  const handleChange = (field: string, value: any) => {\n    setData(prev => ({ ...prev, [field]: value }));\n    \n    // Real-time validation\n    if (touched[field]) {\n      const error = validateSingleField(field, value);\n      setErrors(prev => {\n        if (error) {\n          return { ...prev, [field]: error };\n        } else {\n          const newErrors = { ...prev };\n          delete newErrors[field];\n          return newErrors;\n        }\n      });\n    }\n  };\n\n  const handleBlur = (field: string) => {\n    setTouched(prev => ({ ...prev, [field]: true }));\n    const error = validateSingleField(field, data[field]);\n    if (error) {\n      setErrors(prev => ({ ...prev, [field]: error }));\n    }\n  };\n\n  const validateAll = (): boolean => {\n    const result = validateForm(data, validationRules);\n    setErrors(result.errors);\n    setTouched(Object.keys(validationRules).reduce((acc, key) => ({ ...acc, [key]: true }), {}));\n    return result.isValid;\n  };\n\n  const reset = () => {\n    setData(initialData);\n    setErrors({});\n    setTouched({});\n  };\n\n  return {\n    data,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    validateAll,\n    reset,\n    isValid: Object.keys(errors).length === 0\n  };\n};","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');"],"names":["createSvgIcon","_jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","concat","capitalize","position","disablePointerEvents","variant","_ref","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","Login","navigate","useNavigate","location","useLocation","login","loading","error","isAuthenticated","useAuth","formData","setFormData","useState","username","password","formErrors","setFormErrors","showPassword","setShowPassword","submitting","setSubmitting","useEffect","_location$state","_location$state$from","from","state","pathname","replace","handleInputChange","field","event","prev","_objectSpread","target","newErrors","handleDemoLogin","Box","justifyContent","minHeight","bgcolor","CircularProgress","sx","background","p","Paper","elevation","maxWidth","width","borderRadius","overflow","Grid","container","item","xs","md","flexDirection","BusinessIcon","fontSize","mb","opacity","fontWeight","textAlign","gutterBottom","mt","Alert","severity","onSubmit","async","preventDefault","validateLoginForm","result","validateForm","required","minLength","errors","isValid","_location$state2","_location$state2$from","console","TextField","fullWidth","label","onChange","helperText","margin","InputProps","startAdornment","InputAdornment","PersonIcon","type","LockIcon","endAdornment","IconButton","onClick","edge","VisibilityOff","Visibility","Button","disabled","py","Divider","my","spacing","Card","cursor","boxShadow","border","borderColor","CardContent","validateField","rules","trim","length","maxLength","pattern","test","min","max","custom","data","fieldRules","Object","entries","keys","validationPatterns","email","phone","phoneUS","postalCode","zipCode","url","alphanumeric","currency","jobNumber","invoiceNumber","strongPassword","commonValidationRules","message","emailRule","phoneRule","currencyRule","undefined","duration","customerName","address","description","formatPhoneNumber","digits","slice"],"sourceRoot":""}