{"version":3,"file":"static/js/510.1aa493dd.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js","../node_modules/@mui/icons-material/esm/Assessment.js","../node_modules/@mui/icons-material/esm/TrendingDown.js","../node_modules/@mui/icons-material/esm/Build.js","components/AnalyticsDashboard.tsx","../node_modules/@mui/icons-material/esm/TrendingUp.js","../node_modules/@mui/icons-material/esm/AttachMoney.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4,\n  _t5,\n  _t6;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color)\n}, ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n  backgroundColor: 'none',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'currentColor',\n    opacity: 0.3\n  }\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: 'transparent'\n}, ownerState.variant === 'query' && {\n  transform: 'rotate(180deg)'\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return _extends({\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%'\n  }, ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }, {\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  });\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.variant === 'determinate' && {\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}, ownerState.variant === 'buffer' && {\n  zIndex: 1,\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left'\n}, ownerState.variant !== 'buffer' && {\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  opacity: 0.3\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: getColorShade(theme, ownerState.color),\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      value,\n      valueBuffer,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const isRtl = useRtl();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other, {\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2M9 17H7v-7h2zm4 0h-2V7h2zm4 0h-2v-4h2z\"\n}), 'Assessment');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 18 2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z\"\n}), 'TrendingDown');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m22.7 19-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4\"\n}), 'Build');","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Alert,\n  LinearProgress,\n  Chip\n} from '@mui/material';\nimport {\n  TrendingUp as TrendingUpIcon,\n  TrendingDown as TrendingDownIcon,\n  AttachMoney as MoneyIcon,\n  People as PeopleIcon,\n  Build as BuildIcon,\n  Assessment as AssessmentIcon\n} from '@mui/icons-material';\n\ninterface BusinessMetrics {\n  totalCustomers: number;\n  activeJobs: number;\n  monthlyRevenue: number;\n  pendingInvoices: number;\n  technicianUtilization: number;\n  customerSatisfaction: number;\n}\n\ninterface FinancialData {\n  totalRevenue: number;\n  totalOutstanding: number;\n  averageInvoiceAmount: number;\n  paymentProcessingTime: number;\n  revenueTrend: Array<{ month: string; revenue: number }>;\n  topCustomers: Array<{ id: number; name: string; totalSpent: number }>;\n}\n\ninterface TechnicianPerformance {\n  id: number;\n  name: string;\n  jobsCompleted: number;\n  revenueGenerated: number;\n  customerRating: number;\n  utilizationRate: number;\n}\n\nconst AnalyticsDashboard: React.FC = () => {\n  const [businessMetrics, setBusinessMetrics] = useState<BusinessMetrics | null>(null);\n  const [financialData, setFinancialData] = useState<FinancialData | null>(null);\n  const [technicianPerformance, setTechnicianPerformance] = useState<TechnicianPerformance[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Demo data\n  const demoBusinessMetrics: BusinessMetrics = {\n    totalCustomers: 142,\n    activeJobs: 8,\n    monthlyRevenue: 12450.00,\n    pendingInvoices: 3,\n    technicianUtilization: 85.5,\n    customerSatisfaction: 4.6\n  };\n\n  const demoFinancialData: FinancialData = {\n    totalRevenue: 145670.00,\n    totalOutstanding: 3240.00,\n    averageInvoiceAmount: 485.50,\n    paymentProcessingTime: 5.2,\n    revenueTrend: [\n      { month: '2023-08', revenue: 8200 },\n      { month: '2023-09', revenue: 9800 },\n      { month: '2023-10', revenue: 11200 },\n      { month: '2023-11', revenue: 10500 },\n      { month: '2023-12', revenue: 13400 },\n      { month: '2024-01', revenue: 12450 }\n    ],\n    topCustomers: [\n      { id: 1, name: 'ABC Corporation', totalSpent: 8900.00 },\n      { id: 2, name: 'Smith Family Trust', totalSpent: 4200.00 },\n      { id: 3, name: 'Downtown Apartments', totalSpent: 3800.00 },\n      { id: 4, name: 'Main Street Mall', totalSpent: 3200.00 },\n      { id: 5, name: 'Johnson Residence', totalSpent: 2100.00 }\n    ]\n  };\n\n  const demoTechnicianPerformance: TechnicianPerformance[] = [\n    {\n      id: 1,\n      name: 'Mike Johnson',\n      jobsCompleted: 45,\n      revenueGenerated: 28500.00,\n      customerRating: 4.8,\n      utilizationRate: 92.0\n    },\n    {\n      id: 2,\n      name: 'Tom Wilson',\n      jobsCompleted: 38,\n      revenueGenerated: 24200.00,\n      customerRating: 4.6,\n      utilizationRate: 87.5\n    },\n    {\n      id: 3,\n      name: 'Steve Miller',\n      jobsCompleted: 32,\n      revenueGenerated: 19800.00,\n      customerRating: 4.4,\n      utilizationRate: 78.0\n    }\n  ];\n\n  const loadAnalyticsData = async () => {\n    try {\n      setLoading(true);\n      \n      // API URL from environment variable or default to localhost\n      const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n      \n      // Fetch data from backend in parallel\n      const [businessOverviewResponse, financialSummaryResponse, operationalMetricsResponse] = await Promise.all([\n        axios.get(`${API_BASE_URL}/analytics/analytics/business_overview/`),\n        axios.get(`${API_BASE_URL}/analytics/analytics/financial_summary/`),\n        axios.get(`${API_BASE_URL}/analytics/analytics/operational_metrics/`),\n      ]);\n      \n      // Set business metrics\n      setBusinessMetrics({\n        totalCustomers: businessOverviewResponse.data.total_customers,\n        activeJobs: businessOverviewResponse.data.active_jobs,\n        monthlyRevenue: businessOverviewResponse.data.monthly_revenue,\n        pendingInvoices: businessOverviewResponse.data.pending_invoices,\n        technicianUtilization: businessOverviewResponse.data.technician_utilization,\n        customerSatisfaction: businessOverviewResponse.data.customer_satisfaction\n      });\n      \n      // Set financial data\n      setFinancialData({\n        totalRevenue: financialSummaryResponse.data.total_revenue,\n        totalOutstanding: financialSummaryResponse.data.total_outstanding,\n        averageInvoiceAmount: financialSummaryResponse.data.average_invoice_amount,\n        paymentProcessingTime: financialSummaryResponse.data.payment_processing_time,\n        revenueTrend: financialSummaryResponse.data.revenue_trend.map((item: any) => ({\n          month: item.month,\n          revenue: item.revenue\n        })),\n        topCustomers: financialSummaryResponse.data.top_customers.map((customer: any) => ({\n          id: customer.id,\n          name: `${customer.first_name} ${customer.last_name}`,\n          totalSpent: customer.total_spent\n        }))\n      });\n      \n      // Set technician performance data from operational metrics\n      if (operationalMetricsResponse.data.technician_productivity && \n          operationalMetricsResponse.data.technician_productivity.length > 0) {\n        \n        const techPerformance = operationalMetricsResponse.data.technician_productivity.map((tech: any) => ({\n          id: tech.id,\n          name: `${tech.user__first_name} ${tech.user__last_name}`,\n          jobsCompleted: tech.job_count || 0,\n          revenueGenerated: tech.revenue || 0,\n          customerRating: 4.5, // This would ideally come from customer ratings\n          utilizationRate: businessOverviewResponse.data.technician_utilization || 85.5\n        }));\n        \n        setTechnicianPerformance(techPerformance);\n      } else {\n        // Fallback to demo data if API doesn't return proper data\n        setTechnicianPerformance(demoTechnicianPerformance);\n      }\n      \n      setLoading(false);\n    } catch (err) {\n      console.error('Error loading analytics data:', err);\n      // Fallback to demo data in case of API error\n      setBusinessMetrics(demoBusinessMetrics);\n      setFinancialData(demoFinancialData);\n      setTechnicianPerformance(demoTechnicianPerformance);\n      setError('Failed to load live analytics data - showing demo data');\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadAnalyticsData();\n  }, []);\n\n  const getPerformanceColor = (value: number, threshold: number) => {\n    if (value >= threshold) return 'success';\n    if (value >= threshold * 0.8) return 'warning';\n    return 'error';\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n\n  const calculateRevenueGrowth = () => {\n    if (!financialData || financialData.revenueTrend.length < 2) return 0;\n    const current = financialData.revenueTrend[financialData.revenueTrend.length - 1].revenue;\n    const previous = financialData.revenueTrend[financialData.revenueTrend.length - 2].revenue;\n    return ((current - previous) / previous) * 100;\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <Typography>Loading analytics data...</Typography>\n      </Box>\n    );\n  }\n\n  if (!businessMetrics || !financialData) {\n    return (\n      <Box>\n        <Alert severity=\"error\">Failed to load analytics data</Alert>\n      </Box>\n    );\n  }\n\n  const revenueGrowth = calculateRevenueGrowth();\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Analytics Dashboard\n        </Typography>\n        <Button variant=\"contained\" startIcon={<AssessmentIcon />}>\n          Generate Report\n        </Button>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Key Performance Indicators */}\n      <Typography variant=\"h5\" sx={{ mb: 2 }}>Key Performance Indicators</Typography>\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Box>\n                  <Typography variant=\"h6\" color=\"text.secondary\">\n                    Total Customers\n                  </Typography>\n                  <Typography variant=\"h4\">\n                    {businessMetrics.totalCustomers}\n                  </Typography>\n                </Box>\n                <PeopleIcon color=\"primary\" sx={{ fontSize: 40 }} />\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n        \n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Box>\n                  <Typography variant=\"h6\" color=\"text.secondary\">\n                    Monthly Revenue\n                  </Typography>\n                  <Typography variant=\"h4\" color=\"success.main\">\n                    {formatCurrency(businessMetrics.monthlyRevenue)}\n                  </Typography>\n                  <Box display=\"flex\" alignItems=\"center\" mt={1}>\n                    {revenueGrowth > 0 ? (\n                      <TrendingUpIcon color=\"success\" fontSize=\"small\" />\n                    ) : (\n                      <TrendingDownIcon color=\"error\" fontSize=\"small\" />\n                    )}\n                    <Typography variant=\"body2\" color={revenueGrowth > 0 ? 'success.main' : 'error.main'}>\n                      {Math.abs(revenueGrowth).toFixed(1)}%\n                    </Typography>\n                  </Box>\n                </Box>\n                <MoneyIcon color=\"success\" sx={{ fontSize: 40 }} />\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Box>\n                  <Typography variant=\"h6\" color=\"text.secondary\">\n                    Active Jobs\n                  </Typography>\n                  <Typography variant=\"h4\" color=\"primary\">\n                    {businessMetrics.activeJobs}\n                  </Typography>\n                </Box>\n                <BuildIcon color=\"primary\" sx={{ fontSize: 40 }} />\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Box>\n                  <Typography variant=\"h6\" color=\"text.secondary\">\n                    Customer Rating\n                  </Typography>\n                  <Typography variant=\"h4\" color=\"warning.main\">\n                    {businessMetrics.customerSatisfaction.toFixed(1)}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    out of 5.0\n                  </Typography>\n                </Box>\n                <Box sx={{ textAlign: 'center' }}>\n                  {'★'.repeat(Math.floor(businessMetrics.customerSatisfaction))}\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Financial Overview */}\n      <Typography variant=\"h5\" sx={{ mb: 2 }}>Financial Overview</Typography>\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} md={8}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>Revenue Trend (Last 6 Months)</Typography>\n              <Box sx={{ height: 200, display: 'flex', alignItems: 'end', gap: 2 }}>\n                {financialData.revenueTrend.map((data, index) => {\n                  const maxRevenue = Math.max(...financialData.revenueTrend.map(d => d.revenue));\n                  const height = (data.revenue / maxRevenue) * 180;\n                  return (\n                    <Box key={index} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', flex: 1 }}>\n                      <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                        {formatCurrency(data.revenue)}\n                      </Typography>\n                      <Box\n                        sx={{\n                          width: '100%',\n                          height: `${height}px`,\n                          backgroundColor: 'primary.main',\n                          borderRadius: 1\n                        }}\n                      />\n                      <Typography variant=\"caption\" sx={{ mt: 1 }}>\n                        {new Date(data.month + '-01').toLocaleDateString('en-US', { month: 'short' })}\n                      </Typography>\n                    </Box>\n                  );\n                })}\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Card sx={{ mb: 2 }}>\n            <CardContent>\n              <Typography variant=\"h6\" color=\"text.secondary\">\n                Total Revenue\n              </Typography>\n              <Typography variant=\"h4\" color=\"success.main\">\n                {formatCurrency(financialData.totalRevenue)}\n              </Typography>\n            </CardContent>\n          </Card>\n          \n          <Card sx={{ mb: 2 }}>\n            <CardContent>\n              <Typography variant=\"h6\" color=\"text.secondary\">\n                Outstanding Amount\n              </Typography>\n              <Typography variant=\"h4\" color=\"warning.main\">\n                {formatCurrency(financialData.totalOutstanding)}\n              </Typography>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" color=\"text.secondary\">\n                Avg Invoice Amount\n              </Typography>\n              <Typography variant=\"h4\" color=\"primary\">\n                {formatCurrency(financialData.averageInvoiceAmount)}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Technician Performance */}\n      <Typography variant=\"h5\" sx={{ mb: 2 }}>Technician Performance</Typography>\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} md={8}>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Technician</TableCell>\n                  <TableCell>Jobs Completed</TableCell>\n                  <TableCell>Revenue Generated</TableCell>\n                  <TableCell>Customer Rating</TableCell>\n                  <TableCell>Utilization Rate</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {technicianPerformance.map((tech) => (\n                  <TableRow key={tech.id}>\n                    <TableCell>\n                      <Typography variant=\"body2\" fontWeight=\"bold\">\n                        {tech.name}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>{tech.jobsCompleted}</TableCell>\n                    <TableCell>{formatCurrency(tech.revenueGenerated)}</TableCell>\n                    <TableCell>\n                      <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                        <Typography variant=\"body2\">{tech.customerRating.toFixed(1)}</Typography>\n                        <Chip\n                          label={tech.customerRating >= 4.5 ? 'Excellent' : tech.customerRating >= 4.0 ? 'Good' : 'Fair'}\n                          color={tech.customerRating >= 4.5 ? 'success' : tech.customerRating >= 4.0 ? 'primary' : 'warning'}\n                          size=\"small\"\n                        />\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                        <LinearProgress\n                          variant=\"determinate\"\n                          value={tech.utilizationRate}\n                          color={getPerformanceColor(tech.utilizationRate, 85) as any}\n                          sx={{ width: 60, height: 8 }}\n                        />\n                        <Typography variant=\"body2\">\n                          {tech.utilizationRate.toFixed(1)}%\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>Top Customers by Revenue</Typography>\n              {financialData.topCustomers.map((customer, index) => (\n                <Box key={customer.id} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" sx={{ mb: 1 }}>\n                  <Box>\n                    <Typography variant=\"body2\" fontWeight=\"bold\">\n                      #{index + 1} {customer.name}\n                    </Typography>\n                  </Box>\n                  <Typography variant=\"body2\" color=\"success.main\">\n                    {formatCurrency(customer.totalSpent)}\n                  </Typography>\n                </Box>\n              ))}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Operational Metrics */}\n      <Typography variant=\"h5\" sx={{ mb: 2 }}>Operational Metrics</Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" color=\"text.secondary\">\n                Technician Utilization\n              </Typography>\n              <Box display=\"flex\" alignItems=\"center\" gap={2} mt={1}>\n                <LinearProgress\n                  variant=\"determinate\"\n                  value={businessMetrics.technicianUtilization}\n                  color={getPerformanceColor(businessMetrics.technicianUtilization, 80) as any}\n                  sx={{ width: 100, height: 10 }}\n                />\n                <Typography variant=\"h5\">\n                  {businessMetrics.technicianUtilization.toFixed(1)}%\n                </Typography>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" color=\"text.secondary\">\n                Pending Invoices\n              </Typography>\n              <Typography variant=\"h4\" color={businessMetrics.pendingInvoices > 5 ? 'warning.main' : 'primary'}>\n                {businessMetrics.pendingInvoices}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" color=\"text.secondary\">\n                Avg Payment Time\n              </Typography>\n              <Typography variant=\"h4\" color=\"info.main\">\n                {financialData.paymentProcessingTime.toFixed(1)} days\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" color=\"text.secondary\">\n                First-Time Fix Rate\n              </Typography>\n              <Typography variant=\"h4\" color=\"success.main\">\n                92.3%\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default AnalyticsDashboard;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4\"\n}), 'AttachMoney');"],"names":["getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_excluded","_t","_t2","_t3","_t4","_t5","_t6","indeterminate1Keyframe","keyframes","_taggedTemplateLiteral","indeterminate2Keyframe","bufferKeyframe","getColorShade","theme","color","vars","palette","LinearProgress","concat","mode","lighten","main","darken","LinearProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","variant","_ref","_extends","position","overflow","display","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","_ref2","marginTop","width","backgroundImage","backgroundSize","backgroundPosition","css","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","_ref3","transition","transformOrigin","_ref4","LinearProgressBar2","bar2Indeterminate","bar2Buffer","_ref5","_ref6","React","inProps","ref","useDefaultProps","className","value","valueBuffer","other","_objectWithoutPropertiesLoose","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","isRtl","useRtl","rootProps","inlineStyles","undefined","Math","round","process","_jsxs","clsx","role","children","_jsx","style","createSvgIcon","d","AnalyticsDashboard","businessMetrics","setBusinessMetrics","useState","financialData","setFinancialData","technicianPerformance","setTechnicianPerformance","loading","setLoading","error","setError","demoBusinessMetrics","totalCustomers","activeJobs","monthlyRevenue","pendingInvoices","technicianUtilization","customerSatisfaction","demoFinancialData","totalRevenue","totalOutstanding","averageInvoiceAmount","paymentProcessingTime","revenueTrend","month","revenue","topCustomers","id","totalSpent","demoTechnicianPerformance","jobsCompleted","revenueGenerated","customerRating","utilizationRate","useEffect","async","API_BASE_URL","businessOverviewResponse","financialSummaryResponse","operationalMetricsResponse","Promise","all","axios","get","data","total_customers","active_jobs","monthly_revenue","pending_invoices","technician_utilization","customer_satisfaction","total_revenue","total_outstanding","average_invoice_amount","payment_processing_time","revenue_trend","map","item","top_customers","customer","first_name","last_name","total_spent","technician_productivity","length","techPerformance","tech","user__first_name","user__last_name","job_count","err","console","loadAnalyticsData","getPerformanceColor","threshold","formatCurrency","amount","Intl","NumberFormat","currency","format","Box","justifyContent","alignItems","minHeight","Typography","Alert","severity","revenueGrowth","calculateRevenueGrowth","current","previous","mb","component","Button","startIcon","AssessmentIcon","sx","Grid","container","spacing","xs","sm","md","Card","CardContent","PeopleIcon","fontSize","mt","TrendingUpIcon","TrendingDownIcon","abs","toFixed","MoneyIcon","BuildIcon","textAlign","repeat","floor","gap","index","maxRevenue","max","flexDirection","flex","borderRadius","Date","toLocaleDateString","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","fontWeight","Chip","label","size"],"sourceRoot":""}