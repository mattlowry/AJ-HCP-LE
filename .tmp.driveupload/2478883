{"version":3,"file":"static/js/603.8f5343e1.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/Send.js","../node_modules/@mui/icons-material/esm/Print.js","components/BillingInvoices.tsx","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3m-3 11H8v-5h8zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1m-1-9H6v4h12z\"\n}), 'Print');","import React, { useState, useEffect } from 'react';\nimport { billingApi } from '../services/api';\nimport { validateForm, commonValidationRules, validationPatterns, formatCurrency } from '../utils/validation';\nimport { Invoice, Estimate, Payment } from '../types/billing';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Button,\n  Chip,\n  TextField,\n  MenuItem,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Alert,\n  Tabs,\n  Tab,\n  CircularProgress\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Visibility as ViewIcon,\n  Search as SearchIcon,\n  Receipt as ReceiptIcon,\n  Send as SendIcon,\n  Print as PrintIcon\n} from '@mui/icons-material';\n\ninterface LocalInvoice {\n  id: number;\n  invoice_number: string;\n  customer_name: string;\n  customer_email: string;\n  job_number?: string;\n  status: string;\n  invoice_date: string;\n  due_date: string;\n  subtotal: number;\n  tax_amount: number;\n  total_amount: number;\n  amount_paid: number;\n  amount_due: number;\n  created_at: string;\n}\n\ninterface LocalEstimate {\n  id: number;\n  estimate_number: string;\n  customer_name: string;\n  customer_email: string;\n  status: string;\n  estimate_date: string;\n  expiration_date: string;\n  subtotal: number;\n  tax_amount: number;\n  total_amount: number;\n  created_at: string;\n}\n\ninterface LocalPayment {\n  id: number;\n  reference_number: string;\n  invoice_number: string;\n  customer_name: string;\n  amount: number;\n  payment_method: string;\n  payment_date: string;\n  status: string;\n}\n\nconst BillingInvoices: React.FC = () => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [invoices, setInvoices] = useState<LocalInvoice[]>([]);\n  const [estimates, setEstimates] = useState<LocalEstimate[]>([]);\n  const [payments, setPayments] = useState<LocalPayment[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n\n  // Demo data\n  const demoInvoices: LocalInvoice[] = [\n    {\n      id: 1,\n      invoice_number: 'INV-2024-0001',\n      customer_name: 'John Smith',\n      customer_email: 'john.smith@email.com',\n      job_number: 'JOB-2024-0001',\n      status: 'sent',\n      invoice_date: '2024-01-15',\n      due_date: '2024-02-14',\n      subtotal: 150.00,\n      tax_amount: 12.00,\n      total_amount: 162.00,\n      amount_paid: 0.00,\n      amount_due: 162.00,\n      created_at: '2024-01-15T10:00:00Z'\n    },\n    {\n      id: 2,\n      invoice_number: 'INV-2024-0002',\n      customer_name: 'Sarah Davis',\n      customer_email: 'sarah.davis@email.com',\n      job_number: 'JOB-2024-0002',\n      status: 'paid',\n      invoice_date: '2024-01-12',\n      due_date: '2024-02-11',\n      subtotal: 800.00,\n      tax_amount: 64.00,\n      total_amount: 864.00,\n      amount_paid: 864.00,\n      amount_due: 0.00,\n      created_at: '2024-01-12T14:30:00Z'\n    },\n    {\n      id: 3,\n      invoice_number: 'INV-2024-0003',\n      customer_name: 'Robert Brown',\n      customer_email: 'robert.brown@email.com',\n      job_number: 'JOB-2024-0003',\n      status: 'overdue',\n      invoice_date: '2024-01-05',\n      due_date: '2024-01-20',\n      subtotal: 450.00,\n      tax_amount: 36.00,\n      total_amount: 486.00,\n      amount_paid: 0.00,\n      amount_due: 486.00,\n      created_at: '2024-01-05T09:15:00Z'\n    }\n  ];\n\n  const demoEstimates: LocalEstimate[] = [\n    {\n      id: 1,\n      estimate_number: 'EST-2024-0001',\n      customer_name: 'Lisa Garcia',\n      customer_email: 'lisa.garcia@email.com',\n      status: 'sent',\n      estimate_date: '2024-01-10',\n      expiration_date: '2024-02-10',\n      subtotal: 1200.00,\n      tax_amount: 96.00,\n      total_amount: 1296.00,\n      created_at: '2024-01-10T11:00:00Z'\n    },\n    {\n      id: 2,\n      estimate_number: 'EST-2024-0002',\n      customer_name: 'Mark Wilson',\n      customer_email: 'mark.wilson@email.com',\n      status: 'accepted',\n      estimate_date: '2024-01-08',\n      expiration_date: '2024-02-08',\n      subtotal: 300.00,\n      tax_amount: 24.00,\n      total_amount: 324.00,\n      created_at: '2024-01-08T16:20:00Z'\n    }\n  ];\n\n  const demoPayments: LocalPayment[] = [\n    {\n      id: 1,\n      reference_number: 'PAY-2024-0001',\n      invoice_number: 'INV-2024-0002',\n      customer_name: 'Sarah Davis',\n      amount: 864.00,\n      payment_method: 'credit_card',\n      payment_date: '2024-01-14',\n      status: 'completed'\n    },\n    {\n      id: 2,\n      reference_number: 'PAY-2024-0002',\n      invoice_number: 'INV-2024-0001',\n      customer_name: 'John Smith',\n      amount: 100.00,\n      payment_method: 'check',\n      payment_date: '2024-01-16',\n      status: 'pending'\n    }\n  ];\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      // For demo purposes, use demo data directly\n      // TODO: Uncomment API calls when backend is fully integrated\n      /*\n      const [invoicesResponse, estimatesResponse, paymentsResponse] = await Promise.all([\n        billingApi.getInvoices(),\n        billingApi.getEstimates(),\n        billingApi.getPayments()\n      ]);\n      \n      setInvoices(invoicesResponse.data.results);\n      setEstimates(estimatesResponse.data.results);\n      setPayments(paymentsResponse.data.results);\n      */\n      \n      // Using demo data\n      setInvoices(demoInvoices);\n      setEstimates(demoEstimates);\n      setPayments(demoPayments);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error loading billing data:', err);\n      setError('Failed to load billing data. Using demo data.');\n      // Fallback to demo data if API fails\n      setInvoices(demoInvoices);\n      setEstimates(demoEstimates);\n      setPayments(demoPayments);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'draft': return 'default';\n      case 'sent': return 'info';\n      case 'viewed': return 'warning';\n      case 'paid': return 'success';\n      case 'overdue': return 'error';\n      case 'accepted': return 'success';\n      case 'declined': return 'error';\n      case 'expired': return 'error';\n      case 'completed': return 'success';\n      case 'pending': return 'warning';\n      default: return 'default';\n    }\n  };\n\n  const filteredInvoices = invoices.filter(invoice => {\n    const matchesSearch = invoice.invoice_number.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         invoice.customer_name.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === '' || invoice.status === statusFilter;\n    return matchesSearch && matchesStatus;\n  });\n\n  const filteredEstimates = estimates.filter(estimate => {\n    const matchesSearch = estimate.estimate_number.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         estimate.customer_name.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === '' || estimate.status === statusFilter;\n    return matchesSearch && matchesStatus;\n  });\n\n  const filteredPayments = payments.filter(payment => {\n    const matchesSearch = payment.reference_number.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         payment.customer_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         payment.invoice_number.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === '' || payment.status === statusFilter;\n    return matchesSearch && matchesStatus;\n  });\n\n  const calculateTotals = () => {\n    const totalRevenue = invoices.filter(inv => inv.status === 'paid').reduce((sum, inv) => sum + inv.total_amount, 0);\n    const outstandingAmount = invoices.filter(inv => inv.status !== 'paid').reduce((sum, inv) => sum + inv.amount_due, 0);\n    const overdueAmount = invoices.filter(inv => inv.status === 'overdue').reduce((sum, inv) => sum + inv.amount_due, 0);\n    const pendingEstimates = estimates.filter(est => est.status === 'sent').reduce((sum, est) => sum + est.total_amount, 0);\n\n    return { totalRevenue, outstandingAmount, overdueAmount, pendingEstimates };\n  };\n\n  const totals = calculateTotals();\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress size={40} sx={{ mb: 2 }} />\n        <Typography variant=\"h6\" color=\"textSecondary\">Loading billing data...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Billing & Invoicing\n        </Typography>\n        <Box>\n          <Button\n            variant=\"outlined\"\n            startIcon={<ReceiptIcon />}\n            sx={{ mr: 1 }}\n          >\n            New Estimate\n          </Button>\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n          >\n            New Invoice\n          </Button>\n        </Box>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Summary Cards */}\n      <Grid container spacing={3} sx={{ mb: 3 }}>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" color=\"success.main\">Total Revenue</Typography>\n              <Typography variant=\"h4\">\n                ${totals.totalRevenue.toFixed(2)}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" color=\"warning.main\">Outstanding</Typography>\n              <Typography variant=\"h4\">\n                ${totals.outstandingAmount.toFixed(2)}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" color=\"error.main\">Overdue</Typography>\n              <Typography variant=\"h4\">\n                ${totals.overdueAmount.toFixed(2)}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" color=\"info.main\">Pending Estimates</Typography>\n              <Typography variant=\"h4\">\n                ${totals.pendingEstimates.toFixed(2)}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Filters */}\n      <Grid container spacing={2} sx={{ mb: 3 }}>\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"Search...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            InputProps={{\n              startAdornment: <SearchIcon color=\"action\" sx={{ mr: 1 }} />\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <TextField\n            select\n            fullWidth\n            label=\"Status\"\n            value={statusFilter}\n            onChange={(e) => setStatusFilter(e.target.value)}\n          >\n            <MenuItem value=\"\">All Statuses</MenuItem>\n            <MenuItem value=\"draft\">Draft</MenuItem>\n            <MenuItem value=\"sent\">Sent</MenuItem>\n            <MenuItem value=\"paid\">Paid</MenuItem>\n            <MenuItem value=\"overdue\">Overdue</MenuItem>\n            <MenuItem value=\"accepted\">Accepted</MenuItem>\n            <MenuItem value=\"declined\">Declined</MenuItem>\n          </TextField>\n        </Grid>\n      </Grid>\n\n      {/* Tabs */}\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)}>\n          <Tab label={`Invoices (${invoices.length})`} />\n          <Tab label={`Estimates (${estimates.length})`} />\n          <Tab label={`Payments (${payments.length})`} />\n        </Tabs>\n      </Box>\n\n      {/* Invoices Tab */}\n      {activeTab === 0 && (\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Invoice #</TableCell>\n                <TableCell>Customer</TableCell>\n                <TableCell>Job #</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Invoice Date</TableCell>\n                <TableCell>Due Date</TableCell>\n                <TableCell>Total Amount</TableCell>\n                <TableCell>Amount Due</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredInvoices.map((invoice) => (\n                <TableRow key={invoice.id}>\n                  <TableCell>\n                    <Typography variant=\"body2\" fontWeight=\"bold\">\n                      {invoice.invoice_number}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box>\n                      <Typography variant=\"body2\">{invoice.customer_name}</Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        {invoice.customer_email}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>{invoice.job_number || '-'}</TableCell>\n                  <TableCell>\n                    <Chip\n                      label={invoice.status}\n                      color={getStatusColor(invoice.status) as any}\n                      size=\"small\"\n                      sx={{ textTransform: 'capitalize' }}\n                    />\n                  </TableCell>\n                  <TableCell>{new Date(invoice.invoice_date).toLocaleDateString()}</TableCell>\n                  <TableCell>{new Date(invoice.due_date).toLocaleDateString()}</TableCell>\n                  <TableCell>${invoice.total_amount.toFixed(2)}</TableCell>\n                  <TableCell>\n                    <Typography \n                      color={invoice.amount_due > 0 ? 'error.main' : 'success.main'}\n                      fontWeight=\"bold\"\n                    >\n                      ${invoice.amount_due.toFixed(2)}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box display=\"flex\" gap={1}>\n                      <IconButton size=\"small\" color=\"primary\">\n                        <ViewIcon />\n                      </IconButton>\n                      <IconButton size=\"small\" color=\"primary\">\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton size=\"small\" color=\"info\">\n                        <SendIcon />\n                      </IconButton>\n                      <IconButton size=\"small\" color=\"secondary\">\n                        <PrintIcon />\n                      </IconButton>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n\n      {/* Estimates Tab */}\n      {activeTab === 1 && (\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Estimate #</TableCell>\n                <TableCell>Customer</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Estimate Date</TableCell>\n                <TableCell>Expiration Date</TableCell>\n                <TableCell>Total Amount</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredEstimates.map((estimate) => (\n                <TableRow key={estimate.id}>\n                  <TableCell>\n                    <Typography variant=\"body2\" fontWeight=\"bold\">\n                      {estimate.estimate_number}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box>\n                      <Typography variant=\"body2\">{estimate.customer_name}</Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        {estimate.customer_email}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      label={estimate.status}\n                      color={getStatusColor(estimate.status) as any}\n                      size=\"small\"\n                      sx={{ textTransform: 'capitalize' }}\n                    />\n                  </TableCell>\n                  <TableCell>{new Date(estimate.estimate_date).toLocaleDateString()}</TableCell>\n                  <TableCell>{new Date(estimate.expiration_date).toLocaleDateString()}</TableCell>\n                  <TableCell>${estimate.total_amount.toFixed(2)}</TableCell>\n                  <TableCell>\n                    <Box display=\"flex\" gap={1}>\n                      <IconButton size=\"small\" color=\"primary\">\n                        <ViewIcon />\n                      </IconButton>\n                      <IconButton size=\"small\" color=\"primary\">\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton size=\"small\" color=\"info\">\n                        <SendIcon />\n                      </IconButton>\n                      <IconButton size=\"small\" color=\"secondary\">\n                        <PrintIcon />\n                      </IconButton>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n\n      {/* Payments Tab */}\n      {activeTab === 2 && (\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Payment #</TableCell>\n                <TableCell>Invoice #</TableCell>\n                <TableCell>Customer</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Method</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredPayments.map((payment) => (\n                <TableRow key={payment.id}>\n                  <TableCell>\n                    <Typography variant=\"body2\" fontWeight=\"bold\">\n                      {payment.reference_number}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>{payment.invoice_number}</TableCell>\n                  <TableCell>{payment.customer_name}</TableCell>\n                  <TableCell>${payment.amount.toFixed(2)}</TableCell>\n                  <TableCell sx={{ textTransform: 'capitalize' }}>\n                    {payment.payment_method.replace('_', ' ')}\n                  </TableCell>\n                  <TableCell>{new Date(payment.payment_date).toLocaleDateString()}</TableCell>\n                  <TableCell>\n                    <Chip\n                      label={payment.status}\n                      color={getStatusColor(payment.status) as any}\n                      size=\"small\"\n                      sx={{ textTransform: 'capitalize' }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box display=\"flex\" gap={1}>\n                      <IconButton size=\"small\" color=\"primary\">\n                        <ViewIcon />\n                      </IconButton>\n                      <IconButton size=\"small\" color=\"primary\">\n                        <EditIcon />\n                      </IconButton>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </Box>\n  );\n};\n\nexport default BillingInvoices;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["createSvgIcon","_jsx","d","BillingInvoices","activeTab","setActiveTab","useState","invoices","setInvoices","estimates","setEstimates","payments","setPayments","loading","setLoading","error","setError","searchTerm","setSearchTerm","statusFilter","setStatusFilter","demoInvoices","id","invoice_number","customer_name","customer_email","job_number","status","invoice_date","due_date","subtotal","tax_amount","total_amount","amount_paid","amount_due","created_at","demoEstimates","estimate_number","estimate_date","expiration_date","demoPayments","reference_number","amount","payment_method","payment_date","useEffect","async","err","console","loadData","getStatusColor","filteredInvoices","filter","invoice","matchesSearch","toLowerCase","includes","matchesStatus","filteredEstimates","estimate","filteredPayments","payment","totals","totalRevenue","inv","reduce","sum","outstandingAmount","overdueAmount","pendingEstimates","est","_jsxs","Box","display","flexDirection","justifyContent","alignItems","minHeight","children","CircularProgress","size","sx","mb","Typography","variant","color","component","Button","startIcon","ReceiptIcon","mr","AddIcon","Alert","severity","Grid","container","spacing","item","xs","sm","md","Card","CardContent","toFixed","TextField","fullWidth","label","value","onChange","e","target","InputProps","startAdornment","SearchIcon","select","MenuItem","borderBottom","borderColor","Tabs","newValue","Tab","concat","length","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","fontWeight","Chip","textTransform","Date","toLocaleDateString","gap","IconButton","ViewIcon","EditIcon","SendIcon","PrintIcon","replace"],"sourceRoot":""}