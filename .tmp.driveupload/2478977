{"version":3,"file":"static/js/613.9da73f3b.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Lock.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/icons-material/esm/Badge.js","components/UserRegistration.tsx","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/Business.js","utils/validation.ts","../node_modules/@mui/icons-material/esm/ArrowBack.js","../node_modules/@mui/icons-material/esm/Email.js","../node_modules/@mui/icons-material/esm/Person.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1z\"\n}), 'Lock');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7M2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2m4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3z\"\n}), 'VisibilityOff');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 7h-5V4c0-1.1-.9-2-2-2h-2c-1.1 0-2 .9-2 2v3H4c-1.1 0-2 .9-2 2v11c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2M9 12c.83 0 1.5.67 1.5 1.5S9.83 15 9 15s-1.5-.67-1.5-1.5S8.17 12 9 12m3 6H6v-.75c0-1 2-1.5 3-1.5s3 .5 3 1.5zm1-9h-2V4h2zm5 7.5h-4V15h4zm0-3h-4V12h4z\"\n}), 'Badge');","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Alert,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  CircularProgress,\n  InputAdornment,\n  IconButton,\n  Card,\n  CardContent\n} from '@mui/material';\nimport {\n  Visibility,\n  VisibilityOff,\n  Person as PersonIcon,\n  Email as EmailIcon,\n  Lock as LockIcon,\n  Badge as BadgeIcon,\n  Business as BusinessIcon,\n  ArrowBack as ArrowBackIcon\n} from '@mui/icons-material';\nimport { validateForm, validationPatterns } from '../utils/validation';\n\ninterface RegistrationFormData {\n  username: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  role: 'technician' | 'customer';\n  phone?: string;\n  companyName?: string;\n}\n\nconst UserRegistration: React.FC = () => {\n  const navigate = useNavigate();\n  \n  const [formData, setFormData] = useState<RegistrationFormData>({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n    lastName: '',\n    role: 'customer',\n    phone: '',\n    companyName: ''\n  });\n  \n  const [formErrors, setFormErrors] = useState<Record<string, string>>({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\n\n  const handleInputChange = (field: keyof RegistrationFormData) => (\n    event: React.ChangeEvent<HTMLInputElement> | { target: { value: unknown } }\n  ) => {\n    const value = event.target.value as string;\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    \n    // Clear field error when user starts typing\n    if (formErrors[field]) {\n      setFormErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  const validateRegistrationForm = () => {\n    const validationRules = {\n      username: { required: true, minLength: 3 },\n      email: { required: true, pattern: validationPatterns.email },\n      password: { required: true, minLength: 8 },\n      confirmPassword: { required: true, minLength: 8 },\n      firstName: { required: true, minLength: 2 },\n      lastName: { required: true, minLength: 2 },\n      role: { required: true }\n    };\n    \n    const result = validateForm(formData, validationRules);\n    \n    // Custom validation for password confirmation\n    if (formData.password !== formData.confirmPassword) {\n      result.errors.confirmPassword = 'Passwords do not match';\n      result.isValid = false;\n    }\n    \n    setFormErrors(result.errors);\n    return result.isValid;\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    \n    if (!validateRegistrationForm()) {\n      return;\n    }\n\n    setSubmitting(true);\n    \n    try {\n      // Simulate API call for registration\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      console.log('Registration data:', formData);\n      setRegistrationSuccess(true);\n      \n      // Redirect to login after successful registration\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n      \n    } catch (error) {\n      console.error('Registration error:', error);\n      setFormErrors({ general: 'Registration failed. Please try again.' });\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  if (registrationSuccess) {\n    return (\n      <Box\n        sx={{\n          minHeight: '100vh',\n          background: 'linear-gradient(135deg, #1976d2 0%, #42a5f5 100%)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          p: 2\n        }}\n      >\n        <Card sx={{ maxWidth: 500, textAlign: 'center' }}>\n          <CardContent sx={{ p: 4 }}>\n            <Typography variant=\"h4\" color=\"success.main\" gutterBottom>\n              ✅ Registration Successful!\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              Your account has been created successfully.\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Redirecting to login page...\n            </Typography>\n            <CircularProgress sx={{ mt: 2 }} />\n          </CardContent>\n        </Card>\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      sx={{\n        minHeight: '100vh',\n        background: 'linear-gradient(135deg, #1976d2 0%, #42a5f5 100%)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        p: 2\n      }}\n    >\n      <Paper \n        elevation={10}\n        sx={{ \n          maxWidth: 600, \n          width: '100%',\n          borderRadius: 3,\n          overflow: 'hidden'\n        }}\n      >\n        <Box sx={{ p: 4 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n            <IconButton onClick={() => navigate('/login')} sx={{ mr: 1 }}>\n              <ArrowBackIcon />\n            </IconButton>\n            <Typography variant=\"h4\" fontWeight=\"bold\" color=\"primary\">\n              Create Account\n            </Typography>\n          </Box>\n          \n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n            Join AJ Long Electric Field Service Management\n          </Typography>\n\n          {formErrors.general && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {formErrors.general}\n            </Alert>\n          )}\n\n          <Box component=\"form\" onSubmit={handleSubmit}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"First Name\"\n                  value={formData.firstName}\n                  onChange={handleInputChange('firstName')}\n                  error={!!formErrors.firstName}\n                  helperText={formErrors.firstName}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <PersonIcon color=\"action\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              \n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Last Name\"\n                  value={formData.lastName}\n                  onChange={handleInputChange('lastName')}\n                  error={!!formErrors.lastName}\n                  helperText={formErrors.lastName}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <PersonIcon color=\"action\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Username\"\n                  value={formData.username}\n                  onChange={handleInputChange('username')}\n                  error={!!formErrors.username}\n                  helperText={formErrors.username}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <BadgeIcon color=\"action\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Email\"\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange('email')}\n                  error={!!formErrors.email}\n                  helperText={formErrors.email}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <EmailIcon color=\"action\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Password\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={formData.password}\n                  onChange={handleInputChange('password')}\n                  error={!!formErrors.password}\n                  helperText={formErrors.password || 'Minimum 8 characters'}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <LockIcon color=\"action\" />\n                      </InputAdornment>\n                    ),\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={() => setShowPassword(!showPassword)}\n                          edge=\"end\"\n                        >\n                          {showPassword ? <VisibilityOff /> : <Visibility />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Confirm Password\"\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange('confirmPassword')}\n                  error={!!formErrors.confirmPassword}\n                  helperText={formErrors.confirmPassword}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <LockIcon color=\"action\" />\n                      </InputAdornment>\n                    ),\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                          edge=\"end\"\n                        >\n                          {showConfirmPassword ? <VisibilityOff /> : <Visibility />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <FormControl fullWidth>\n                  <InputLabel>Account Type</InputLabel>\n                  <Select\n                    value={formData.role}\n                    label=\"Account Type\"\n                    onChange={handleInputChange('role')}\n                  >\n                    <MenuItem value=\"customer\">Customer</MenuItem>\n                    <MenuItem value=\"technician\">Technician</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              {formData.role === 'customer' && (\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Company Name (Optional)\"\n                    value={formData.companyName}\n                    onChange={handleInputChange('companyName')}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <BusinessIcon color=\"action\" />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n              )}\n            </Grid>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              size=\"large\"\n              disabled={submitting}\n              sx={{ mt: 3, mb: 2, py: 1.5 }}\n            >\n              {submitting ? <CircularProgress size={24} /> : 'Create Account'}\n            </Button>\n\n            <Typography variant=\"body2\" textAlign=\"center\" color=\"text.secondary\">\n              Already have an account?{' '}\n              <Button variant=\"text\" onClick={() => navigate('/login')}>\n                Sign In\n              </Button>\n            </Typography>\n          </Box>\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default UserRegistration;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7V3H2v18h20V7zM6 19H4v-2h2zm0-4H4v-2h2zm0-4H4V9h2zm0-4H4V5h2zm4 12H8v-2h2zm0-4H8v-2h2zm0-4H8V9h2zm0-4H8V5h2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8zm-2-8h-2v2h2zm0 4h-2v2h2z\"\n}), 'Business');","import React from 'react';\n\nexport interface ValidationRule {\n  required?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  pattern?: RegExp;\n  min?: number;\n  max?: number;\n  custom?: (value: any) => string | null;\n}\n\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: Record<string, string>;\n}\n\nexport const validateField = (value: any, rules: ValidationRule): string | null => {\n  if (rules.required && (!value || (typeof value === 'string' && value.trim() === ''))) {\n    return 'This field is required';\n  }\n\n  if (!value) return null;\n\n  if (rules.minLength && typeof value === 'string' && value.length < rules.minLength) {\n    return `Must be at least ${rules.minLength} characters`;\n  }\n\n  if (rules.maxLength && typeof value === 'string' && value.length > rules.maxLength) {\n    return `Must be no more than ${rules.maxLength} characters`;\n  }\n\n  if (rules.pattern && typeof value === 'string' && !rules.pattern.test(value)) {\n    return 'Invalid format';\n  }\n\n  if (rules.min && typeof value === 'number' && value < rules.min) {\n    return `Must be at least ${rules.min}`;\n  }\n\n  if (rules.max && typeof value === 'number' && value > rules.max) {\n    return `Must be no more than ${rules.max}`;\n  }\n\n  if (rules.custom) {\n    return rules.custom(value);\n  }\n\n  return null;\n};\n\nexport const validateForm = (data: Record<string, any>, rules: Record<string, ValidationRule>): ValidationResult => {\n  const errors: Record<string, string> = {};\n\n  for (const [field, fieldRules] of Object.entries(rules)) {\n    const error = validateField(data[field], fieldRules);\n    if (error) {\n      errors[field] = error;\n    }\n  }\n\n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors\n  };\n};\n\n// Common validation patterns\nexport const validationPatterns = {\n  email: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n  phone: /^[\\+]?[1-9][\\d]{0,15}$/,\n  phoneUS: /^(\\+1)?[\\s\\-]?\\(?([0-9]{3})\\)?[\\s\\-]?([0-9]{3})[\\s\\-]?([0-9]{4})$/,\n  postalCode: /^[A-Za-z]\\d[A-Za-z][ -]?\\d[A-Za-z]\\d$/,\n  zipCode: /^\\d{5}(-\\d{4})?$/,\n  url: /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$/,\n  alphanumeric: /^[a-zA-Z0-9]+$/,\n  currency: /^\\d+(\\.\\d{1,2})?$/,\n  jobNumber: /^JOB-\\d{4}-\\d{4}$/,\n  invoiceNumber: /^INV-\\d{4}-\\d{4}$/,\n  strongPassword: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n};\n\n// Helper functions to create validation rules\nexport const commonValidationRules = {\n  required: (message?: string): ValidationRule => ({\n    required: true,\n    custom: (value: any) => {\n      if (!value || (typeof value === 'string' && value.trim() === '')) {\n        return message || 'This field is required';\n      }\n      return null;\n    }\n  }),\n  \n  minLength: (length: number, message?: string): ValidationRule => ({\n    minLength: length,\n    custom: (value: string) => {\n      if (value && value.length < length) {\n        return message || `Must be at least ${length} characters`;\n      }\n      return null;\n    }\n  }),\n  \n  maxLength: (length: number, message?: string): ValidationRule => ({\n    maxLength: length,\n    custom: (value: string) => {\n      if (value && value.length > length) {\n        return message || `Must be no more than ${length} characters`;\n      }\n      return null;\n    }\n  }),\n  \n  email: (message?: string): ValidationRule => ({\n    pattern: validationPatterns.email,\n    custom: (value: string) => {\n      if (value && !validationPatterns.email.test(value)) {\n        return message || 'Please enter a valid email address';\n      }\n      return null;\n    }\n  }),\n  \n  phone: (message?: string): ValidationRule => ({\n    pattern: validationPatterns.phoneUS,\n    custom: (value: string) => {\n      if (value && !validationPatterns.phoneUS.test(value)) {\n        return message || 'Please enter a valid phone number (e.g., (555) 123-4567)';\n      }\n      return null;\n    }\n  }),\n\n  // Pre-defined validation rule objects\n  emailRule: { \n    required: true, \n    pattern: validationPatterns.email,\n    custom: (value: string) => {\n      if (value && !validationPatterns.email.test(value)) {\n        return 'Please enter a valid email address';\n      }\n      return null;\n    }\n  },\n  phoneRule: { \n    required: true, \n    pattern: validationPatterns.phoneUS,\n    custom: (value: string) => {\n      if (value && !validationPatterns.phoneUS.test(value)) {\n        return 'Please enter a valid phone number (e.g., (555) 123-4567)';\n      }\n      return null;\n    }\n  },\n  currencyRule: {\n    required: true,\n    min: 0,\n    custom: (value: number) => {\n      if (value !== undefined && value < 0) {\n        return 'Amount cannot be negative';\n      }\n      return null;\n    }\n  },\n  \n  // Backward compatibility aliases\n  currency: {\n    required: true,\n    min: 0,\n    custom: (value: number) => {\n      if (value !== undefined && value < 0) {\n        return 'Amount cannot be negative';\n      }\n      return null;\n    }\n  },\n  duration: {\n    required: true,\n    min: 0.5,\n    max: 24,\n    custom: (value: number) => {\n      if (value !== undefined && (value < 0.5 || value > 24)) {\n        return 'Duration must be between 0.5 and 24 hours';\n      }\n      return null;\n    }\n  },\n  postalCode: {\n    pattern: validationPatterns.postalCode,\n    custom: (value: string) => {\n      if (value && !validationPatterns.postalCode.test(value) && !validationPatterns.zipCode.test(value)) {\n        return 'Please enter a valid postal/zip code';\n      }\n      return null;\n    }\n  },\n  strongPassword: {\n    required: true,\n    minLength: 8,\n    pattern: validationPatterns.strongPassword,\n    custom: (value: string) => {\n      if (value && !validationPatterns.strongPassword.test(value)) {\n        return 'Password must contain at least 8 characters with uppercase, lowercase, number, and special character';\n      }\n      return null;\n    }\n  },\n  customerName: {\n    required: true,\n    minLength: 2,\n    maxLength: 100,\n    custom: (value: string) => {\n      if (value && value.trim().length < 2) {\n        return 'Name must be at least 2 characters';\n      }\n      return null;\n    }\n  },\n  address: {\n    required: true,\n    minLength: 10,\n    maxLength: 255,\n    custom: (value: string) => {\n      if (value && value.trim().length < 10) {\n        return 'Please enter a complete address';\n      }\n      return null;\n    }\n  },\n  description: {\n    required: true,\n    minLength: 10,\n    maxLength: 1000,\n    custom: (value: string) => {\n      if (value && value.trim().length < 10) {\n        return 'Description must be at least 10 characters';\n      }\n      return null;\n    }\n  }\n};\n\n// Utility functions for specific validations\nexport const validateEmailFormat = (email: string): boolean => {\n  return validationPatterns.email.test(email);\n};\n\nexport const validatePhoneFormat = (phone: string): boolean => {\n  return validationPatterns.phoneUS.test(phone);\n};\n\nexport const validateCurrencyFormat = (amount: string): boolean => {\n  return validationPatterns.currency.test(amount);\n};\n\nexport const formatPhoneNumber = (phone: string): string => {\n  const digits = phone.replace(/\\D/g, '');\n  if (digits.length === 10) {\n    return `(${digits.slice(0, 3)}) ${digits.slice(3, 6)}-${digits.slice(6)}`;\n  }\n  if (digits.length === 11 && digits[0] === '1') {\n    return `+1 (${digits.slice(1, 4)}) ${digits.slice(4, 7)}-${digits.slice(7)}`;\n  }\n  return phone;\n};\n\nexport const formatCurrency = (amount: number | string): string => {\n  const numAmount = typeof amount === 'string' ? parseFloat(amount) : amount;\n  if (isNaN(numAmount)) return '$0.00';\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(numAmount);\n};\n\n// Real-time validation hook\nexport const useFormValidation = (initialData: Record<string, any>, validationRules: Record<string, ValidationRule>) => {\n  const [data, setData] = React.useState(initialData);\n  const [errors, setErrors] = React.useState<Record<string, string>>({});\n  const [touched, setTouched] = React.useState<Record<string, boolean>>({});\n\n  const validateSingleField = (field: string, value: any) => {\n    const rule = validationRules[field];\n    if (!rule) return null;\n    return validateField(value, rule);\n  };\n\n  const handleChange = (field: string, value: any) => {\n    setData(prev => ({ ...prev, [field]: value }));\n    \n    // Real-time validation\n    if (touched[field]) {\n      const error = validateSingleField(field, value);\n      setErrors(prev => {\n        if (error) {\n          return { ...prev, [field]: error };\n        } else {\n          const newErrors = { ...prev };\n          delete newErrors[field];\n          return newErrors;\n        }\n      });\n    }\n  };\n\n  const handleBlur = (field: string) => {\n    setTouched(prev => ({ ...prev, [field]: true }));\n    const error = validateSingleField(field, data[field]);\n    if (error) {\n      setErrors(prev => ({ ...prev, [field]: error }));\n    }\n  };\n\n  const validateAll = (): boolean => {\n    const result = validateForm(data, validationRules);\n    setErrors(result.errors);\n    setTouched(Object.keys(validationRules).reduce((acc, key) => ({ ...acc, [key]: true }), {}));\n    return result.isValid;\n  };\n\n  const reset = () => {\n    setData(initialData);\n    setErrors({});\n    setTouched({});\n  };\n\n  return {\n    data,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    validateAll,\n    reset,\n    isValid: Object.keys(errors).length === 0\n  };\n};","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');"],"names":["createSvgIcon","_jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","concat","capitalize","position","disablePointerEvents","variant","_ref","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","UserRegistration","navigate","useNavigate","formData","setFormData","useState","username","email","password","confirmPassword","firstName","lastName","role","phone","companyName","formErrors","setFormErrors","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","submitting","setSubmitting","registrationSuccess","setRegistrationSuccess","handleInputChange","field","event","target","prev","_objectSpread","newErrors","Box","sx","minHeight","background","justifyContent","p","Card","maxWidth","textAlign","CardContent","gutterBottom","mb","CircularProgress","mt","Paper","elevation","width","borderRadius","overflow","IconButton","onClick","mr","ArrowBackIcon","fontWeight","general","Alert","severity","onSubmit","async","preventDefault","validateRegistrationForm","validationRules","required","minLength","pattern","validationPatterns","result","validateForm","errors","isValid","Promise","resolve","setTimeout","console","log","error","Grid","container","spacing","item","xs","sm","TextField","fullWidth","label","onChange","helperText","InputProps","startAdornment","InputAdornment","PersonIcon","BadgeIcon","type","EmailIcon","LockIcon","endAdornment","edge","VisibilityOff","Visibility","FormControl","InputLabel","Select","MenuItem","BusinessIcon","Button","disabled","py","validateField","rules","trim","length","maxLength","test","min","max","custom","data","fieldRules","Object","entries","keys","phoneUS","postalCode","zipCode","url","alphanumeric","currency","jobNumber","invoiceNumber","strongPassword","commonValidationRules","message","emailRule","phoneRule","currencyRule","undefined","duration","customerName","address","description","formatPhoneNumber","digits","replace","slice"],"sourceRoot":""}