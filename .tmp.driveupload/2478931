{"version":3,"file":"static/js/960.99252753.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@mui/icons-material/esm/Cancel.js","../node_modules/@mui/icons-material/esm/Security.js","components/UserProfile.tsx","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/Business.js","utils/validation.ts","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/icons-material/esm/Email.js","../node_modules/@mui/icons-material/esm/Person.js","../node_modules/@mui/icons-material/esm/Phone.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"\n}), 'Cancel');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11z\"\n}), 'Security');","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Alert,\n  Grid,\n  Avatar,\n  Card,\n  CardContent,\n  Divider,\n  Chip,\n  CircularProgress,\n  InputAdornment,\n  IconButton,\n  Tab,\n  Tabs\n} from '@mui/material';\nimport {\n  Edit as EditIcon,\n  Save as SaveIcon,\n  Cancel as CancelIcon,\n  Person as PersonIcon,\n  Email as EmailIcon,\n  Phone as PhoneIcon,\n  Business as BusinessIcon,\n  Security as SecurityIcon,\n  Visibility,\n  VisibilityOff\n} from '@mui/icons-material';\nimport { useAuth } from '../contexts/AuthContext';\nimport { validateForm, validationPatterns } from '../utils/validation';\n\ninterface ProfileData {\n  username: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  phone?: string;\n  companyName?: string;\n  bio?: string;\n}\n\ninterface PasswordChangeData {\n  currentPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\nconst UserProfile: React.FC = () => {\n  const { user } = useAuth();\n  const [currentTab, setCurrentTab] = useState(0);\n  const [isEditing, setIsEditing] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [profileData, setProfileData] = useState<ProfileData>({\n    username: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    phone: '',\n    companyName: '',\n    bio: ''\n  });\n  const [originalData, setOriginalData] = useState<ProfileData>({} as ProfileData);\n  const [formErrors, setFormErrors] = useState<Record<string, string>>({});\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Password change state\n  const [passwordData, setPasswordData] = useState<PasswordChangeData>({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const [passwordErrors, setPasswordErrors] = useState<Record<string, string>>({});\n  const [showPasswords, setShowPasswords] = useState({\n    current: false,\n    new: false,\n    confirm: false\n  });\n\n  useEffect(() => {\n    if (user) {\n      const initialData = {\n        username: user.username,\n        email: user.email,\n        firstName: user.first_name,\n        lastName: user.last_name,\n        phone: '',\n        companyName: '',\n        bio: ''\n      };\n      setProfileData(initialData);\n      setOriginalData(initialData);\n    }\n  }, [user]);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setCurrentTab(newValue);\n    setSuccessMessage('');\n  };\n\n  const handleInputChange = (field: keyof ProfileData) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setProfileData(prev => ({\n      ...prev,\n      [field]: event.target.value\n    }));\n    \n    if (formErrors[field]) {\n      setFormErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  const handlePasswordInputChange = (field: keyof PasswordChangeData) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setPasswordData(prev => ({\n      ...prev,\n      [field]: event.target.value\n    }));\n    \n    if (passwordErrors[field]) {\n      setPasswordErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  const validateProfileForm = () => {\n    const validationRules = {\n      email: { required: true, pattern: validationPatterns.email },\n      firstName: { required: true, minLength: 2 },\n      lastName: { required: true, minLength: 2 },\n      username: { required: true, minLength: 3 }\n    };\n    \n    const result = validateForm(profileData, validationRules);\n    setFormErrors(result.errors);\n    return result.isValid;\n  };\n\n  const validatePasswordForm = () => {\n    const validationRules = {\n      currentPassword: { required: true, minLength: 6 },\n      newPassword: { required: true, minLength: 8 },\n      confirmPassword: { required: true, minLength: 8 }\n    };\n    \n    const result = validateForm(passwordData, validationRules);\n    \n    if (passwordData.newPassword !== passwordData.confirmPassword) {\n      result.errors.confirmPassword = 'Passwords do not match';\n      result.isValid = false;\n    }\n    \n    if (passwordData.currentPassword === passwordData.newPassword) {\n      result.errors.newPassword = 'New password must be different from current password';\n      result.isValid = false;\n    }\n    \n    setPasswordErrors(result.errors);\n    return result.isValid;\n  };\n\n  const handleEditToggle = () => {\n    if (isEditing) {\n      setProfileData(originalData);\n      setFormErrors({});\n    }\n    setIsEditing(!isEditing);\n  };\n\n  const handleSaveProfile = async () => {\n    if (!validateProfileForm()) {\n      return;\n    }\n\n    setSaving(true);\n    \n    try {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      console.log('Profile updated:', profileData);\n      setOriginalData(profileData);\n      setIsEditing(false);\n      setSuccessMessage('Profile updated successfully!');\n      \n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Profile update error:', error);\n      setFormErrors({ general: 'Failed to update profile. Please try again.' });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handlePasswordChange = async () => {\n    if (!validatePasswordForm()) {\n      return;\n    }\n\n    setSaving(true);\n    \n    try {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      console.log('Password changed');\n      setPasswordData({\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      });\n      setSuccessMessage('Password changed successfully!');\n      \n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Password change error:', error);\n      setPasswordErrors({ general: 'Failed to change password. Please try again.' });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const getRoleColor = (role: string) => {\n    switch (role) {\n      case 'admin': return 'error';\n      case 'manager': return 'primary';\n      case 'technician': return 'success';\n      case 'customer': return 'warning';\n      default: return 'default';\n    }\n  };\n\n  if (!user) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const ProfileTab = () => (\n    <Box>\n      {successMessage && (\n        <Alert severity=\"success\" sx={{ mb: 3 }}>\n          {successMessage}\n        </Alert>\n      )}\n\n      {formErrors.general && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {formErrors.general}\n        </Alert>\n      )}\n\n      <Card sx={{ mb: 3 }}>\n        <CardContent>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n            <Avatar \n              sx={{ \n                width: 80, \n                height: 80, \n                mr: 3, \n                bgcolor: 'primary.main',\n                fontSize: '2rem'\n              }}\n            >\n              {user.first_name[0]}{user.last_name[0]}\n            </Avatar>\n            <Box sx={{ flexGrow: 1 }}>\n              <Typography variant=\"h5\" fontWeight=\"bold\">\n                {user.first_name} {user.last_name}\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\n                @{user.username}\n              </Typography>\n              <Chip \n                label={user.role} \n                color={getRoleColor(user.role) as any}\n                sx={{ textTransform: 'capitalize' }}\n              />\n            </Box>\n            <Button\n              variant={isEditing ? \"outlined\" : \"contained\"}\n              startIcon={isEditing ? <CancelIcon /> : <EditIcon />}\n              onClick={handleEditToggle}\n              disabled={saving}\n            >\n              {isEditing ? 'Cancel' : 'Edit Profile'}\n            </Button>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Paper sx={{ p: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Profile Information\n        </Typography>\n        <Divider sx={{ mb: 3 }} />\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"First Name\"\n              value={profileData.firstName}\n              onChange={handleInputChange('firstName')}\n              disabled={!isEditing}\n              error={!!formErrors.firstName}\n              helperText={formErrors.firstName}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Last Name\"\n              value={profileData.lastName}\n              onChange={handleInputChange('lastName')}\n              disabled={!isEditing}\n              error={!!formErrors.lastName}\n              helperText={formErrors.lastName}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Username\"\n              value={profileData.username}\n              onChange={handleInputChange('username')}\n              disabled={!isEditing}\n              error={!!formErrors.username}\n              helperText={formErrors.username}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Email\"\n              value={profileData.email}\n              onChange={handleInputChange('email')}\n              disabled={!isEditing}\n              error={!!formErrors.email}\n              helperText={formErrors.email}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <EmailIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Phone Number\"\n              value={profileData.phone}\n              onChange={handleInputChange('phone')}\n              disabled={!isEditing}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PhoneIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Company Name\"\n              value={profileData.companyName}\n              onChange={handleInputChange('companyName')}\n              disabled={!isEditing}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <BusinessIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Bio\"\n              value={profileData.bio}\n              onChange={handleInputChange('bio')}\n              disabled={!isEditing}\n              multiline\n              rows={3}\n              placeholder=\"Tell us about yourself...\"\n            />\n          </Grid>\n        </Grid>\n\n        {isEditing && (\n          <Box sx={{ mt: 3, display: 'flex', gap: 2, justifyContent: 'flex-end' }}>\n            <Button\n              variant=\"outlined\"\n              onClick={handleEditToggle}\n              disabled={saving}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              startIcon={saving ? <CircularProgress size={20} /> : <SaveIcon />}\n              onClick={handleSaveProfile}\n              disabled={saving}\n            >\n              {saving ? 'Saving...' : 'Save Changes'}\n            </Button>\n          </Box>\n        )}\n      </Paper>\n    </Box>\n  );\n\n  const SecurityTab = () => (\n    <Box>\n      {successMessage && (\n        <Alert severity=\"success\" sx={{ mb: 3 }}>\n          {successMessage}\n        </Alert>\n      )}\n\n      {passwordErrors.general && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {passwordErrors.general}\n        </Alert>\n      )}\n\n      <Paper sx={{ p: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Change Password\n        </Typography>\n        <Divider sx={{ mb: 3 }} />\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Current Password\"\n              type={showPasswords.current ? 'text' : 'password'}\n              value={passwordData.currentPassword}\n              onChange={handlePasswordInputChange('currentPassword')}\n              error={!!passwordErrors.currentPassword}\n              helperText={passwordErrors.currentPassword}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SecurityIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      onClick={() => setShowPasswords(prev => ({ ...prev, current: !prev.current }))}\n                      edge=\"end\"\n                    >\n                      {showPasswords.current ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"New Password\"\n              type={showPasswords.new ? 'text' : 'password'}\n              value={passwordData.newPassword}\n              onChange={handlePasswordInputChange('newPassword')}\n              error={!!passwordErrors.newPassword}\n              helperText={passwordErrors.newPassword || 'Minimum 8 characters'}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SecurityIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      onClick={() => setShowPasswords(prev => ({ ...prev, new: !prev.new }))}\n                      edge=\"end\"\n                    >\n                      {showPasswords.new ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Confirm New Password\"\n              type={showPasswords.confirm ? 'text' : 'password'}\n              value={passwordData.confirmPassword}\n              onChange={handlePasswordInputChange('confirmPassword')}\n              error={!!passwordErrors.confirmPassword}\n              helperText={passwordErrors.confirmPassword}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SecurityIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      onClick={() => setShowPasswords(prev => ({ ...prev, confirm: !prev.confirm }))}\n                      edge=\"end\"\n                    >\n                      {showPasswords.confirm ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n\n        <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n          <Button\n            variant=\"contained\"\n            startIcon={saving ? <CircularProgress size={20} /> : <SecurityIcon />}\n            onClick={handlePasswordChange}\n            disabled={saving || !passwordData.currentPassword || !passwordData.newPassword || !passwordData.confirmPassword}\n          >\n            {saving ? 'Changing...' : 'Change Password'}\n          </Button>\n        </Box>\n      </Paper>\n    </Box>\n  );\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\n        User Profile\n      </Typography>\n\n      <Paper sx={{ mb: 3 }}>\n        <Tabs value={currentTab} onChange={handleTabChange}>\n          <Tab label=\"Profile Information\" />\n          <Tab label=\"Security\" />\n        </Tabs>\n      </Paper>\n\n      <Box sx={{ mt: 3 }}>\n        {currentTab === 0 && <ProfileTab />}\n        {currentTab === 1 && <SecurityTab />}\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserProfile;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7M2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2m4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3z\"\n}), 'VisibilityOff');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7V3H2v18h20V7zM6 19H4v-2h2zm0-4H4v-2h2zm0-4H4V9h2zm0-4H4V5h2zm4 12H8v-2h2zm0-4H8v-2h2zm0-4H8V9h2zm0-4H8V5h2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8zm-2-8h-2v2h2zm0 4h-2v2h2z\"\n}), 'Business');","import React from 'react';\n\nexport interface ValidationRule {\n  required?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  pattern?: RegExp;\n  min?: number;\n  max?: number;\n  custom?: (value: any) => string | null;\n}\n\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: Record<string, string>;\n}\n\nexport const validateField = (value: any, rules: ValidationRule): string | null => {\n  if (rules.required && (!value || (typeof value === 'string' && value.trim() === ''))) {\n    return 'This field is required';\n  }\n\n  if (!value) return null;\n\n  if (rules.minLength && typeof value === 'string' && value.length < rules.minLength) {\n    return `Must be at least ${rules.minLength} characters`;\n  }\n\n  if (rules.maxLength && typeof value === 'string' && value.length > rules.maxLength) {\n    return `Must be no more than ${rules.maxLength} characters`;\n  }\n\n  if (rules.pattern && typeof value === 'string' && !rules.pattern.test(value)) {\n    return 'Invalid format';\n  }\n\n  if (rules.min && typeof value === 'number' && value < rules.min) {\n    return `Must be at least ${rules.min}`;\n  }\n\n  if (rules.max && typeof value === 'number' && value > rules.max) {\n    return `Must be no more than ${rules.max}`;\n  }\n\n  if (rules.custom) {\n    return rules.custom(value);\n  }\n\n  return null;\n};\n\nexport const validateForm = (data: Record<string, any>, rules: Record<string, ValidationRule>): ValidationResult => {\n  const errors: Record<string, string> = {};\n\n  for (const [field, fieldRules] of Object.entries(rules)) {\n    const error = validateField(data[field], fieldRules);\n    if (error) {\n      errors[field] = error;\n    }\n  }\n\n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors\n  };\n};\n\n// Common validation patterns\nexport const validationPatterns = {\n  email: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n  phone: /^[\\+]?[1-9][\\d]{0,15}$/,\n  phoneUS: /^(\\+1)?[\\s\\-]?\\(?([0-9]{3})\\)?[\\s\\-]?([0-9]{3})[\\s\\-]?([0-9]{4})$/,\n  postalCode: /^[A-Za-z]\\d[A-Za-z][ -]?\\d[A-Za-z]\\d$/,\n  zipCode: /^\\d{5}(-\\d{4})?$/,\n  url: /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$/,\n  alphanumeric: /^[a-zA-Z0-9]+$/,\n  currency: /^\\d+(\\.\\d{1,2})?$/,\n  jobNumber: /^JOB-\\d{4}-\\d{4}$/,\n  invoiceNumber: /^INV-\\d{4}-\\d{4}$/,\n  strongPassword: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n};\n\n// Helper functions to create validation rules\nexport const commonValidationRules = {\n  required: (message?: string): ValidationRule => ({\n    required: true,\n    custom: (value: any) => {\n      if (!value || (typeof value === 'string' && value.trim() === '')) {\n        return message || 'This field is required';\n      }\n      return null;\n    }\n  }),\n  \n  minLength: (length: number, message?: string): ValidationRule => ({\n    minLength: length,\n    custom: (value: string) => {\n      if (value && value.length < length) {\n        return message || `Must be at least ${length} characters`;\n      }\n      return null;\n    }\n  }),\n  \n  maxLength: (length: number, message?: string): ValidationRule => ({\n    maxLength: length,\n    custom: (value: string) => {\n      if (value && value.length > length) {\n        return message || `Must be no more than ${length} characters`;\n      }\n      return null;\n    }\n  }),\n  \n  email: (message?: string): ValidationRule => ({\n    pattern: validationPatterns.email,\n    custom: (value: string) => {\n      if (value && !validationPatterns.email.test(value)) {\n        return message || 'Please enter a valid email address';\n      }\n      return null;\n    }\n  }),\n  \n  phone: (message?: string): ValidationRule => ({\n    pattern: validationPatterns.phoneUS,\n    custom: (value: string) => {\n      if (value && !validationPatterns.phoneUS.test(value)) {\n        return message || 'Please enter a valid phone number (e.g., (555) 123-4567)';\n      }\n      return null;\n    }\n  }),\n\n  // Pre-defined validation rule objects\n  emailRule: { \n    required: true, \n    pattern: validationPatterns.email,\n    custom: (value: string) => {\n      if (value && !validationPatterns.email.test(value)) {\n        return 'Please enter a valid email address';\n      }\n      return null;\n    }\n  },\n  phoneRule: { \n    required: true, \n    pattern: validationPatterns.phoneUS,\n    custom: (value: string) => {\n      if (value && !validationPatterns.phoneUS.test(value)) {\n        return 'Please enter a valid phone number (e.g., (555) 123-4567)';\n      }\n      return null;\n    }\n  },\n  currencyRule: {\n    required: true,\n    min: 0,\n    custom: (value: number) => {\n      if (value !== undefined && value < 0) {\n        return 'Amount cannot be negative';\n      }\n      return null;\n    }\n  },\n  \n  // Backward compatibility aliases\n  currency: {\n    required: true,\n    min: 0,\n    custom: (value: number) => {\n      if (value !== undefined && value < 0) {\n        return 'Amount cannot be negative';\n      }\n      return null;\n    }\n  },\n  duration: {\n    required: true,\n    min: 0.5,\n    max: 24,\n    custom: (value: number) => {\n      if (value !== undefined && (value < 0.5 || value > 24)) {\n        return 'Duration must be between 0.5 and 24 hours';\n      }\n      return null;\n    }\n  },\n  postalCode: {\n    pattern: validationPatterns.postalCode,\n    custom: (value: string) => {\n      if (value && !validationPatterns.postalCode.test(value) && !validationPatterns.zipCode.test(value)) {\n        return 'Please enter a valid postal/zip code';\n      }\n      return null;\n    }\n  },\n  strongPassword: {\n    required: true,\n    minLength: 8,\n    pattern: validationPatterns.strongPassword,\n    custom: (value: string) => {\n      if (value && !validationPatterns.strongPassword.test(value)) {\n        return 'Password must contain at least 8 characters with uppercase, lowercase, number, and special character';\n      }\n      return null;\n    }\n  },\n  customerName: {\n    required: true,\n    minLength: 2,\n    maxLength: 100,\n    custom: (value: string) => {\n      if (value && value.trim().length < 2) {\n        return 'Name must be at least 2 characters';\n      }\n      return null;\n    }\n  },\n  address: {\n    required: true,\n    minLength: 10,\n    maxLength: 255,\n    custom: (value: string) => {\n      if (value && value.trim().length < 10) {\n        return 'Please enter a complete address';\n      }\n      return null;\n    }\n  },\n  description: {\n    required: true,\n    minLength: 10,\n    maxLength: 1000,\n    custom: (value: string) => {\n      if (value && value.trim().length < 10) {\n        return 'Description must be at least 10 characters';\n      }\n      return null;\n    }\n  }\n};\n\n// Utility functions for specific validations\nexport const validateEmailFormat = (email: string): boolean => {\n  return validationPatterns.email.test(email);\n};\n\nexport const validatePhoneFormat = (phone: string): boolean => {\n  return validationPatterns.phoneUS.test(phone);\n};\n\nexport const validateCurrencyFormat = (amount: string): boolean => {\n  return validationPatterns.currency.test(amount);\n};\n\nexport const formatPhoneNumber = (phone: string): string => {\n  const digits = phone.replace(/\\D/g, '');\n  if (digits.length === 10) {\n    return `(${digits.slice(0, 3)}) ${digits.slice(3, 6)}-${digits.slice(6)}`;\n  }\n  if (digits.length === 11 && digits[0] === '1') {\n    return `+1 (${digits.slice(1, 4)}) ${digits.slice(4, 7)}-${digits.slice(7)}`;\n  }\n  return phone;\n};\n\nexport const formatCurrency = (amount: number | string): string => {\n  const numAmount = typeof amount === 'string' ? parseFloat(amount) : amount;\n  if (isNaN(numAmount)) return '$0.00';\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(numAmount);\n};\n\n// Real-time validation hook\nexport const useFormValidation = (initialData: Record<string, any>, validationRules: Record<string, ValidationRule>) => {\n  const [data, setData] = React.useState(initialData);\n  const [errors, setErrors] = React.useState<Record<string, string>>({});\n  const [touched, setTouched] = React.useState<Record<string, boolean>>({});\n\n  const validateSingleField = (field: string, value: any) => {\n    const rule = validationRules[field];\n    if (!rule) return null;\n    return validateField(value, rule);\n  };\n\n  const handleChange = (field: string, value: any) => {\n    setData(prev => ({ ...prev, [field]: value }));\n    \n    // Real-time validation\n    if (touched[field]) {\n      const error = validateSingleField(field, value);\n      setErrors(prev => {\n        if (error) {\n          return { ...prev, [field]: error };\n        } else {\n          const newErrors = { ...prev };\n          delete newErrors[field];\n          return newErrors;\n        }\n      });\n    }\n  };\n\n  const handleBlur = (field: string) => {\n    setTouched(prev => ({ ...prev, [field]: true }));\n    const error = validateSingleField(field, data[field]);\n    if (error) {\n      setErrors(prev => ({ ...prev, [field]: error }));\n    }\n  };\n\n  const validateAll = (): boolean => {\n    const result = validateForm(data, validationRules);\n    setErrors(result.errors);\n    setTouched(Object.keys(validationRules).reduce((acc, key) => ({ ...acc, [key]: true }), {}));\n    return result.isValid;\n  };\n\n  const reset = () => {\n    setData(initialData);\n    setErrors({});\n    setTouched({});\n  };\n\n  return {\n    data,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    validateAll,\n    reset,\n    isValid: Object.keys(errors).length === 0\n  };\n};","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02z\"\n}), 'Phone');"],"names":["getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","concat","capitalize","position","disablePointerEvents","variant","_ref","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","createSvgIcon","d","UserProfile","user","useAuth","currentTab","setCurrentTab","useState","isEditing","setIsEditing","saving","setSaving","profileData","setProfileData","username","email","firstName","lastName","phone","companyName","bio","originalData","setOriginalData","formErrors","setFormErrors","successMessage","setSuccessMessage","passwordData","setPasswordData","currentPassword","newPassword","confirmPassword","passwordErrors","setPasswordErrors","showPasswords","setShowPasswords","current","new","confirm","useEffect","initialData","first_name","last_name","handleInputChange","field","event","prev","_objectSpread","target","newErrors","handlePasswordInputChange","handleEditToggle","handleSaveProfile","async","validateProfileForm","validationRules","required","pattern","validationPatterns","minLength","result","validateForm","errors","isValid","Promise","resolve","setTimeout","console","log","error","general","handlePasswordChange","validatePasswordForm","getRoleColor","role","Box","justifyContent","minHeight","CircularProgress","ProfileTab","Alert","severity","sx","mb","Card","CardContent","Avatar","width","mr","bgcolor","fontSize","flexGrow","fontWeight","gutterBottom","Chip","label","textTransform","Button","startIcon","CancelIcon","EditIcon","onClick","disabled","Paper","p","Divider","Grid","container","spacing","item","xs","sm","TextField","fullWidth","onChange","helperText","InputProps","startAdornment","InputAdornment","PersonIcon","EmailIcon","PhoneIcon","BusinessIcon","multiline","rows","placeholder","mt","gap","SaveIcon","SecurityTab","type","SecurityIcon","endAdornment","IconButton","edge","VisibilityOff","Visibility","Tabs","handleTabChange","newValue","Tab","validateField","rules","trim","length","maxLength","test","min","max","custom","data","fieldRules","Object","entries","keys","phoneUS","postalCode","zipCode","url","alphanumeric","currency","jobNumber","invoiceNumber","strongPassword","commonValidationRules","message","emailRule","phoneRule","currencyRule","undefined","duration","customerName","address","description","formatPhoneNumber","digits","replace","slice"],"sourceRoot":""}