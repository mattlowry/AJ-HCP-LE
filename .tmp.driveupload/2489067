{"ast":null,"code":"import _objectSpread from\"/Users/matthewlong/AJ-HCP-LE/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{jobApi,customerApi}from'../services/api';import{validateForm,commonValidationRules}from'../utils/validation';import{Box,Typography,Grid,Card,CardContent,Button,Chip,TextField,MenuItem,IconButton,Dialog,DialogTitle,DialogContent,DialogActions,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Alert,FormControl,InputLabel,Select,FormHelperText,Divider,CircularProgress}from'@mui/material';// Using native datetime-local for better compatibility\nimport{Add as AddIcon,Edit as EditIcon,Visibility as ViewIcon,Delete as DeleteIcon,Search as SearchIcon}from'@mui/icons-material';// Using Job interface from types/job.ts\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JobList=()=>{const navigate=useNavigate();const[jobs,setJobs]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[submitting,setSubmitting]=useState(false);const[openDialog,setOpenDialog]=useState(false);const[editingJob,setEditingJob]=useState(null);const[searchTerm,setSearchTerm]=useState('');const[statusFilter,setStatusFilter]=useState('');const[priorityFilter,setPriorityFilter]=useState('');// Demo data for dropdowns\nconst[customers,setCustomers]=useState([]);const[serviceTypes,setServiceTypes]=useState([]);const[technicians,setTechnicians]=useState([]);// Form state\nconst[formData,setFormData]=useState({customer_id:'',property_address:'',service_type_id:'',status:'pending',priority:'medium',scheduled_date:new Date(),assigned_technician_id:'',description:'',estimated_duration:2,total_amount:0,notes:''});const[formErrors,setFormErrors]=useState({});const loadJobs=async()=>{try{setLoading(true);setError('');const response=await jobApi.getAll();setJobs(response.data.results||[]);setLoading(false);}catch(err){console.error('Error loading jobs:',err);setError('Failed to load jobs. Please check your connection and try again.');setJobs([]);setLoading(false);}};// Load customers, service types, and technicians\nconst loadReferenceData=async()=>{try{// Load customers\nconst customersResponse=await customerApi.getAll();setCustomers(customersResponse.data.results||[]);// Load technicians - using mock data for now\nsetTechnicians([{id:1,user:{first_name:'John',last_name:'Smith'},full_name:'John Smith'},{id:2,user:{first_name:'Jane',last_name:'Doe'},full_name:'Jane Doe'},{id:3,user:{first_name:'Mike',last_name:'Johnson'},full_name:'Mike Johnson'}]);// For service types, we'll use a static list since there might not be an API endpoint\nsetServiceTypes([{id:1,name:'Electrical Repair'},{id:2,name:'Panel Installation'},{id:3,name:'Emergency Service'},{id:4,name:'Wiring Installation'},{id:5,name:'Lighting Installation'},{id:6,name:'Circuit Installation'},{id:7,name:'Outlet Installation'},{id:8,name:'Switch Installation'},{id:9,name:'GFCI Installation'},{id:10,name:'Electrical Inspection'}]);}catch(err){console.error('Error loading reference data:',err);// Set empty arrays if API calls fail\nsetCustomers([]);setTechnicians([]);setServiceTypes([]);}};useEffect(()=>{loadJobs();loadReferenceData();},[]);const getStatusColor=status=>{switch(status){case'pending':return'warning';case'scheduled':return'info';case'in_progress':return'primary';case'completed':return'success';case'cancelled':return'error';default:return'default';}};const getPriorityColor=priority=>{switch(priority){case'low':return'success';case'medium':return'warning';case'high':return'error';case'emergency':return'error';default:return'default';}};const filteredJobs=jobs.filter(job=>{const customerName=job.customer_name||'';const serviceType=job.service_type||job.title||'';const matchesSearch=job.job_number.toLowerCase().includes(searchTerm.toLowerCase())||customerName.toLowerCase().includes(searchTerm.toLowerCase())||serviceType.toLowerCase().includes(searchTerm.toLowerCase());const matchesStatus=statusFilter===''||job.status===statusFilter;const matchesPriority=priorityFilter===''||job.priority===priorityFilter;return matchesSearch&&matchesStatus&&matchesPriority;});const handleCreateJob=()=>{navigate('/jobs/new');};const handleEditJob=job=>{var _customers$find,_serviceTypes$find;setEditingJob(job);// Find the associated customer, service type, and technician IDs\nconst customerId=((_customers$find=customers.find(c=>c.full_name===job.customer_name))===null||_customers$find===void 0?void 0:_customers$find.id.toString())||'';const serviceTypeId=((_serviceTypes$find=serviceTypes.find(s=>s.name===job.service_type))===null||_serviceTypes$find===void 0?void 0:_serviceTypes$find.id.toString())||'';// Safely handle technician lookup\nlet technicianId='';if(job.assigned_technicians&&job.assigned_technicians.length>0){var _technicians$find;technicianId=((_technicians$find=technicians.find(t=>t.full_name===job.assigned_technicians[0]))===null||_technicians$find===void 0?void 0:_technicians$find.id.toString())||'';}setFormData({customer_id:customerId,property_address:job.property_address||'',service_type_id:serviceTypeId,status:job.status,priority:job.priority,scheduled_date:new Date(job.scheduled_start||job.created_at||new Date()),assigned_technician_id:technicianId,description:job.description||'',estimated_duration:job.estimated_duration||0,total_amount:job.actual_cost||job.estimated_cost,notes:job.notes||''});setFormErrors({});setOpenDialog(true);};const handleDeleteJob=async jobId=>{if(window.confirm('Are you sure you want to delete this job?')){try{await jobApi.delete(jobId);// Reload jobs after successful deletion\nawait loadJobs();}catch(err){console.error('Error deleting job:',err);setError('Failed to delete job. Please try again.');}}};const handleFormChange=(field,value)=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:value}));// Clear error for this field if it exists\nif(formErrors[field]){setFormErrors(prev=>{const newErrors=_objectSpread({},prev);delete newErrors[field];return newErrors;});}};const validateJobForm=()=>{const validationRules={customer_id:{required:true},property_address:commonValidationRules.address,service_type_id:{required:true},description:commonValidationRules.description,estimated_duration:commonValidationRules.duration,total_amount:commonValidationRules.currency};const result=validateForm(formData,validationRules);setFormErrors(result.errors);return result.isValid;};const handleSaveJob=async()=>{try{var _serviceTypes$find2;if(!validateJobForm())return;setSubmitting(true);const jobData={customer:parseInt(formData.customer_id),property_address:formData.property_address,service_type:((_serviceTypes$find2=serviceTypes.find(st=>st.id.toString()===formData.service_type_id))===null||_serviceTypes$find2===void 0?void 0:_serviceTypes$find2.name)||'',status:formData.status,priority:formData.priority,scheduled_start:formData.scheduled_date,assigned_to:formData.assigned_technician_id?[parseInt(formData.assigned_technician_id)]:[],description:formData.description,estimated_duration:formData.estimated_duration,estimated_cost:formData.total_amount,notes:formData.notes};if(editingJob){await jobApi.update(editingJob.id,jobData);}else{await jobApi.create(jobData);}// Reload jobs after successful save\nawait loadJobs();setOpenDialog(false);setSubmitting(false);}catch(err){console.error('Error saving job:',err);setError('Failed to save job. Please try again.');setSubmitting(false);}};if(loading){return/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"400px\",children:[/*#__PURE__*/_jsx(CircularProgress,{size:40,sx:{mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textSecondary\",children:\"Loading jobs...\"})]});}return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",mb:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",children:\"Jobs & Work Orders\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:handleCreateJob,children:\"Create Job\"})]}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mb:3},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Total Jobs\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",color:\"primary\",children:jobs.length})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Pending\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",color:\"warning.main\",children:jobs.filter(j=>j.status==='pending').length})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"In Progress\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",color:\"primary\",children:jobs.filter(j=>j.status==='in_progress').length})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Completed\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",color:\"success.main\",children:jobs.filter(j=>j.status==='completed').length})]})})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mb:3},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Search jobs...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),InputProps:{startAdornment:/*#__PURE__*/_jsx(SearchIcon,{color:\"action\",sx:{mr:1}})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsxs(TextField,{select:true,fullWidth:true,label:\"Status\",value:statusFilter,onChange:e=>setStatusFilter(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All Statuses\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"scheduled\",children:\"Scheduled\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"in_progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"completed\",children:\"Completed\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"cancelled\",children:\"Cancelled\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsxs(TextField,{select:true,fullWidth:true,label:\"Priority\",value:priorityFilter||'',onChange:e=>setPriorityFilter(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All Priorities\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"low\",children:\"Low\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"high\",children:\"High\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"emergency\",children:\"Emergency\"})]})})]}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Job Number\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Customer\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Service Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Priority\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Scheduled Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Technician\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Amount\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:filteredJobs.map(job=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",fontWeight:\"bold\",children:job.job_number})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:job.customer_name||'N/A'}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:job.property_address||'N/A'})]})}),/*#__PURE__*/_jsx(TableCell,{children:job.service_type||job.title||'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:job.status.replace('_',' '),color:getStatusColor(job.status),size:\"small\",sx:{textTransform:'capitalize'}})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:job.priority,color:getPriorityColor(job.priority),size:\"small\",variant:\"outlined\",sx:{textTransform:'capitalize'}})}),/*#__PURE__*/_jsx(TableCell,{children:job.scheduled_start?new Date(job.scheduled_start).toLocaleDateString()+' '+new Date(job.scheduled_start).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'}):'Not scheduled'}),/*#__PURE__*/_jsx(TableCell,{children:job.assigned_technicians&&job.assigned_technicians.length>0?job.assigned_technicians.join(', '):'Unassigned'}),/*#__PURE__*/_jsxs(TableCell,{children:[\"$\",(job.actual_cost||job.estimated_cost||0).toFixed(2)]}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:1,children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleEditJob(job),color:\"primary\",children:/*#__PURE__*/_jsx(ViewIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleEditJob(job),color:\"primary\",children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleDeleteJob(job.id),color:\"error\",children:/*#__PURE__*/_jsx(DeleteIcon,{})})]})})]},job.id))})]})}),filteredJobs.length===0&&/*#__PURE__*/_jsxs(Box,{textAlign:\"center\",py:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",children:\"No jobs found\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:2},children:searchTerm||statusFilter?'Try adjusting your filters':'Create your first job to get started'}),!searchTerm&&!statusFilter&&/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleCreateJob,children:\"Create First Job\"})]}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:()=>setOpenDialog(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:editingJob?'Edit Job':'Create New Job'}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(Box,{component:\"form\",sx:{mt:2},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:!!formErrors.customer_id,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Customer\"}),/*#__PURE__*/_jsxs(Select,{value:formData.customer_id,label:\"Customer\",onChange:e=>handleFormChange('customer_id',e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:/*#__PURE__*/_jsx(\"em\",{children:\"Select Customer\"})}),customers.map(customer=>/*#__PURE__*/_jsx(MenuItem,{value:customer.id.toString(),children:customer.full_name},customer.id))]}),formErrors.customer_id&&/*#__PURE__*/_jsx(FormHelperText,{children:formErrors.customer_id})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Property Address\",value:formData.property_address,onChange:e=>handleFormChange('property_address',e.target.value),error:!!formErrors.property_address,helperText:formErrors.property_address})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:!!formErrors.service_type_id,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Service Type\"}),/*#__PURE__*/_jsxs(Select,{value:formData.service_type_id,label:\"Service Type\",onChange:e=>handleFormChange('service_type_id',e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:/*#__PURE__*/_jsx(\"em\",{children:\"Select Service Type\"})}),serviceTypes.map(type=>/*#__PURE__*/_jsx(MenuItem,{value:type.id.toString(),children:type.name},type.id))]}),formErrors.service_type_id&&/*#__PURE__*/_jsx(FormHelperText,{children:formErrors.service_type_id})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsxs(Select,{value:formData.status,label:\"Status\",onChange:e=>handleFormChange('status',e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"scheduled\",children:\"Scheduled\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"in_progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"completed\",children:\"Completed\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"cancelled\",children:\"Cancelled\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Priority\"}),/*#__PURE__*/_jsxs(Select,{value:formData.priority,label:\"Priority\",onChange:e=>handleFormChange('priority',e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"low\",children:\"Low\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"high\",children:\"High\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"emergency\",children:\"Emergency\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Scheduled Date & Time\",type:\"datetime-local\",value:formData.scheduled_date?new Date(formData.scheduled_date).toISOString().slice(0,16):'',onChange:e=>{const dateValue=e.target.value?new Date(e.target.value).toISOString():'';handleFormChange('scheduled_date',dateValue);},InputLabelProps:{shrink:true},helperText:\"Select date and time for the job\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Assigned Technician\"}),/*#__PURE__*/_jsxs(Select,{value:formData.assigned_technician_id,label:\"Assigned Technician\",onChange:e=>handleFormChange('assigned_technician_id',e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:/*#__PURE__*/_jsx(\"em\",{children:\"None\"})}),technicians.map(tech=>/*#__PURE__*/_jsx(MenuItem,{value:tech.id.toString(),children:tech.full_name},tech.id))]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"number\",label:\"Estimated Duration (hours)\",value:formData.estimated_duration,onChange:e=>handleFormChange('estimated_duration',e.target.value),error:!!formErrors.estimated_duration,helperText:formErrors.estimated_duration,InputProps:{inputProps:{min:0}}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"number\",label:\"Total Amount ($)\",value:formData.total_amount,onChange:e=>handleFormChange('total_amount',e.target.value),error:!!formErrors.total_amount,helperText:formErrors.total_amount,InputProps:{inputProps:{min:0,step:0.01}}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Divider,{sx:{my:1}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,rows:3,label:\"Job Description\",value:formData.description,onChange:e=>handleFormChange('description',e.target.value),error:!!formErrors.description,helperText:formErrors.description})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,rows:3,label:\"Additional Notes\",value:formData.notes,onChange:e=>handleFormChange('notes',e.target.value)})})]})})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setOpenDialog(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleSaveJob,disabled:submitting,children:submitting?/*#__PURE__*/_jsx(CircularProgress,{size:20}):'Save'})]})]})]});};export default JobList;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jobApi","customerApi","validateForm","commonValidationRules","Box","Typography","Grid","Card","CardContent","Button","Chip","TextField","MenuItem","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Alert","FormControl","InputLabel","Select","FormHelperText","Divider","CircularProgress","Add","AddIcon","Edit","EditIcon","Visibility","ViewIcon","Delete","DeleteIcon","Search","SearchIcon","jsx","_jsx","jsxs","_jsxs","JobList","navigate","jobs","setJobs","loading","setLoading","error","setError","submitting","setSubmitting","openDialog","setOpenDialog","editingJob","setEditingJob","searchTerm","setSearchTerm","statusFilter","setStatusFilter","priorityFilter","setPriorityFilter","customers","setCustomers","serviceTypes","setServiceTypes","technicians","setTechnicians","formData","setFormData","customer_id","property_address","service_type_id","status","priority","scheduled_date","Date","assigned_technician_id","description","estimated_duration","total_amount","notes","formErrors","setFormErrors","loadJobs","response","getAll","data","results","err","console","loadReferenceData","customersResponse","id","user","first_name","last_name","full_name","name","getStatusColor","getPriorityColor","filteredJobs","filter","job","customerName","customer_name","serviceType","service_type","title","matchesSearch","job_number","toLowerCase","includes","matchesStatus","matchesPriority","handleCreateJob","handleEditJob","_customers$find","_serviceTypes$find","customerId","find","c","toString","serviceTypeId","s","technicianId","assigned_technicians","length","_technicians$find","t","scheduled_start","created_at","actual_cost","estimated_cost","handleDeleteJob","jobId","window","confirm","delete","handleFormChange","field","value","prev","_objectSpread","newErrors","validateJobForm","validationRules","required","address","duration","currency","result","errors","isValid","handleSaveJob","_serviceTypes$find2","jobData","customer","parseInt","st","assigned_to","update","create","display","flexDirection","justifyContent","alignItems","minHeight","children","size","sx","mb","variant","color","component","startIcon","onClick","severity","container","spacing","item","xs","sm","md","j","fullWidth","label","onChange","e","target","InputProps","startAdornment","mr","select","map","fontWeight","replace","textTransform","toLocaleDateString","toLocaleTimeString","hour","minute","join","toFixed","gap","textAlign","py","open","onClose","maxWidth","mt","helperText","type","toISOString","slice","dateValue","InputLabelProps","shrink","tech","inputProps","min","step","my","multiline","rows","disabled"],"sources":["/Users/matthewlong/AJ-HCP-LE/frontend/src/components/JobList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jobApi, customerApi } from '../services/api';\nimport { Job, JobListItem } from '../types/job';\nimport { CustomerListItem } from '../types/customer';\nimport { validateForm, commonValidationRules, formatCurrency } from '../utils/validation';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Button,\n  Chip,\n  TextField,\n  MenuItem,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Alert,\n  FormControl,\n  InputLabel,\n  Select,\n  FormHelperText,\n  Divider,\n  CircularProgress\n} from '@mui/material';\n// Using native datetime-local for better compatibility\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Visibility as ViewIcon,\n  Delete as DeleteIcon,\n  Search as SearchIcon\n} from '@mui/icons-material';\n\n// Using Job interface from types/job.ts\n\n\ninterface ServiceType {\n  id: number;\n  name: string;\n}\n\ninterface Technician {\n  id: number;\n  user: {\n    first_name: string;\n    last_name: string;\n  };\n  full_name?: string;\n}\n\nconst JobList: React.FC = () => {\n  const navigate = useNavigate();\n  const [jobs, setJobs] = useState<JobListItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingJob, setEditingJob] = useState<JobListItem | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [priorityFilter, setPriorityFilter] = useState('');\n  \n  // Demo data for dropdowns\n  const [customers, setCustomers] = useState<CustomerListItem[]>([]);\n  const [serviceTypes, setServiceTypes] = useState<ServiceType[]>([]);\n  const [technicians, setTechnicians] = useState<Technician[]>([]);\n  \n  // Form state\n  const [formData, setFormData] = useState({\n    customer_id: '',\n    property_address: '',\n    service_type_id: '',\n    status: 'pending',\n    priority: 'medium',\n    scheduled_date: new Date(),\n    assigned_technician_id: '',\n    description: '',\n    estimated_duration: 2,\n    total_amount: 0,\n    notes: ''\n  });\n  const [formErrors, setFormErrors] = useState<Record<string, string>>({});\n\n\n  const loadJobs = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      const response = await jobApi.getAll();\n      setJobs(response.data.results || []);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error loading jobs:', err);\n      setError('Failed to load jobs. Please check your connection and try again.');\n      setJobs([]);\n      setLoading(false);\n    }\n  };\n  \n  // Load customers, service types, and technicians\n  const loadReferenceData = async () => {\n    try {\n      // Load customers\n      const customersResponse = await customerApi.getAll();\n      setCustomers(customersResponse.data.results || []);\n      \n      // Load technicians - using mock data for now\n      setTechnicians([\n        { id: 1, user: { first_name: 'John', last_name: 'Smith' }, full_name: 'John Smith' },\n        { id: 2, user: { first_name: 'Jane', last_name: 'Doe' }, full_name: 'Jane Doe' },\n        { id: 3, user: { first_name: 'Mike', last_name: 'Johnson' }, full_name: 'Mike Johnson' }\n      ]);\n      \n      // For service types, we'll use a static list since there might not be an API endpoint\n      setServiceTypes([\n        { id: 1, name: 'Electrical Repair' },\n        { id: 2, name: 'Panel Installation' },\n        { id: 3, name: 'Emergency Service' },\n        { id: 4, name: 'Wiring Installation' },\n        { id: 5, name: 'Lighting Installation' },\n        { id: 6, name: 'Circuit Installation' },\n        { id: 7, name: 'Outlet Installation' },\n        { id: 8, name: 'Switch Installation' },\n        { id: 9, name: 'GFCI Installation' },\n        { id: 10, name: 'Electrical Inspection' },\n      ]);\n    } catch (err) {\n      console.error('Error loading reference data:', err);\n      // Set empty arrays if API calls fail\n      setCustomers([]);\n      setTechnicians([]);\n      setServiceTypes([]);\n    }\n  };\n\n  useEffect(() => {\n    loadJobs();\n    loadReferenceData();\n  }, []);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'pending': return 'warning';\n      case 'scheduled': return 'info';\n      case 'in_progress': return 'primary';\n      case 'completed': return 'success';\n      case 'cancelled': return 'error';\n      default: return 'default';\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'low': return 'success';\n      case 'medium': return 'warning';\n      case 'high': return 'error';\n      case 'emergency': return 'error';\n      default: return 'default';\n    }\n  };\n\n  const filteredJobs = jobs.filter(job => {\n    const customerName = job.customer_name || '';\n    const serviceType = job.service_type || job.title || '';\n    const matchesSearch = job.job_number.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         customerName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         serviceType.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === '' || job.status === statusFilter;\n    const matchesPriority = priorityFilter === '' || job.priority === priorityFilter;\n    return matchesSearch && matchesStatus && matchesPriority;\n  });\n\n  const handleCreateJob = () => {\n    navigate('/jobs/new');\n  };\n\n  const handleEditJob = (job: JobListItem) => {\n    setEditingJob(job);\n    \n    // Find the associated customer, service type, and technician IDs\n    const customerId = customers.find(c => c.full_name === job.customer_name)?.id.toString() || '';\n    const serviceTypeId = serviceTypes.find(s => s.name === job.service_type)?.id.toString() || '';\n    \n    // Safely handle technician lookup\n    let technicianId = '';\n    if (job.assigned_technicians && job.assigned_technicians.length > 0) {\n      technicianId = technicians.find(t => t.full_name === job.assigned_technicians![0])?.id.toString() || '';\n    }\n    \n    setFormData({\n      customer_id: customerId,\n      property_address: job.property_address || '',\n      service_type_id: serviceTypeId,\n      status: job.status,\n      priority: job.priority,\n      scheduled_date: new Date(job.scheduled_start || job.created_at || new Date()),\n      assigned_technician_id: technicianId,\n      description: job.description || '',\n      estimated_duration: job.estimated_duration || 0,\n      total_amount: job.actual_cost || job.estimated_cost,\n      notes: job.notes || ''\n    });\n    \n    setFormErrors({});\n    setOpenDialog(true);\n  };\n\n  const handleDeleteJob = async (jobId: number) => {\n    if (window.confirm('Are you sure you want to delete this job?')) {\n      try {\n        await jobApi.delete(jobId);\n        // Reload jobs after successful deletion\n        await loadJobs();\n      } catch (err) {\n        console.error('Error deleting job:', err);\n        setError('Failed to delete job. Please try again.');\n      }\n    }\n  };\n\n  const handleFormChange = (field: string, value: any) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    \n    // Clear error for this field if it exists\n    if (formErrors[field]) {\n      setFormErrors(prev => {\n        const newErrors = {...prev};\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n  \n  const validateJobForm = () => {\n    const validationRules = {\n      customer_id: { required: true },\n      property_address: commonValidationRules.address,\n      service_type_id: { required: true },\n      description: commonValidationRules.description,\n      estimated_duration: commonValidationRules.duration,\n      total_amount: commonValidationRules.currency\n    };\n    \n    const result = validateForm(formData, validationRules);\n    setFormErrors(result.errors);\n    return result.isValid;\n  };\n  \n  const handleSaveJob = async () => {\n    try {\n      if (!validateJobForm()) return;\n      setSubmitting(true);\n      \n      const jobData = {\n        customer: parseInt(formData.customer_id),\n        property_address: formData.property_address,\n        service_type: serviceTypes.find(st => st.id.toString() === formData.service_type_id)?.name || '',\n        status: formData.status as Job['status'],\n        priority: formData.priority as Job['priority'],\n        scheduled_start: formData.scheduled_date,\n        assigned_to: formData.assigned_technician_id ? [parseInt(formData.assigned_technician_id)] : [],\n        description: formData.description,\n        estimated_duration: formData.estimated_duration,\n        estimated_cost: formData.total_amount,\n        notes: formData.notes\n      };\n\n      if (editingJob) {\n        await jobApi.update(editingJob.id, jobData);\n      } else {\n        await jobApi.create(jobData);\n      }\n      \n      // Reload jobs after successful save\n      await loadJobs();\n      setOpenDialog(false);\n      setSubmitting(false);\n    } catch (err) {\n      console.error('Error saving job:', err);\n      setError('Failed to save job. Please try again.');\n      setSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress size={40} sx={{ mb: 2 }} />\n        <Typography variant=\"h6\" color=\"textSecondary\">Loading jobs...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Jobs & Work Orders\n        </Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={handleCreateJob}\n        >\n          Create Job\n        </Button>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Summary Cards */}\n      <Grid container spacing={3} sx={{ mb: 3 }}>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\">Total Jobs</Typography>\n              <Typography variant=\"h4\" color=\"primary\">\n                {jobs.length}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\">Pending</Typography>\n              <Typography variant=\"h4\" color=\"warning.main\">\n                {jobs.filter(j => j.status === 'pending').length}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\">In Progress</Typography>\n              <Typography variant=\"h4\" color=\"primary\">\n                {jobs.filter(j => j.status === 'in_progress').length}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\">Completed</Typography>\n              <Typography variant=\"h4\" color=\"success.main\">\n                {jobs.filter(j => j.status === 'completed').length}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Filters */}\n      <Grid container spacing={2} sx={{ mb: 3 }}>\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"Search jobs...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            InputProps={{\n              startAdornment: <SearchIcon color=\"action\" sx={{ mr: 1 }} />\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <TextField\n            select\n            fullWidth\n            label=\"Status\"\n            value={statusFilter}\n            onChange={(e) => setStatusFilter(e.target.value)}\n          >\n            <MenuItem value=\"\">All Statuses</MenuItem>\n            <MenuItem value=\"pending\">Pending</MenuItem>\n            <MenuItem value=\"scheduled\">Scheduled</MenuItem>\n            <MenuItem value=\"in_progress\">In Progress</MenuItem>\n            <MenuItem value=\"completed\">Completed</MenuItem>\n            <MenuItem value=\"cancelled\">Cancelled</MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <TextField\n            select\n            fullWidth\n            label=\"Priority\"\n            value={priorityFilter || ''}\n            onChange={(e) => setPriorityFilter(e.target.value)}\n          >\n            <MenuItem value=\"\">All Priorities</MenuItem>\n            <MenuItem value=\"low\">Low</MenuItem>\n            <MenuItem value=\"medium\">Medium</MenuItem>\n            <MenuItem value=\"high\">High</MenuItem>\n            <MenuItem value=\"emergency\">Emergency</MenuItem>\n          </TextField>\n        </Grid>\n      </Grid>\n\n      {/* Jobs Table */}\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Job Number</TableCell>\n              <TableCell>Customer</TableCell>\n              <TableCell>Service Type</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Priority</TableCell>\n              <TableCell>Scheduled Date</TableCell>\n              <TableCell>Technician</TableCell>\n              <TableCell>Amount</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredJobs.map((job) => (\n              <TableRow key={job.id}>\n                <TableCell>\n                  <Typography variant=\"body2\" fontWeight=\"bold\">\n                    {job.job_number}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Box>\n                    <Typography variant=\"body2\">{job.customer_name || 'N/A'}</Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {job.property_address || 'N/A'}\n                    </Typography>\n                  </Box>\n                </TableCell>\n                <TableCell>{job.service_type || job.title || 'N/A'}</TableCell>\n                <TableCell>\n                  <Chip\n                    label={job.status.replace('_', ' ')}\n                    color={getStatusColor(job.status) as any}\n                    size=\"small\"\n                    sx={{ textTransform: 'capitalize' }}\n                  />\n                </TableCell>\n                <TableCell>\n                  <Chip\n                    label={job.priority}\n                    color={getPriorityColor(job.priority) as any}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    sx={{ textTransform: 'capitalize' }}\n                  />\n                </TableCell>\n                <TableCell>\n                  {job.scheduled_start ? \n                    new Date(job.scheduled_start).toLocaleDateString() + ' ' +\n                    new Date(job.scheduled_start).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n                    : 'Not scheduled'\n                  }\n                </TableCell>\n                <TableCell>{(job.assigned_technicians && job.assigned_technicians.length > 0 ? job.assigned_technicians.join(', ') : 'Unassigned')}</TableCell>\n                <TableCell>${(job.actual_cost || job.estimated_cost || 0).toFixed(2)}</TableCell>\n                <TableCell>\n                  <Box display=\"flex\" gap={1}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditJob(job)}\n                      color=\"primary\"\n                    >\n                      <ViewIcon />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditJob(job)}\n                      color=\"primary\"\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleDeleteJob(job.id)}\n                      color=\"error\"\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </Box>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {filteredJobs.length === 0 && (\n        <Box textAlign=\"center\" py={4}>\n          <Typography variant=\"h6\" color=\"text.secondary\">\n            No jobs found\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n            {searchTerm || statusFilter ? 'Try adjusting your filters' : 'Create your first job to get started'}\n          </Typography>\n          {!searchTerm && !statusFilter && (\n            <Button variant=\"contained\" onClick={handleCreateJob}>\n              Create First Job\n            </Button>\n          )}\n        </Box>\n      )}\n\n      {/* Job Dialog */}\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          {editingJob ? 'Edit Job' : 'Create New Job'}\n        </DialogTitle>\n        <DialogContent>\n          <Box component=\"form\" sx={{ mt: 2 }}>\n            <Grid container spacing={2}>\n              {/* Customer Selection */}\n              <Grid item xs={12} md={6}>\n                <FormControl fullWidth error={!!formErrors.customer_id}>\n                  <InputLabel>Customer</InputLabel>\n                  <Select\n                    value={formData.customer_id}\n                    label=\"Customer\"\n                    onChange={(e) => handleFormChange('customer_id', e.target.value)}\n                  >\n                    <MenuItem value=\"\"><em>Select Customer</em></MenuItem>\n                    {customers.map(customer => (\n                      <MenuItem key={customer.id} value={customer.id.toString()}>\n                        {customer.full_name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  {formErrors.customer_id && (\n                    <FormHelperText>{formErrors.customer_id}</FormHelperText>\n                  )}\n                </FormControl>\n              </Grid>\n              \n              {/* Property Address */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  label=\"Property Address\"\n                  value={formData.property_address}\n                  onChange={(e) => handleFormChange('property_address', e.target.value)}\n                  error={!!formErrors.property_address}\n                  helperText={formErrors.property_address}\n                />\n              </Grid>\n              \n              {/* Service Type */}\n              <Grid item xs={12} md={6}>\n                <FormControl fullWidth error={!!formErrors.service_type_id}>\n                  <InputLabel>Service Type</InputLabel>\n                  <Select\n                    value={formData.service_type_id}\n                    label=\"Service Type\"\n                    onChange={(e) => handleFormChange('service_type_id', e.target.value)}\n                  >\n                    <MenuItem value=\"\"><em>Select Service Type</em></MenuItem>\n                    {serviceTypes.map(type => (\n                      <MenuItem key={type.id} value={type.id.toString()}>\n                        {type.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  {formErrors.service_type_id && (\n                    <FormHelperText>{formErrors.service_type_id}</FormHelperText>\n                  )}\n                </FormControl>\n              </Grid>\n              \n              {/* Status */}\n              <Grid item xs={12} md={6}>\n                <FormControl fullWidth>\n                  <InputLabel>Status</InputLabel>\n                  <Select\n                    value={formData.status}\n                    label=\"Status\"\n                    onChange={(e) => handleFormChange('status', e.target.value)}\n                  >\n                    <MenuItem value=\"pending\">Pending</MenuItem>\n                    <MenuItem value=\"scheduled\">Scheduled</MenuItem>\n                    <MenuItem value=\"in_progress\">In Progress</MenuItem>\n                    <MenuItem value=\"completed\">Completed</MenuItem>\n                    <MenuItem value=\"cancelled\">Cancelled</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              \n              {/* Priority */}\n              <Grid item xs={12} md={6}>\n                <FormControl fullWidth>\n                  <InputLabel>Priority</InputLabel>\n                  <Select\n                    value={formData.priority}\n                    label=\"Priority\"\n                    onChange={(e) => handleFormChange('priority', e.target.value)}\n                  >\n                    <MenuItem value=\"low\">Low</MenuItem>\n                    <MenuItem value=\"medium\">Medium</MenuItem>\n                    <MenuItem value=\"high\">High</MenuItem>\n                    <MenuItem value=\"emergency\">Emergency</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              \n              {/* Scheduled Date/Time */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  label=\"Scheduled Date & Time\"\n                  type=\"datetime-local\"\n                  value={formData.scheduled_date ? \n                    new Date(formData.scheduled_date).toISOString().slice(0, 16) : \n                    ''\n                  }\n                  onChange={(e) => {\n                    const dateValue = e.target.value ? new Date(e.target.value).toISOString() : '';\n                    handleFormChange('scheduled_date', dateValue);\n                  }}\n                  InputLabelProps={{ shrink: true }}\n                  helperText=\"Select date and time for the job\"\n                />\n              </Grid>\n              \n              {/* Technician */}\n              <Grid item xs={12} md={6}>\n                <FormControl fullWidth>\n                  <InputLabel>Assigned Technician</InputLabel>\n                  <Select\n                    value={formData.assigned_technician_id}\n                    label=\"Assigned Technician\"\n                    onChange={(e) => handleFormChange('assigned_technician_id', e.target.value)}\n                  >\n                    <MenuItem value=\"\"><em>None</em></MenuItem>\n                    {technicians.map(tech => (\n                      <MenuItem key={tech.id} value={tech.id.toString()}>\n                        {tech.full_name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              \n              {/* Estimated Duration */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  type=\"number\"\n                  label=\"Estimated Duration (hours)\"\n                  value={formData.estimated_duration}\n                  onChange={(e) => handleFormChange('estimated_duration', e.target.value)}\n                  error={!!formErrors.estimated_duration}\n                  helperText={formErrors.estimated_duration}\n                  InputProps={{ inputProps: { min: 0 } }}\n                />\n              </Grid>\n              \n              {/* Total Amount */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  type=\"number\"\n                  label=\"Total Amount ($)\"\n                  value={formData.total_amount}\n                  onChange={(e) => handleFormChange('total_amount', e.target.value)}\n                  error={!!formErrors.total_amount}\n                  helperText={formErrors.total_amount}\n                  InputProps={{ inputProps: { min: 0, step: 0.01 } }}\n                />\n              </Grid>\n              \n              <Grid item xs={12}>\n                <Divider sx={{ my: 1 }} />\n              </Grid>\n              \n              {/* Description */}\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={3}\n                  label=\"Job Description\"\n                  value={formData.description}\n                  onChange={(e) => handleFormChange('description', e.target.value)}\n                  error={!!formErrors.description}\n                  helperText={formErrors.description}\n                />\n              </Grid>\n              \n              {/* Notes */}\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={3}\n                  label=\"Additional Notes\"\n                  value={formData.notes}\n                  onChange={(e) => handleFormChange('notes', e.target.value)}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleSaveJob}\n            disabled={submitting}\n          >\n            {submitting ? <CircularProgress size={20} /> : 'Save'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default JobList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}