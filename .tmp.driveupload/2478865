{"version":3,"file":"static/js/333.2c06d993.chunk.js","mappings":"2IAIA,SAAeA,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,0KACD,S,2YCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,6FACD,Q,aCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,wCACD,Q,2FC8CJ,SAASC,EAASC,GAChB,MAAM,SAAEC,EAAQ,MAAEC,EAAK,MAAEC,GAAoBH,EAAVI,GAAKC,EAAAA,EAAAA,GAAKL,EAAKM,GAElD,OACET,EAAAA,EAAAA,KAAA,OAAAU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,KAAK,WACLC,OAAQP,IAAUC,EAClBO,GAAE,qBAAAC,OAAuBR,GACzB,kCAAAQ,OAAiCR,IAC7BC,GAAK,IAAAH,SAERC,IAAUC,IAASN,EAAAA,EAAAA,KAACe,EAAAA,EAAG,CAACC,GAAI,CAAEC,EAAG,GAAIb,SAAEA,MAG9C,CAEA,MAAMc,EAAoCA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC9C,MAAM,GAAEjB,IAAOkB,EAAAA,EAAAA,KACTC,IAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,IAAqB,kBACrB,MAAOC,GAAUC,KAAeC,EAAAA,EAAAA,UAA0B,OACnDC,GAASC,KAAcF,EAAAA,EAAAA,WAAS,IAChCG,GAAUC,KAAeJ,EAAAA,EAAAA,UAAS,IAClCK,GAAWC,KAAgBN,EAAAA,EAAAA,WAAS,IACpCO,GAAYC,KAAiBR,EAAAA,EAAAA,WAAS,IACtCS,GAAUC,KAAeV,EAAAA,EAAAA,UAA4B,CAAC,IACtDW,GAAaC,KAAkBZ,EAAAA,EAAAA,WAAS,IACxCa,GAAOC,KAAYd,EAAAA,EAAAA,UAAwB,OAC3Ce,GAASC,KAAchB,EAAAA,EAAAA,UAAwB,OAG/CiB,GAAiBC,KAAsBlB,EAAAA,EAAAA,WAAS,IAChDmB,GAAiBC,KAAsBpB,EAAAA,EAAAA,UAA0B,OACjEqB,GAAkBC,KAAuBtB,EAAAA,EAAAA,UAA4B,CAAC,IACtEuB,GAAiBC,KAAsBxB,EAAAA,EAAAA,WAAS,GAEjDyB,GAAgBC,EAAAA,aAAkBC,UACtC,IACEzB,IAAW,GACX,MAAM0B,QAAiBC,EAAAA,GAAYC,QAAQC,GAC3ChC,GAAY6B,EAASI,KACvB,CAAE,MAAOnB,IACPoB,QAAQpB,MAAM,2BAA4BA,IAC1ClB,GAAS,aACX,CAAC,QACCO,IAAW,EACb,IACC,CAACP,MAEJuC,EAAAA,EAAAA,YAAU,KACG,QAAP1D,GACFgC,IAAc,GACdF,IAAa,GACbJ,IAAW,GACXQ,GAAY,CACVyB,WAAY,GACZC,UAAW,GACXC,MAAO,GACPC,MAAO,GACPC,cAAe,cACfC,eAAgB,GAChBC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,aAAc,GACdC,yBAA0B,QAC1BC,MAAO,MAEAtE,GAAa,QAAPA,EACfiD,GAAcsB,SAASvE,IAEvB0B,IAAW,EACb,GACC,CAAC1B,EAAIiD,KAER,MAIMuB,GAAoBA,CAACC,EAAuBjF,KAChD0C,IAAawC,IAAuB7E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC/B6E,GAAI,IACP,CAACD,GAAQjF,KACR,EAkFCmF,GAA4BA,CAACF,EAAuBjF,KACxDsD,IAAqB4B,IAAuB7E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvC6E,GAAI,IACP,CAACD,GAAQjF,KACR,EAkCCoF,GAAuBA,KAC3BlC,IAAmB,GACnBE,GAAmB,MACnBE,GAAoB,CAAC,EAAE,EAGzB,GAAIrB,GACF,OAAOtC,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAAtF,SAAC,gCAGrB,IAAKwC,KAAeT,GAClB,OAAOnC,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAAtF,SAAC,uBAGrB,MAAMuF,GAAwB,OAARxD,SAAQ,IAARA,IAAiB,QAAThB,EAARgB,GAAUyD,eAAO,IAAAzE,GAAjBA,EAAmB0E,OACrC1D,GAASyD,QAAQE,QAAO,CAACC,EAAaC,IAAgBD,EAAMC,EAAOC,QAAQ,GAAK9D,GAASyD,QAAQC,OACjG,EAEEK,GAAcxD,GAAYI,GAAWX,GACrCgE,GAAQvD,GAAa,mBAAsBF,GAAY,gBAA0B,OAARP,SAAQ,IAARA,QAAQ,EAARA,GAAUiE,UAEzF,OACEC,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAAAX,SAAA,EACFJ,EAAAA,EAAAA,KAACsG,EAAAA,EAAQ,CAACC,OAAQrD,GAAOsD,iBAAkB,IAAMC,QAASA,IAAMtD,GAAS,MAAM/C,UAC7EJ,EAAAA,EAAAA,KAAC0G,EAAAA,EAAK,CAACC,SAAS,QAAQF,QAASA,IAAMtD,GAAS,MAAM/C,SACnD8C,QAGLlD,EAAAA,EAAAA,KAACsG,EAAAA,EAAQ,CAACC,OAAQnD,GAASoD,iBAAkB,IAAMC,QAASA,IAAMpD,GAAW,MAAMjD,UACjFJ,EAAAA,EAAAA,KAAC0G,EAAAA,EAAK,CAACC,SAAS,UAAUF,QAASA,IAAMpD,GAAW,MAAMjD,SACvDgD,QAKLiD,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAAC6F,QAAQ,OAAOC,WAAW,SAASC,GAAI,EAAE1G,SAAA,EAC5CJ,EAAAA,EAAAA,KAAC+G,EAAAA,EAAU,CAACC,QAASA,IAAMhF,GAAS,cAAehB,GAAI,CAAEiG,GAAI,GAAI7G,UAC/DJ,EAAAA,EAAAA,KAACkH,EAAAA,EAAa,OAEdtE,KACA5C,EAAAA,EAAAA,KAACmH,EAAAA,EAAM,CAACnG,GAAI,CAAEiG,GAAI,EAAGG,QAAwC,gBAApB,OAAXlB,SAAW,IAAXA,QAAW,EAAXA,GAAatB,eAAiC,eAAiB,kBAAmBxE,SAC9E,gBAApB,OAAX8F,SAAW,IAAXA,QAAW,EAAXA,GAAatB,gBAAiC5E,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,KAAMrH,EAAAA,EAAAA,KAACsH,EAAAA,EAAU,OAGjFjB,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAACwG,SAAU,EAAEnH,SAAA,EACfJ,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAC8B,QAAQ,KAAKC,UAAU,KAAIrH,SACpC+F,MAEDzD,KAAcE,KACdyD,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAAC6F,QAAQ,OAAOc,IAAK,EAAGC,GAAI,EAAEvH,SAAA,EAChCJ,EAAAA,EAAAA,KAAC4H,EAAAA,EAAI,CACHC,MAAe,OAAR1F,SAAQ,IAARA,QAAQ,EAARA,GAAUyC,cACjBkD,MAAmC,gBAApB,OAAR3F,SAAQ,IAARA,QAAQ,EAARA,GAAUyC,eAAiC,UAAY,eAEhE5E,EAAAA,EAAAA,KAAC4H,EAAAA,EAAI,CACHC,MAAe,OAAR1F,SAAQ,IAARA,QAAQ,EAARA,GAAU+C,yBACjBsC,QAAQ,mBAKf9E,IACC2D,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAAC6F,QAAQ,OAAOc,IAAK,EAAEtH,SAAA,EACzBJ,EAAAA,EAAAA,KAAC+H,EAAAA,EAAM,CACLP,QAAQ,YACRQ,WAAWhI,EAAAA,EAAAA,KAACiI,EAAAA,EAAQ,IACpBjB,QAvLOhD,UACjB,IAIE,GAHAf,IAAe,GACfE,GAAS,MAELP,GAAY,CACd,MAAMqB,QAAiBC,EAAAA,GAAYgE,OAAOpF,IAC1CO,GAAW,kCACXrB,GAAS,cAADlB,OAAemD,EAASI,KAAKxD,IACvC,KAAO,CACL,MAAMoD,QAAiBC,EAAAA,GAAYiE,OAAOhG,GAAUtB,GAAIiC,IACxDV,GAAY6B,EAASI,MACrBhB,GAAW,kCACXV,IAAa,EACf,CACF,CAAE,MAAOO,IAAa,IAADkF,EAAAC,EACnB/D,QAAQpB,MAAM,yBAA0BA,IACxCC,IAAuB,QAAdiF,EAAAlF,GAAMe,gBAAQ,IAAAmE,GAAM,QAANC,EAAdD,EAAgB/D,YAAI,IAAAgE,OAAN,EAAdA,EAAsBC,UAAW,wBAC5C,CAAC,QACCrF,IAAe,EACjB,GAoKUsF,SAAUvF,GAAY5C,SAErB4C,GAAc,YAAc,UAE/BhD,EAAAA,EAAAA,KAAC+H,EAAAA,EAAM,CACLP,QAAQ,WACRQ,WAAWhI,EAAAA,EAAAA,KAACwI,EAAAA,EAAU,IACtBxB,QAxKSyB,KACf7F,GACFZ,GAAS,eAETW,IAAa,GACbI,GAAY,CAAC,GACf,EAkKgC3C,SACvB,eAKFwC,KACC5C,EAAAA,EAAAA,KAAC+H,EAAAA,EAAM,CACLP,QAAQ,YACRQ,WAAWhI,EAAAA,EAAAA,KAAC0I,EAAAA,EAAQ,IACpB1B,QAzKO2B,KACjBhG,IAAa,GACbI,GAAYZ,IAAY,CAAC,EAAE,EAuKG/B,SACrB,aAQPJ,EAAAA,EAAAA,KAAC4I,EAAAA,EAAI,CAAC5H,GAAI,CAAE8F,GAAI,GAAI1G,UAClBJ,EAAAA,EAAAA,KAAC6I,EAAAA,EAAW,CAAAzI,SACTsC,IACC2D,EAAAA,EAAAA,MAACyC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE5I,SAAA,EACzBJ,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9I,UAChBJ,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAC8B,QAAQ,KAAK2B,cAAY,EAAA/I,SAAC,4BAExCJ,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,aACNxH,MAAOyC,GAAS0B,YAAc,GAC9B+E,SAAWC,GAAqCnE,GAAkB,aAAcmE,EAAEC,OAAOpJ,OACzFqJ,UAAQ,OAGZ1J,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,YACNxH,MAAOyC,GAAS2B,WAAa,GAC7B8E,SAAWC,GAAqCnE,GAAkB,YAAamE,EAAEC,OAAOpJ,OACxFqJ,UAAQ,OAGZ1J,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,QACN8B,KAAK,QACLtJ,MAAOyC,GAAS4B,OAAS,GACzB6E,SAAWC,GAAqCnE,GAAkB,QAASmE,EAAEC,OAAOpJ,OACpFqJ,UAAQ,OAGZ1J,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,QACNxH,MAAOyC,GAAS6B,OAAS,GACzB4E,SAAWC,GAAqCnE,GAAkB,QAASmE,EAAEC,OAAOpJ,OACpFqJ,UAAQ,OAGZ1J,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBiG,EAAAA,EAAAA,MAACuD,EAAAA,EAAW,CAACN,WAAS,EAACI,UAAQ,EAAAtJ,SAAA,EAC7BJ,EAAAA,EAAAA,KAAC6J,EAAAA,EAAU,CAAAzJ,SAAC,mBACZiG,EAAAA,EAAAA,MAACyD,EAAAA,EAAM,CACLzJ,MAAOyC,GAAS8B,eAAiB,cACjCiD,MAAM,gBACN0B,SAAWC,GAAyBnE,GAAkB,gBAAiBmE,EAAEC,OAAOpJ,OAAOD,SAAA,EAEvFJ,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,CAAC1J,MAAM,cAAaD,SAAC,iBAC9BJ,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,CAAC1J,MAAM,aAAYD,SAAC,wBAInCJ,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBiG,EAAAA,EAAAA,MAACuD,EAAAA,EAAW,CAACN,WAAS,EAACI,UAAQ,EAAAtJ,SAAA,EAC7BJ,EAAAA,EAAAA,KAAC6J,EAAAA,EAAU,CAAAzJ,SAAC,8BACZiG,EAAAA,EAAAA,MAACyD,EAAAA,EAAM,CACLzJ,MAAOyC,GAASoC,0BAA4B,QAC5C2C,MAAM,2BACN0B,SAAWC,GAAyBnE,GAAkB,2BAA4BmE,EAAEC,OAAOpJ,OAAOD,SAAA,EAElGJ,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,CAAC1J,MAAM,QAAOD,SAAC,WACxBJ,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,CAAC1J,MAAM,QAAOD,SAAC,WACxBJ,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,CAAC1J,MAAM,OAAMD,SAAC,iBAID,eAA3B0C,GAAS8B,gBACR5E,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9I,UAChBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,eACNxH,MAAOyC,GAASmC,cAAgB,GAChCsE,SAAWC,GAAqCnE,GAAkB,eAAgBmE,EAAEC,OAAOpJ,YAIjGL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9I,UAChBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,iBACNxH,MAAOyC,GAAS+B,gBAAkB,GAClC0E,SAAWC,GAAqCnE,GAAkB,iBAAkBmE,EAAEC,OAAOpJ,OAC7FqJ,UAAQ,OAGZ1J,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,OACNxH,MAAOyC,GAASgC,MAAQ,GACxByE,SAAWC,GAAqCnE,GAAkB,OAAQmE,EAAEC,OAAOpJ,OACnFqJ,UAAQ,OAGZ1J,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,QACNxH,MAAOyC,GAASiC,OAAS,GACzBwE,SAAWC,GAAqCnE,GAAkB,QAASmE,EAAEC,OAAOpJ,OACpFqJ,UAAQ,OAGZ1J,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,WACNxH,MAAOyC,GAASkC,UAAY,GAC5BuE,SAAWC,GAAqCnE,GAAkB,WAAYmE,EAAEC,OAAOpJ,OACvFqJ,UAAQ,OAGZ1J,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9I,UAChBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,QACNmC,WAAS,EACTC,KAAM,EACN5J,MAAOyC,GAASqC,OAAS,GACzBoE,SAAWC,GAAqCnE,GAAkB,QAASmE,EAAEC,OAAOpJ,eAK1FgG,EAAAA,EAAAA,MAACyC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE5I,SAAA,EACzBiG,EAAAA,EAAAA,MAACyC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIgB,GAAI,EAAE9J,SAAA,EACvBJ,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAC8B,QAAQ,KAAK2B,cAAY,EAAA/I,SAAC,yBACtCiG,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAAtF,SAAA,CAAC,gBAAY,OAAR+B,SAAQ,IAARA,QAAQ,EAARA,GAAUuC,UAC1B2B,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAAtF,SAAA,CAAC,gBAAY,OAAR+B,SAAQ,IAARA,QAAQ,EAARA,GAAUwC,UAC1B0B,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAAtF,SAAA,CAAC,gBAAY,OAAR+B,SAAQ,IAARA,QAAQ,EAARA,GAAUgI,iBACjB,OAARhI,SAAQ,IAARA,QAAQ,EAARA,GAAU8C,gBACToB,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAAtF,SAAA,CAAC,gBAAI+B,GAAS8C,oBAG7BoB,EAAAA,EAAAA,MAACyC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIgB,GAAI,EAAE9J,SAAA,EACvBJ,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAC8B,QAAQ,KAAK2B,cAAY,EAAA/I,SAAC,aACtCiG,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAAtF,SAAA,CAAC,gBACW,OAAR+B,SAAQ,IAARA,IAAoB,QAAZf,EAARe,GAAUiI,kBAAU,IAAAhJ,OAAZ,EAARA,EAAsByE,SAAU,MAE/CQ,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAAtF,SAAA,CAAC,aACQ,OAAR+B,SAAQ,IAARA,IAAiB,QAATd,EAARc,GAAUyD,eAAO,IAAAvE,OAAT,EAARA,EAAmBwE,SAAU,EACtCF,GAAgB,IACfU,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAAC0G,UAAU,OAAOb,QAAQ,cAAcC,WAAW,SAASwD,GAAI,EAAEjK,SAAA,EACpEJ,EAAAA,EAAAA,KAACsK,EAAQ,CAACC,SAAS,QAAQvJ,GAAI,CAAE8G,MAAO,UACvCnC,GAAc6E,QAAQ,UAI7BnE,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAAtF,SAAA,CAAC,mBACe,OAAR+B,SAAQ,IAARA,IAAAA,GAAUsI,WAAa,IAAIC,KAAKvI,GAASsI,YAAYE,qBAAuB,oBASvG/H,KAAeF,KACjB2D,EAAAA,EAAAA,MAACuC,EAAAA,EAAI,CAAAxI,SAAA,EACHJ,EAAAA,EAAAA,KAACe,EAAAA,EAAG,CAACC,GAAI,CAAE4J,aAAc,EAAGC,YAAa,WAAYzK,UACnDiG,EAAAA,EAAAA,MAACyE,EAAAA,EAAI,CAACzK,MAAOmC,GAAU+G,SAnYPwB,CAACC,EAA8BC,KACrDxI,GAAYwI,EAAS,EAkYkC7K,SAAA,EAC/CJ,EAAAA,EAAAA,KAACkL,EAAAA,EAAG,CAACrD,MAAK,eAAA/G,QAAyB,OAARqB,SAAQ,IAARA,IAAoB,QAAZb,EAARa,GAAUiI,kBAAU,IAAA9I,OAAZ,EAARA,EAAsBuE,SAAU,EAAC,QAC5D7F,EAAAA,EAAAA,KAACkL,EAAAA,EAAG,CAACrD,MAAK,aAAA/G,QAAuB,OAARqB,SAAQ,IAARA,IAAkB,QAAVZ,EAARY,GAAUgJ,gBAAQ,IAAA5J,OAAV,EAARA,EAAoBsE,SAAU,EAAC,QACxD7F,EAAAA,EAAAA,KAACkL,EAAAA,EAAG,CAACrD,MAAK,YAAA/G,QAAsB,OAARqB,SAAQ,IAARA,IAAiB,QAATX,EAARW,GAAUyD,eAAO,IAAApE,OAAT,EAARA,EAAmBqE,SAAU,EAAC,QACtD7F,EAAAA,EAAAA,KAACkL,EAAAA,EAAG,CAACrD,MAAM,sBAIfxB,EAAAA,EAAAA,MAACnG,EAAQ,CAACG,MAAOmC,GAAUlC,MAAO,EAAEF,SAAA,EAClCiG,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAACC,GAAI,CAAE8F,GAAI,EAAGF,QAAS,OAAQwE,eAAgB,gBAAiBvE,WAAY,UAAWzG,SAAA,EACzFJ,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAC8B,QAAQ,KAAIpH,SAAC,gBACzBJ,EAAAA,EAAAA,KAAC+H,EAAAA,EAAM,CACLP,QAAQ,YACRQ,WAAWhI,EAAAA,EAAAA,KAACqL,EAAAA,EAAO,IACnBrE,QAhWcsE,KACxB/H,IAAmB,GACnBE,GAAmB,MACnBE,GAAoB,CAClBxB,SAAkB,OAARA,SAAQ,IAARA,QAAQ,EAARA,GAAUtB,GACpB0K,cAAe,gBACf1G,eAAgB,GAChBC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVwG,kBAAkB,EAClBC,mBAAmB,GACnB,EAqVQlD,SAAU3E,GAAgBxD,SAC3B,oBAKM,OAAR+B,SAAQ,IAARA,IAAoB,QAAZV,EAARU,GAAUiI,kBAAU,IAAA3I,GAApBA,EAAsBoE,QACrB7F,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE5I,SAChB,OAAR+B,SAAQ,IAARA,IAAoB,QAAZT,EAARS,GAAUiI,kBAAU,IAAA1I,OAAZ,EAARA,EAAsBgK,KAAKC,IAC1B3L,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIgB,GAAI,EAAqBzC,UAAU,MAAKrH,UACzDJ,EAAAA,EAAAA,KAAC4I,EAAAA,EAAI,CAACpB,QAAQ,WAAUpH,UACtBiG,EAAAA,EAAAA,MAACwC,EAAAA,EAAW,CAAAzI,SAAA,EACViG,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAACC,GAAI,CAAE4F,QAAS,OAAQwE,eAAgB,gBAAiBvE,WAAY,aAAcC,GAAI,GAAI1G,SAAA,EAC7FiG,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAACC,GAAI,CAAE4F,QAAS,OAAQC,WAAY,UAAWzG,SAAA,EACjDJ,EAAAA,EAAAA,KAAC4L,EAAQ,CAAC5K,GAAI,CAAEiG,GAAI,EAAGa,MAAO,mBAC9B9H,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAC8B,QAAQ,KAAIpH,SACrBuL,EAASJ,cAAcM,QAAQ,IAAK,KAAKA,QAAQ,SAAUC,GAAcA,EAAEC,sBAGhF1F,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAAAX,SAAA,EACFJ,EAAAA,EAAAA,KAAC+G,EAAAA,EAAU,CACTiF,KAAK,QACLhF,QAASA,IAxWP2E,KAC1BlI,GAAmBkI,GACnBpI,IAAmB,GACnBI,GAAoBgI,EAAS,EAqWUM,CAAmBN,GAClCpD,SAAU3E,GAAgBxD,UAE1BJ,EAAAA,EAAAA,KAAC0I,EAAAA,EAAQ,CAAC6B,SAAS,aAErBvK,EAAAA,EAAAA,KAAC+G,EAAAA,EAAU,CACTiF,KAAK,QACLhF,QAASA,IAzWNhD,WAC3B,GAAKkI,OAAOC,QAAQ,kDAEpB,IACEtI,IAAmB,SACbuI,EAAAA,GAAYC,OAAOC,GAGrBnK,UACI2B,GAAc3B,GAAStB,IAE/BwC,GAAW,iCACb,CAAE,MAAOH,IAAa,IAADqJ,EAAAC,EACnBlI,QAAQpB,MAAM,2BAA4BA,IAC1CC,IAAuB,QAAdoJ,EAAArJ,GAAMe,gBAAQ,IAAAsI,GAAM,QAANC,EAAdD,EAAgBlI,YAAI,IAAAmI,OAAN,EAAdA,EAAsBlE,UAAW,0BAC5C,CAAC,QACCzE,IAAmB,EACrB,GAwVuC4I,CAAqBd,EAAS9K,IAC7C0H,SAAU3E,GACVkE,MAAM,QAAO1H,UAEbJ,EAAAA,EAAAA,KAAC0M,EAAAA,EAAU,CAACnC,SAAS,mBAK3BvK,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAACyD,cAAY,EAAA/I,SAAEuL,EAASxB,gBAEjCwB,EAASgB,gBAAkBhB,EAASiB,YAAcjB,EAASkB,UAAYlB,EAASmB,aAChFzG,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAACC,GAAI,CAAE8F,GAAI,GAAI1G,SAAA,CAChBuL,EAASgB,iBACR3M,EAAAA,EAAAA,KAAC4H,EAAAA,EAAI,CAACC,MAAK,GAAA/G,OAAK6K,EAASgB,eAAc,UAAUX,KAAK,QAAQhL,GAAI,CAAEiG,GAAI,GAAKH,GAAI,MAElF6E,EAASiB,aACR5M,EAAAA,EAAAA,KAAC4H,EAAAA,EAAI,CAACC,MAAK,SAAA/G,OAAW6K,EAASiB,YAAcZ,KAAK,QAAQhL,GAAI,CAAEiG,GAAI,GAAKH,GAAI,MAE9E6E,EAASkB,WACR7M,EAAAA,EAAAA,KAAC4H,EAAAA,EAAI,CAACC,MAAK,GAAA/G,OAAK6K,EAASkB,SAAQ,QAAQb,KAAK,QAAQhL,GAAI,CAAEiG,GAAI,GAAKH,GAAI,MAE1E6E,EAASmB,YACR9M,EAAAA,EAAAA,KAAC4H,EAAAA,EAAI,CAACC,MAAK,GAAA/G,OAAK6K,EAASmB,UAAS,SAASd,KAAK,QAAQhL,GAAI,CAAEiG,GAAI,GAAKH,GAAI,SAKhF6E,EAASoB,mBACR1G,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAC8B,QAAQ,QAAQM,MAAM,iBAAgB1H,SAAA,CAAC,uBACtCuL,EAASoB,iBAAiB,KAAGpB,EAASqB,oBAAoB,QAIxErB,EAASsB,0BACR5G,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAC8B,QAAQ,QAAQM,MAAM,iBAAgB1H,SAAA,CAAC,wBAChC,IAAIsK,KAAKiB,EAASsB,yBAAyBtC,yBAIhEtE,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAACC,GAAI,CAAE2G,GAAI,GAAIvH,SAAA,CAChBuL,EAASH,mBACRxL,EAAAA,EAAAA,KAAC4H,EAAAA,EAAI,CAACC,MAAM,eAAemE,KAAK,QAAQlE,MAAM,UAAU9G,GAAI,CAAEiG,GAAI,MAEnE0E,EAASF,oBACRzL,EAAAA,EAAAA,KAAC4H,EAAAA,EAAI,CAACC,MAAM,gBAAgBmE,KAAK,QAAQlE,MAAM,UAAU9G,GAAI,CAAEiG,GAAI,SAItE0E,EAASxG,QACRkB,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAC8B,QAAQ,QAAQxG,GAAI,CAAE2G,GAAI,EAAGuF,UAAW,UAAW9M,SAAA,CAAC,gBAC1DuL,EAASxG,eAvEQwG,EAAS9K,SAgF5CwF,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAACC,GAAI,CAAEmM,UAAW,SAAUC,GAAI,GAAIhN,SAAA,EACtCJ,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAACoC,MAAM,iBAAiBqB,cAAY,EAAA/I,SAAC,2BAChDJ,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAC8B,QAAQ,QAAQM,MAAM,iBAAgB1H,SAAC,gFAOzDJ,EAAAA,EAAAA,KAACE,EAAQ,CAACG,MAAOmC,GAAUlC,MAAO,EAAEF,SACzB,OAAR+B,SAAQ,IAARA,IAAkB,QAAVR,EAARQ,GAAUgJ,gBAAQ,IAAAxJ,GAAlBA,EAAoBkE,QACnB7F,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE5I,SAChB,OAAR+B,SAAQ,IAARA,IAAkB,QAAVP,EAARO,GAAUgJ,gBAAQ,IAAAvJ,OAAV,EAARA,EAAoB8J,KAAK2B,IACxBrN,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIgB,GAAI,EAAoBzC,UAAU,MAAKrH,UACxDJ,EAAAA,EAAAA,KAAC4I,EAAAA,EAAI,CAACpB,QAAQ,WAAUpH,UACtBiG,EAAAA,EAAAA,MAACwC,EAAAA,EAAW,CAAAzI,SAAA,EACViG,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAC8B,QAAQ,KAAK2B,cAAY,EAAA/I,SAAA,CAClCiN,EAAQ7I,WAAW,IAAE6I,EAAQ5I,cAEhCzE,EAAAA,EAAAA,KAAC4H,EAAAA,EAAI,CAACC,MAAOwF,EAAQC,aAActB,KAAK,QAAQhL,GAAI,CAAE8F,GAAI,MAC1DT,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAAtF,SAAA,CAAC,gBAAIiN,EAAQ1I,SACvB0I,EAAQ3I,QAAS2B,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAAtF,SAAA,CAAC,gBAAIiN,EAAQ3I,SACzC2I,EAAQE,eACPvN,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAC8B,QAAQ,QAAQM,MAAM,iBAAgB1H,SAC/CiN,EAAQE,qBAXYF,EAAQxM,SAoB3Cb,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAACoC,MAAM,iBAAgB1H,SAAC,sCAIvCJ,EAAAA,EAAAA,KAACE,EAAQ,CAACG,MAAOmC,GAAUlC,MAAO,EAAEF,SACzB,OAAR+B,SAAQ,IAARA,IAAiB,QAATN,EAARM,GAAUyD,eAAO,IAAA/D,GAAjBA,EAAmBgE,QAClB7F,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE5I,SAChB,OAAR+B,SAAQ,IAARA,IAAiB,QAATL,EAARK,GAAUyD,eAAO,IAAA9D,OAAT,EAARA,EAAmB4J,KAAK1F,IACvBhG,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAoBzB,UAAU,MAAKrH,UAChDJ,EAAAA,EAAAA,KAAC4I,EAAAA,EAAI,CAACpB,QAAQ,WAAUpH,UACtBiG,EAAAA,EAAAA,MAACwC,EAAAA,EAAW,CAAAzI,SAAA,EACViG,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAAC6F,QAAQ,OAAOC,WAAW,SAASC,GAAI,EAAE1G,SAAA,EAC5CJ,EAAAA,EAAAA,KAACe,EAAAA,EAAG,CAAC6F,QAAQ,OAAOK,GAAI,EAAE7G,SACvB,IAAIoN,MAAM,IAAI9B,KAAI,CAAC+B,EAAGC,KACrB1N,EAAAA,EAAAA,KAACsK,EAAQ,CAEPC,SAAS,QACTvJ,GAAI,CAAE8G,MAAO4F,EAAI1H,EAAOC,OAAS,OAAS,cAFrCyH,QAMXrH,EAAAA,EAAAA,MAACX,EAAAA,EAAU,CAAC8B,QAAQ,QAAQM,MAAM,iBAAgB1H,SAAA,CAC/C4F,EAAO2H,OAAO,WAAI,IAAIjD,KAAK1E,EAAOyE,YAAYE,wBAEhD3E,EAAO4H,kBACN5N,EAAAA,EAAAA,KAAC4H,EAAAA,EAAI,CACHC,MAAO7B,EAAO4H,gBACd5B,KAAK,QACLlE,MAC6B,aAA3B9B,EAAO4H,gBAAiC,UACb,aAA3B5H,EAAO4H,gBAAiC,QAAU,UAEpD5M,GAAI,CAAEqJ,GAAI,SAIhBrK,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAAtF,SAAE4F,EAAO6H,oBA5BF7H,EAAOnF,SAmCnCb,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAACoC,MAAM,iBAAgB1H,SAAC,0BAIvCJ,EAAAA,EAAAA,KAACE,EAAQ,CAACG,MAAOmC,GAAUlC,MAAO,EAAEF,UAClCJ,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAACoC,MAAM,iBAAgB1H,SAAC,4EAQvCiG,EAAAA,EAAAA,MAACyH,EAAAA,EAAM,CAACvH,KAAMjD,GAAiBmD,QAAShB,GAAsBsI,SAAS,KAAKzE,WAAS,EAAAlJ,SAAA,EACnFJ,EAAAA,EAAAA,KAACgO,EAAAA,EAAW,CAAA5N,SACToD,GAAkB,gBAAkB,sBAEvCxD,EAAAA,EAAAA,KAACiO,EAAAA,EAAa,CAAA7N,UACZiG,EAAAA,EAAAA,MAACyC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGhI,GAAI,CAAE2G,GAAI,GAAIvH,SAAA,EACxCJ,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBiG,EAAAA,EAAAA,MAACuD,EAAAA,EAAW,CAACN,WAAS,EAACI,UAAQ,EAAAtJ,SAAA,EAC7BJ,EAAAA,EAAAA,KAAC6J,EAAAA,EAAU,CAAAzJ,SAAC,mBACZiG,EAAAA,EAAAA,MAACyD,EAAAA,EAAM,CACLzJ,MAAOqD,GAAiB6H,eAAiB,gBACzC1D,MAAM,gBACN0B,SAAWC,GAAyBhE,GAA0B,gBAAiBgE,EAAEC,OAAOpJ,OAAOD,SAAA,EAE/FJ,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,CAAC1J,MAAM,gBAAeD,SAAC,mBAChCJ,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,CAAC1J,MAAM,YAAWD,SAAC,eAC5BJ,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,CAAC1J,MAAM,QAAOD,SAAC,WACxBJ,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,CAAC1J,MAAM,YAAWD,SAAC,eAC5BJ,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,CAAC1J,MAAM,aAAYD,SAAC,gBAC7BJ,EAAAA,EAAAA,KAAC+J,EAAAA,EAAQ,CAAC1J,MAAM,aAAYD,SAAC,wBAKnCJ,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,iBACN8B,KAAK,SACLtJ,MAAOqD,GAAiBiJ,gBAAkB,GAC1CpD,SAAWC,GAAqChE,GAA0B,iBAAkBJ,SAASoE,EAAEC,OAAOpJ,QAAU,WAI5HL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9I,UAChBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,iBACNxH,MAAOqD,GAAiBmB,gBAAkB,GAC1C0E,SAAWC,GAAqChE,GAA0B,iBAAkBgE,EAAEC,OAAOpJ,OACrGqJ,UAAQ,OAIZ1J,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,OACNxH,MAAOqD,GAAiBoB,MAAQ,GAChCyE,SAAWC,GAAqChE,GAA0B,OAAQgE,EAAEC,OAAOpJ,OAC3FqJ,UAAQ,OAIZ1J,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,QACNxH,MAAOqD,GAAiBqB,OAAS,GACjCwE,SAAWC,GAAqChE,GAA0B,QAASgE,EAAEC,OAAOpJ,OAC5FqJ,UAAQ,OAIZ1J,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,WACNxH,MAAOqD,GAAiBsB,UAAY,GACpCuE,SAAWC,GAAqChE,GAA0B,WAAYgE,EAAEC,OAAOpJ,OAC/FqJ,UAAQ,OAIZ1J,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,aACN8B,KAAK,SACLtJ,MAAOqD,GAAiBkJ,YAAc,GACtCrD,SAAWC,GAAqChE,GAA0B,aAAcJ,SAASoE,EAAEC,OAAOpJ,QAAU,WAIxHL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,WACN8B,KAAK,SACLtJ,MAAOqD,GAAiBmJ,UAAY,GACpCtD,SAAWC,GAAqChE,GAA0B,WAAYJ,SAASoE,EAAEC,OAAOpJ,QAAU,WAItHL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,YACN8B,KAAK,SACLuE,WAAY,CAAEC,KAAM,IACpB9N,MAAOqD,GAAiBoJ,WAAa,GACrCvD,SAAWC,GAAqChE,GAA0B,YAAa4I,WAAW5E,EAAEC,OAAOpJ,QAAU,WAIzHL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9I,UAChBJ,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAC8B,QAAQ,KAAKxG,GAAI,CAAE2G,GAAI,EAAGb,GAAI,GAAI1G,SAAC,8BAGjDJ,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,mBACNxH,MAAOqD,GAAiBqJ,kBAAoB,GAC5CxD,SAAWC,GAAqChE,GAA0B,mBAAoBgE,EAAEC,OAAOpJ,YAI3GL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,iBACN8B,KAAK,SACLtJ,MAAOqD,GAAiBsJ,qBAAuB,GAC/CzD,SAAWC,GAAqChE,GAA0B,sBAAuBJ,SAASoE,EAAEC,OAAOpJ,QAAU,WAIjIL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,oBACN8B,KAAK,SACLtJ,MAAOqD,GAAiB2K,gBAAkB,GAC1C9E,SAAWC,GAAqChE,GAA0B,iBAAkBJ,SAASoE,EAAEC,OAAOpJ,QAAU,WAI5HL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,0BACN8B,KAAK,OACL2E,gBAAiB,CAAEC,QAAQ,GAC3BlO,MAAOqD,GAAiBuJ,yBAA2B,GACnD1D,SAAWC,GAAqChE,GAA0B,0BAA2BgE,EAAEC,OAAOpJ,YAIlHL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBiG,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAACC,GAAI,CAAE4F,QAAS,OAAQ4H,cAAe,SAAU9G,IAAK,GAAItH,SAAA,EAC5DJ,EAAAA,EAAAA,KAACyO,EAAAA,EAAgB,CACfC,SACE1O,EAAAA,EAAAA,KAAC2O,EAAAA,EAAQ,CACPC,QAASlL,GAAiB8H,mBAAoB,EAC9CjC,SAAWC,GAAqChE,GAA0B,mBAAoBgE,EAAEC,OAAOmF,WAG3G/G,MAAM,sBAER7H,EAAAA,EAAAA,KAACyO,EAAAA,EAAgB,CACfC,SACE1O,EAAAA,EAAAA,KAAC2O,EAAAA,EAAQ,CACPC,QAASlL,GAAiB+H,oBAAqB,EAC/ClC,SAAWC,GAAqChE,GAA0B,oBAAqBgE,EAAEC,OAAOmF,WAG5G/G,MAAM,4BAKZ7H,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9I,UAChBJ,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAC8B,QAAQ,KAAKxG,GAAI,CAAE2G,GAAI,EAAGb,GAAI,GAAI1G,SAAC,0BAGjDJ,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,YACNxH,MAAOqD,GAAiBmL,WAAa,GACrCtF,SAAWC,GAAqChE,GAA0B,YAAagE,EAAEC,OAAOpJ,YAIpGL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,eACNxH,MAAOqD,GAAiBoL,cAAgB,GACxCvF,SAAWC,GAAqChE,GAA0B,eAAgBgE,EAAEC,OAAOpJ,YAIvGL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9I,UAChBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,sBACNmC,WAAS,EACTC,KAAM,EACN5J,MAAOqD,GAAiBqL,qBAAuB,GAC/CxF,SAAWC,GAAqChE,GAA0B,sBAAuBgE,EAAEC,OAAOpJ,YAI9GL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9I,UAChBJ,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CAAC8B,QAAQ,KAAKxG,GAAI,CAAE2G,GAAI,EAAGb,GAAI,GAAI1G,SAAC,yBAGjDJ,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,yBACNxH,MAAOqD,GAAiBsL,wBAA0B,GAClDzF,SAAWC,GAAqChE,GAA0B,yBAA0BgE,EAAEC,OAAOpJ,YAIjHL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,0BACNxH,MAAOqD,GAAiBuL,yBAA2B,GACnD1F,SAAWC,GAAqChE,GAA0B,0BAA2BgE,EAAEC,OAAOpJ,YAIlHL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEhJ,UACvBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,eACNxH,MAAOqD,GAAiBwL,gCAAkC,GAC1D3F,SAAWC,GAAqChE,GAA0B,iCAAkCgE,EAAEC,OAAOpJ,YAIzHL,EAAAA,EAAAA,KAAC8I,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9I,UAChBJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACRC,WAAS,EACTzB,MAAM,QACNmC,WAAS,EACTC,KAAM,EACN5J,MAAOqD,GAAiByB,OAAS,GACjCoE,SAAWC,GAAqChE,GAA0B,QAASgE,EAAEC,OAAOpJ,iBAKpGgG,EAAAA,EAAAA,MAAC8I,EAAAA,EAAa,CAAA/O,SAAA,EACZJ,EAAAA,EAAAA,KAAC+H,EAAAA,EAAM,CAACf,QAASvB,GAAqBrF,SAAC,YACvCJ,EAAAA,EAAAA,KAAC+H,EAAAA,EAAM,CACLP,QAAQ,YACRR,QA/tBiBhD,UACzB,IACEH,IAAmB,GACnBV,GAAS,MAELK,UAEI4I,EAAAA,GAAYjE,OAAO3E,GAAgB3C,GAAI6C,IAC7CL,GAAW,0CAGLa,EAAAA,GAAYkL,YAAYjN,GAAUtB,GAAI6C,IAC5CL,GAAW,iCAITlB,UACI2B,GAAc3B,GAAStB,IAG/B0C,IAAmB,GACnBE,GAAmB,MACnBE,GAAoB,CAAC,EACvB,CAAE,MAAOT,IAAa,IAADmM,EAAAC,EACnBhL,QAAQpB,MAAM,yBAA0BA,IACxCC,IAAuB,QAAdkM,EAAAnM,GAAMe,gBAAQ,IAAAoL,GAAM,QAANC,EAAdD,EAAgBhL,YAAI,IAAAiL,OAAN,EAAdA,EAAsBhH,UAAW,wBAC5C,CAAC,QACCzE,IAAmB,EACrB,GAosBQ0E,SAAU3E,GACVoE,WAAWhI,EAAAA,EAAAA,KAACiI,EAAAA,EAAQ,IAAI7H,SAEvBwD,GAAkB,YAAeJ,GAAkB,kBAAoB,yBAI1E,EAUV,EANiC+L,KAC/BvP,EAAAA,EAAAA,KAACwP,EAAAA,GAAsB,CAACC,cAAc,iBAAgBrP,UACpDJ,EAAAA,EAAAA,KAACkB,EAAuB,K,yDC38B5B,SAAenB,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,kLACD,W,+GCSJ,MAEMyP,EAAMC,EAAAA,EAAMzH,OAAO,CACvB0H,QAHmBC,4BAInBC,QAAS,CACP,eAAgB,oBAElBC,QAAS,MAIXL,EAAIM,aAAaC,QAAQC,KACtBC,IAAwC,IAADC,EAEtCD,EAAOE,SAAW,CAAEC,UAAWC,YAAYC,OAG3C,MAAMC,EAAQC,aAAaC,QAAQ,aAC/BF,IACFN,EAAOL,QAAQc,cAAa,UAAA9P,OAAa2P,IAI3CN,EAAOL,QAAQ,oBAAsB,iBAGrC,MAAMe,EAA6D,QAApDT,EAAGU,SAASC,cAAc,kCAA0B,IAAAX,OAAA,EAAjDA,EAAmDY,aAAa,WAalF,OAZIH,IACFV,EAAOL,QAAQ,gBAAkBe,GAW5BV,CAAM,IAEdjN,IACC+N,EAAAA,GAAYC,YAAYhO,EAAO,CAC7BuE,UAAW,aACX0J,OAAQ,sBACRC,YAAa,kCAERC,QAAQC,OAAOpO,MAK1BwM,EAAIM,aAAa/L,SAASiM,KACvBjM,IAA6B,IAADsN,EAE3B,MAAMpB,EAASlM,EAASkM,OAClBqB,EAAWjB,YAAYC,QAAwB,QAAfe,EAAApB,EAAOE,gBAAQ,IAAAkB,OAAA,EAAfA,EAAiBjB,YAAa,GAG9C,IAADmB,EAIwBC,EAJzCF,EAAW,MACblN,QAAQqN,KAAK,+BAAD7Q,OAA4C,QAA5C2Q,EAAsBxN,EAASkM,OAAOyB,cAAM,IAAAH,OAAA,EAAtBA,EAAwB1F,cAAa,KAAAjL,OAAImD,EAASkM,OAAO0B,IAAG,UAAA/Q,OAASgR,KAAKC,MAAMP,GAAS,OAIzHP,EAAAA,GAAYC,YAAY,IAAIc,MAAM,qBAAsB,CACtDvK,UAAW,aACX0J,OAAO,kBAADrQ,OAA0C,QAA1C4Q,EAAoBzN,EAASkM,OAAOyB,cAAM,IAAAF,OAAA,EAAtBA,EAAwB3F,cAAa,KAAAjL,OAAImD,EAASkM,OAAO0B,KACnFT,YAAa,2CAanB,OAAOnN,CAAQ,IAEjBD,UAA8B,IAADiO,EAAAC,EAAAC,EAAA/J,EAAAmE,EAEN0E,EAAAA,GAAYC,YAAYhO,EAAO,CAClDuE,UAAW,aACX0J,OAAO,GAADrQ,OAAiB,QAAjBmR,EAAK/O,EAAMiN,cAAM,IAAA8B,GAAQ,QAARC,EAAZD,EAAcL,cAAM,IAAAM,OAAR,EAAZA,EAAsBnG,cAAa,KAAAjL,OAAgB,QAAhBqR,EAAIjP,EAAMiN,cAAM,IAAAgC,OAAA,EAAZA,EAAcN,KAChET,YAAagB,EAAgBlP,KAI/B,GAA+B,OAAb,QAAdkF,EAAAlF,EAAMe,gBAAQ,IAAAmE,OAAA,EAAdA,EAAgBiK,QAAgB,CAElC,MAAM,YAAEC,SAAsB,8BACxBC,QAAiBD,EAAYE,eAEnC,GAAID,GAAYrP,EAAMiN,OAGpB,OADAjN,EAAMiN,OAAOL,QAAQc,cAAa,UAAA9P,OAAayR,GACxC7C,EAAIO,QAAQ/M,EAAMiN,QAGzBmC,EAAYG,QAEhB,CAGA,GAA+B,OAAb,QAAdlG,EAAArJ,EAAMe,gBAAQ,IAAAsI,OAAA,EAAdA,EAAgB8F,QAAgB,CAClC,MAAMK,EAAaxP,EAAMe,SAAS6L,QAAQ,eACpC6C,EAAQD,EAAoC,IAAvBtN,SAASsN,GAAqB,IAIzD,OAFApO,QAAQqN,KAAK,gCAAD7Q,OAAiC6R,EAAK,OAE3C,IAAItB,SAAQ,CAACuB,EAAStB,KAC3BuB,YAAW,KACL3P,EAAMiN,OACRT,EAAIO,QAAQ/M,EAAMiN,QAAQ2C,KAAKF,GAASG,MAAMzB,GAE9CA,EAAOpO,EACT,GACCyP,EAAM,GAEb,CAEA,OAAOtB,QAAQC,OAAOpO,EAAM,IAKhC,MAAMkP,EAAmBlP,IACvB,IAAKA,EAAMe,SACT,MAAO,mEAGT,MAAMoO,EAASnP,EAAMe,SAASoO,OACxBhO,EAAOnB,EAAMe,SAASI,KAE5B,OAAQgO,GACN,KAAK,IACH,OAAW,OAAJhO,QAAI,IAAJA,OAAI,EAAJA,EAAMiE,UAAW,4CAC1B,KAAK,IACH,MAAO,iDACT,KAAK,IACH,MAAO,qDACT,KAAK,IACH,MAAO,wCACT,KAAK,IACH,OAAW,OAAJjE,QAAI,IAAJA,OAAI,EAAJA,EAAMiE,UAAW,yCAC1B,KAAK,IACH,MAAO,yDACT,KAAK,IACH,MAAO,qDACT,KAAK,IACL,KAAK,IACL,KAAK,IACH,MAAO,2DACT,QACE,OAAW,OAAJjE,QAAI,IAAJA,OAAI,EAAJA,EAAMiE,UAAW,kDAC5B,EAYWpE,EAAc,CACzB8O,OAASC,GACPvD,EAAIwD,IAAI,cAAe,CAAED,WAE3B9O,QAAUtD,GACR6O,EAAIwD,IAAI,cAADpS,OAAeD,EAAE,MAE1BqH,OAAS/F,GACPuN,EAAIyD,KAAK,cAAehR,GAE1BgG,OAAQA,CAACtH,EAAYsB,IACnBuN,EAAI0D,IAAI,cAADtS,OAAeD,EAAE,KAAKsB,GAE/BkK,OAASxL,GACP6O,EAAIrD,OAAO,cAADvL,OAAeD,EAAE,MAE7BwS,cAAgBxS,GACd6O,EAAIwD,IAAI,cAADpS,OAAeD,EAAE,iBAE1BuO,YAAaA,CAACvO,EAAY8K,IACxB+D,EAAIyD,KAAK,cAADrS,OAAeD,EAAE,kBAAkB8K,GAE7C2H,YAAczS,GACZ6O,EAAIwD,IAAI,cAADpS,OAAeD,EAAE,eAE1B0S,WAAYA,CAAC1S,EAAYwM,IACvBqC,EAAIyD,KAAK,cAADrS,OAAeD,EAAE,iBAAiBwM,GAE5CmG,WAAa3S,GACX6O,EAAIwD,IAAI,cAADpS,OAAeD,EAAE,cAE1B4S,UAAWA,CAAC5S,EAAYmF,IACtB0J,EAAIyD,KAAK,cAADrS,OAAeD,EAAE,gBAAgBmF,IAIhCoG,EAAc,CACzB4G,OAASC,GACPvD,EAAIwD,IAAI,eAAgB,CAAED,WAE5B9O,QAAUtD,GACR6O,EAAIwD,IAAI,eAADpS,OAAgBD,EAAE,MAE3BqH,OAASyD,GACP+D,EAAIyD,KAAK,eAAgBxH,GAE3BxD,OAAQA,CAACtH,EAAY8K,IACnB+D,EAAI0D,IAAI,eAADtS,OAAgBD,EAAE,KAAK8K,GAEhCU,OAASxL,GACP6O,EAAIrD,OAAO,eAADvL,OAAgBD,EAAE,OAkCnB6S,EAAS,CACpBV,OAASC,GACPvD,EAAIwD,IAAI,SAAU,CAAED,WAEtB9O,QAAUtD,GACR6O,EAAIwD,IAAI,SAADpS,OAAUD,EAAE,MAErBqH,OAASyL,GACPjE,EAAIyD,KAAK,SAAUQ,GAErBxL,OAAQA,CAACtH,EAAY8S,IACnBjE,EAAI0D,IAAI,SAADtS,OAAUD,EAAE,KAAK8S,GAE1BtH,OAASxL,GACP6O,EAAIrD,OAAO,SAADvL,OAAUD,EAAE,MAExB+S,aAAcA,CAAC/S,EAAYwR,IACzB3C,EAAImE,MAAM,SAAD/S,OAAUD,EAAE,mBAAmB,CAAEwR,WAE5CyB,kBAAmBA,CAACjT,EAAYkT,IAC9BrE,EAAImE,MAAM,SAAD/S,OAAUD,EAAE,wBAAwB,CAAEkT,oBAItCC,EAAgB,CAC3BhB,OAASC,GACPvD,EAAIwD,IAAI,qBAAsB,CAAED,WAElCgB,aAAehB,GACbvD,EAAIwD,IAAI,+BAAgC,CAAED,WAE5C9O,QAAUtD,GACR6O,EAAIwD,IAAI,qBAADpS,OAAsBD,EAAE,OAoDtBqT,EAAe,CAE1BC,SAAWlB,GACTvD,EAAIwD,IAAI,oBAAqB,CAAED,WAEjCmB,YAAcvT,GACZ6O,EAAIwD,IAAI,oBAADpS,OAAqBD,EAAE,MAEhCwT,WAAapL,GACXyG,EAAIyD,KAAK,oBAAqBlK,GAEhCqL,WAAYA,CAACzT,EAAYoI,IACvByG,EAAI0D,IAAI,oBAADtS,OAAqBD,EAAE,KAAKoI,GAErCsL,WAAa1T,GACX6O,EAAIrD,OAAO,oBAADvL,OAAqBD,EAAE,MAEnC2T,YAAaA,CAAC3T,EAAY4T,EAAkBC,IAC1ChF,EAAIyD,KAAK,oBAADrS,OAAqBD,EAAE,kBAAkB,CAAE4T,WAAUC,WAG/DC,cAAeA,IACbjF,EAAIwD,IAAI,0BAEV0B,eAAiBC,GACfnF,EAAIyD,KAAK,yBAA0B0B,GAGrCC,aAAcA,IACZpF,EAAIwD,IAAI,yBAEV6B,eAAiBC,GACftF,EAAIyD,KAAK,wBAAyB6B,GAGpCC,kBAAoBhC,GAClBvD,EAAIwD,IAAI,8BAA+B,CAAED,WAG3CiC,kBAAoBjC,GAClBvD,EAAIwD,IAAI,8BAA+B,CAAED,WAE3CkC,oBAAsBC,GACpB1F,EAAIyD,KAAK,8BAA+BiC,GAE1CC,oBAAqBA,CAACxU,EAAYuU,IAChC1F,EAAI0D,IAAI,8BAADtS,OAA+BD,EAAE,KAAKuU,IAwCpCE,EAAe,CAC1BC,oBAAqBA,IACnB7F,EAAIwD,IAAI,2CAEVsC,oBAAqBA,IACnB9F,EAAIwD,IAAI,2CAEVuC,sBAAuBA,IACrB/F,EAAIwD,IAAI,6CAEVwC,oBAAqBA,IACnBhG,EAAIwD,IAAI,2CAEVyC,qBAAsBA,IACpBjG,EAAIwD,IAAI,6CAGZ,G,2EClcO,MAAM0C,EAAyBA,CACpCC,EACAC,EACAC,KAEOC,EAAAA,EAAAA,UAAQ,KACb,MAAMC,EAAQ1F,YAAYC,MACpB0F,EAASL,IACEtF,YAAYC,MAQ7B,OAAO0F,CAAM,GACZJ,GAwDQ5T,EAAwBuN,IACnC,MAAM0G,GAAcC,EAAAA,EAAAA,QAAe,GAC7BC,GAAYD,EAAAA,EAAAA,QAAe,GAGjCD,EAAYG,QAAU/F,YAAYC,OAElCjM,EAAAA,EAAAA,YAAU,KAER8R,EAAUC,QAAU/F,YAAYC,MACV6F,EAAUC,QAAWH,EAAYG,QAUvD,MAAO,KAEe/F,YAAYC,MACA6F,EAAUC,OAEG,CAG9C,GACA,CAAC7G,KAGJlL,EAAAA,EAAAA,YAAU,KACR,GAAI4R,EAAYG,QAAS,CACA/F,YAAYC,MAAQ2F,EAAYG,QAEnDzG,CAGN,IACA,EAkES0G,EAAcA,KACzB,MAAMC,GAAQJ,EAAAA,EAAAA,QAAoD,IAAIK,KAiCtE,MAAO,CAAEvD,KA9BGwD,EAAAA,EAAAA,cAAaC,IACvB,MAAMC,EAASJ,EAAMF,QAAQpD,IAAIyD,GAEjC,GAAIC,EAAQ,CAGV,OAFkBlM,KAAK8F,MAAQoG,EAAOC,UANnB,KASjBL,EAAMF,QAAQjK,OAAOsK,GACd,MAGFC,EAAOvS,IAChB,CAEA,OAAO,IAAI,GACV,IAeWyS,KAbFJ,EAAAA,EAAAA,cAAY,CAACC,EAAatS,KACpCmS,EAAMF,QAAQQ,IAAIH,EAAK,CACrBtS,OACAwS,UAAWnM,KAAK8F,OAChB,GACD,IAQgBuG,OANLL,EAAAA,EAAAA,cAAY,KACxBF,EAAMF,QAAQS,OAAO,GACpB,IAIuB/K,KAFbwK,EAAMF,QAAQtK,KAEK,C,yDCvNlC,SAAejM,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,gHACD,S","sources":["../node_modules/@mui/icons-material/esm/Cancel.js","../node_modules/@mui/icons-material/esm/Star.js","../node_modules/@mui/icons-material/esm/Home.js","components/CustomerDetail.tsx","../node_modules/@mui/icons-material/esm/Business.js","services/api.ts","hooks/usePerformanceOptimization.ts","../node_modules/@mui/icons-material/esm/Person.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"\n}), 'Cancel');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"\n}), 'Home');","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { SelectChangeEvent } from '@mui/material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Chip,\n  Tab,\n  Tabs,\n  Button,\n  IconButton,\n  Avatar,\n  TextField,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n  Alert,\n  Snackbar,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Checkbox,\n  FormControlLabel,\n} from '@mui/material';\nimport {\n  ArrowBack as ArrowBackIcon,\n  Edit as EditIcon,\n  Person as PersonIcon,\n  Business as BusinessIcon,\n  Star as StarIcon,\n  Save as SaveIcon,\n  Cancel as CancelIcon,\n  Add as AddIcon,\n  Delete as DeleteIcon,\n  Home as HomeIcon,\n} from '@mui/icons-material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { customerApi, propertyApi } from '../services/api';\nimport { Customer, Property } from '../types/customer';\nimport { ComponentErrorBoundary } from './ErrorBoundary';\nimport { useRenderPerformance } from '../hooks/usePerformanceOptimization';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`customer-tabpanel-${index}`}\n      aria-labelledby={`customer-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nconst CustomerDetailComponent: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  \n  // Performance monitoring\n  useRenderPerformance('CustomerDetail');\n  const [customer, setCustomer] = useState<Customer | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [tabValue, setTabValue] = useState(0);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isCreating, setIsCreating] = useState(false);\n  const [formData, setFormData] = useState<Partial<Customer>>({});\n  const [saveLoading, setSaveLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  \n  // Property management state\n  const [showAddProperty, setShowAddProperty] = useState(false);\n  const [editingProperty, setEditingProperty] = useState<Property | null>(null);\n  const [propertyFormData, setPropertyFormData] = useState<Partial<Property>>({});\n  const [propertyLoading, setPropertyLoading] = useState(false);\n\n  const fetchCustomer = React.useCallback(async (customerId: number) => {\n    try {\n      setLoading(true);\n      const response = await customerApi.getById(customerId);\n      setCustomer(response.data);\n    } catch (error) {\n      console.error('Error fetching customer:', error);\n      navigate('/customers');\n    } finally {\n      setLoading(false);\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    if (id === 'new') {\n      setIsCreating(true);\n      setIsEditing(true);\n      setLoading(false);\n      setFormData({\n        first_name: '',\n        last_name: '',\n        email: '',\n        phone: '',\n        customer_type: 'residential',\n        street_address: '',\n        city: '',\n        state: '',\n        zip_code: '',\n        company_name: '',\n        preferred_contact_method: 'email',\n        notes: '',\n      });\n    } else if (id && id !== 'new') {\n      fetchCustomer(parseInt(id));\n    } else {\n      setLoading(false);\n    }\n  }, [id, fetchCustomer]);\n\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  const handleInputChange = (field: keyof Customer, value: any) => {\n    setFormData((prev: Partial<Customer>) => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleSave = async () => {\n    try {\n      setSaveLoading(true);\n      setError(null);\n      \n      if (isCreating) {\n        const response = await customerApi.create(formData);\n        setSuccess('Customer created successfully!');\n        navigate(`/customers/${response.data.id}`);\n      } else {\n        const response = await customerApi.update(customer!.id, formData);\n        setCustomer(response.data);\n        setSuccess('Customer updated successfully!');\n        setIsEditing(false);\n      }\n    } catch (error: any) {\n      console.error('Error saving customer:', error);\n      setError(error.response?.data?.message || 'Error saving customer');\n    } finally {\n      setSaveLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    if (isCreating) {\n      navigate('/customers');\n    } else {\n      setIsEditing(false);\n      setFormData({});\n    }\n  };\n\n  const handleEdit = () => {\n    setIsEditing(true);\n    setFormData(customer || {});\n  };\n\n  // Property management functions\n  const handleAddProperty = () => {\n    setShowAddProperty(true);\n    setEditingProperty(null);\n    setPropertyFormData({\n      customer: customer?.id,\n      property_type: 'single_family',\n      street_address: '',\n      city: '',\n      state: '',\n      zip_code: '',\n      has_gfci_outlets: false,\n      has_afci_breakers: false,\n    });\n  };\n\n  const handleEditProperty = (property: Property) => {\n    setEditingProperty(property);\n    setShowAddProperty(true);\n    setPropertyFormData(property);\n  };\n\n  const handleDeleteProperty = async (propertyId: number) => {\n    if (!window.confirm('Are you sure you want to delete this property?')) return;\n    \n    try {\n      setPropertyLoading(true);\n      await propertyApi.delete(propertyId);\n      \n      // Refresh customer data to update properties list\n      if (customer) {\n        await fetchCustomer(customer.id);\n      }\n      setSuccess('Property deleted successfully!');\n    } catch (error: any) {\n      console.error('Error deleting property:', error);\n      setError(error.response?.data?.message || 'Error deleting property');\n    } finally {\n      setPropertyLoading(false);\n    }\n  };\n\n  const handlePropertyInputChange = (field: keyof Property, value: any) => {\n    setPropertyFormData((prev: Partial<Property>) => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleSaveProperty = async () => {\n    try {\n      setPropertyLoading(true);\n      setError(null);\n      \n      if (editingProperty) {\n        // Update existing property\n        await propertyApi.update(editingProperty.id, propertyFormData);\n        setSuccess('Property updated successfully!');\n      } else {\n        // Create new property\n        await customerApi.addProperty(customer!.id, propertyFormData);\n        setSuccess('Property added successfully!');\n      }\n      \n      // Refresh customer data to update properties list\n      if (customer) {\n        await fetchCustomer(customer.id);\n      }\n      \n      setShowAddProperty(false);\n      setEditingProperty(null);\n      setPropertyFormData({});\n    } catch (error: any) {\n      console.error('Error saving property:', error);\n      setError(error.response?.data?.message || 'Error saving property');\n    } finally {\n      setPropertyLoading(false);\n    }\n  };\n\n  const handleCancelProperty = () => {\n    setShowAddProperty(false);\n    setEditingProperty(null);\n    setPropertyFormData({});\n  };\n\n  if (loading) {\n    return <Typography>Loading customer details...</Typography>;\n  }\n\n  if (!isCreating && !customer) {\n    return <Typography>Customer not found</Typography>;\n  }\n\n  const averageRating = customer?.reviews?.length \n    ? customer.reviews.reduce((sum: number, review: any) => sum + review.rating, 0) / customer.reviews.length\n    : 0;\n\n  const displayData = isEditing ? formData : customer;\n  const title = isCreating ? 'Add New Customer' : (isEditing ? 'Edit Customer' : customer?.full_name);\n\n  return (\n    <Box>\n      <Snackbar open={!!error} autoHideDuration={6000} onClose={() => setError(null)}>\n        <Alert severity=\"error\" onClose={() => setError(null)}>\n          {error}\n        </Alert>\n      </Snackbar>\n      <Snackbar open={!!success} autoHideDuration={6000} onClose={() => setSuccess(null)}>\n        <Alert severity=\"success\" onClose={() => setSuccess(null)}>\n          {success}\n        </Alert>\n      </Snackbar>\n\n      {/* Header */}\n      <Box display=\"flex\" alignItems=\"center\" mb={3}>\n        <IconButton onClick={() => navigate('/customers')} sx={{ mr: 2 }}>\n          <ArrowBackIcon />\n        </IconButton>\n        {!isCreating && (\n          <Avatar sx={{ mr: 2, bgcolor: displayData?.customer_type === 'commercial' ? 'primary.main' : 'secondary.main' }}>\n            {displayData?.customer_type === 'commercial' ? <BusinessIcon /> : <PersonIcon />}\n          </Avatar>\n        )}\n        <Box flexGrow={1}>\n          <Typography variant=\"h4\" component=\"h1\">\n            {title}\n          </Typography>\n          {!isEditing && !isCreating && (\n            <Box display=\"flex\" gap={1} mt={1}>\n              <Chip\n                label={customer?.customer_type}\n                color={customer?.customer_type === 'commercial' ? 'primary' : 'secondary'}\n              />\n              <Chip\n                label={customer?.preferred_contact_method}\n                variant=\"outlined\"\n              />\n            </Box>\n          )}\n        </Box>\n        {isEditing ? (\n          <Box display=\"flex\" gap={1}>\n            <Button\n              variant=\"contained\"\n              startIcon={<SaveIcon />}\n              onClick={handleSave}\n              disabled={saveLoading}\n            >\n              {saveLoading ? 'Saving...' : 'Save'}\n            </Button>\n            <Button\n              variant=\"outlined\"\n              startIcon={<CancelIcon />}\n              onClick={handleCancel}\n            >\n              Cancel\n            </Button>\n          </Box>\n        ) : (\n          !isCreating && (\n            <Button\n              variant=\"contained\"\n              startIcon={<EditIcon />}\n              onClick={handleEdit}\n            >\n              Edit\n            </Button>\n          )\n        )}\n      </Box>\n\n      {/* Basic Info Card */}\n      <Card sx={{ mb: 3 }}>\n        <CardContent>\n          {isEditing ? (\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Typography variant=\"h6\" gutterBottom>Customer Information</Typography>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"First Name\"\n                  value={formData.first_name || ''}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange('first_name', e.target.value)}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Last Name\"\n                  value={formData.last_name || ''}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange('last_name', e.target.value)}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Email\"\n                  type=\"email\"\n                  value={formData.email || ''}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange('email', e.target.value)}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Phone\"\n                  value={formData.phone || ''}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange('phone', e.target.value)}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl fullWidth required>\n                  <InputLabel>Customer Type</InputLabel>\n                  <Select\n                    value={formData.customer_type || 'residential'}\n                    label=\"Customer Type\"\n                    onChange={(e: SelectChangeEvent) => handleInputChange('customer_type', e.target.value)}\n                  >\n                    <MenuItem value=\"residential\">Residential</MenuItem>\n                    <MenuItem value=\"commercial\">Commercial</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl fullWidth required>\n                  <InputLabel>Preferred Contact Method</InputLabel>\n                  <Select\n                    value={formData.preferred_contact_method || 'email'}\n                    label=\"Preferred Contact Method\"\n                    onChange={(e: SelectChangeEvent) => handleInputChange('preferred_contact_method', e.target.value)}\n                  >\n                    <MenuItem value=\"email\">Email</MenuItem>\n                    <MenuItem value=\"phone\">Phone</MenuItem>\n                    <MenuItem value=\"text\">Text</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              {formData.customer_type === 'commercial' && (\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Company Name\"\n                    value={formData.company_name || ''}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange('company_name', e.target.value)}\n                  />\n                </Grid>\n              )}\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Street Address\"\n                  value={formData.street_address || ''}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange('street_address', e.target.value)}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  label=\"City\"\n                  value={formData.city || ''}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange('city', e.target.value)}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  label=\"State\"\n                  value={formData.state || ''}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange('state', e.target.value)}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  label=\"ZIP Code\"\n                  value={formData.zip_code || ''}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange('zip_code', e.target.value)}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Notes\"\n                  multiline\n                  rows={4}\n                  value={formData.notes || ''}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange('notes', e.target.value)}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Typography variant=\"h6\" gutterBottom>Contact Information</Typography>\n                <Typography>📧 {customer?.email}</Typography>\n                <Typography>📞 {customer?.phone}</Typography>\n                <Typography>📍 {customer?.full_address}</Typography>\n                {customer?.company_name && (\n                  <Typography>🏢 {customer.company_name}</Typography>\n                )}\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Typography variant=\"h6\" gutterBottom>Summary</Typography>\n                <Typography>\n                  Properties: {customer?.properties?.length || 0}\n                </Typography>\n                <Typography>\n                  Reviews: {customer?.reviews?.length || 0}\n                  {averageRating > 0 && (\n                    <Box component=\"span\" display=\"inline-flex\" alignItems=\"center\" ml={1}>\n                      <StarIcon fontSize=\"small\" sx={{ color: 'gold' }} />\n                      {averageRating.toFixed(1)}\n                    </Box>\n                  )}\n                </Typography>\n                <Typography>\n                  Customer since: {customer?.created_at ? new Date(customer.created_at).toLocaleDateString() : 'N/A'}\n                </Typography>\n              </Grid>\n            </Grid>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Tabs - only show for existing customers */}\n      {!isCreating && !isEditing && (\n      <Card>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tabValue} onChange={handleTabChange}>\n            <Tab label={`Properties (${customer?.properties?.length || 0})`} />\n            <Tab label={`Contacts (${customer?.contacts?.length || 0})`} />\n            <Tab label={`Reviews (${customer?.reviews?.length || 0})`} />\n            <Tab label=\"Job History\" />\n          </Tabs>\n        </Box>\n\n        <TabPanel value={tabValue} index={0}>\n          <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Typography variant=\"h6\">Properties</Typography>\n            <Button\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={handleAddProperty}\n              disabled={propertyLoading}\n            >\n              Add Property\n            </Button>\n          </Box>\n          \n          {customer?.properties?.length ? (\n            <Grid container spacing={2}>\n              {customer?.properties?.map((property: any) => (\n                <Grid item xs={12} md={6} key={property.id} component=\"div\">\n                  <Card variant=\"outlined\">\n                    <CardContent>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 1 }}>\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                          <HomeIcon sx={{ mr: 1, color: 'primary.main' }} />\n                          <Typography variant=\"h6\">\n                            {property.property_type.replace('_', ' ').replace(/\\b\\w/g, (l: string) => l.toUpperCase())}\n                          </Typography>\n                        </Box>\n                        <Box>\n                          <IconButton \n                            size=\"small\" \n                            onClick={() => handleEditProperty(property)}\n                            disabled={propertyLoading}\n                          >\n                            <EditIcon fontSize=\"small\" />\n                          </IconButton>\n                          <IconButton \n                            size=\"small\" \n                            onClick={() => handleDeleteProperty(property.id)}\n                            disabled={propertyLoading}\n                            color=\"error\"\n                          >\n                            <DeleteIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Box>\n                      </Box>\n                      \n                      <Typography gutterBottom>{property.full_address}</Typography>\n                      \n                      {(property.square_footage || property.year_built || property.bedrooms || property.bathrooms) && (\n                        <Box sx={{ mb: 1 }}>\n                          {property.square_footage && (\n                            <Chip label={`${property.square_footage} sq ft`} size=\"small\" sx={{ mr: 0.5, mb: 0.5 }} />\n                          )}\n                          {property.year_built && (\n                            <Chip label={`Built ${property.year_built}`} size=\"small\" sx={{ mr: 0.5, mb: 0.5 }} />\n                          )}\n                          {property.bedrooms && (\n                            <Chip label={`${property.bedrooms} bed`} size=\"small\" sx={{ mr: 0.5, mb: 0.5 }} />\n                          )}\n                          {property.bathrooms && (\n                            <Chip label={`${property.bathrooms} bath`} size=\"small\" sx={{ mr: 0.5, mb: 0.5 }} />\n                          )}\n                        </Box>\n                      )}\n                      \n                      {property.main_panel_brand && (\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          🔌 Panel: {property.main_panel_brand} ({property.main_panel_amperage}A)\n                        </Typography>\n                      )}\n                      \n                      {property.electrical_last_updated && (\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          ⚡ Last Updated: {new Date(property.electrical_last_updated).toLocaleDateString()}\n                        </Typography>\n                      )}\n                      \n                      <Box sx={{ mt: 1 }}>\n                        {property.has_gfci_outlets && (\n                          <Chip label=\"GFCI Outlets\" size=\"small\" color=\"success\" sx={{ mr: 0.5 }} />\n                        )}\n                        {property.has_afci_breakers && (\n                          <Chip label=\"AFCI Breakers\" size=\"small\" color=\"success\" sx={{ mr: 0.5 }} />\n                        )}\n                      </Box>\n                      \n                      {property.notes && (\n                        <Typography variant=\"body2\" sx={{ mt: 1, fontStyle: 'italic' }}>\n                          📝 {property.notes}\n                        </Typography>\n                      )}\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Box sx={{ textAlign: 'center', py: 4 }}>\n              <Typography color=\"text.secondary\" gutterBottom>No properties on file</Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Add a property to track electrical installations and service history\n              </Typography>\n            </Box>\n          )}\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={1}>\n          {customer?.contacts?.length ? (\n            <Grid container spacing={2}>\n              {customer?.contacts?.map((contact: any) => (\n                <Grid item xs={12} md={6} key={contact.id} component=\"div\">\n                  <Card variant=\"outlined\">\n                    <CardContent>\n                      <Typography variant=\"h6\" gutterBottom>\n                        {contact.first_name} {contact.last_name}\n                      </Typography>\n                      <Chip label={contact.contact_type} size=\"small\" sx={{ mb: 1 }} />\n                      <Typography>📞 {contact.phone}</Typography>\n                      {contact.email && <Typography>📧 {contact.email}</Typography>}\n                      {contact.relationship && (\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {contact.relationship}\n                        </Typography>\n                      )}\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Typography color=\"text.secondary\">No additional contacts on file</Typography>\n          )}\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={2}>\n          {customer?.reviews?.length ? (\n            <Grid container spacing={2}>\n              {customer?.reviews?.map((review: any) => (\n                <Grid item xs={12} key={review.id} component=\"div\">\n                  <Card variant=\"outlined\">\n                    <CardContent>\n                      <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                        <Box display=\"flex\" mr={2}>\n                          {[...Array(5)].map((_, i) => (\n                            <StarIcon\n                              key={i}\n                              fontSize=\"small\"\n                              sx={{ color: i < review.rating ? 'gold' : 'lightgray' }}\n                            />\n                          ))}\n                        </Box>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {review.source} • {new Date(review.created_at).toLocaleDateString()}\n                        </Typography>\n                        {review.sentiment_label && (\n                          <Chip\n                            label={review.sentiment_label}\n                            size=\"small\"\n                            color={\n                              review.sentiment_label === 'positive' ? 'success' :\n                              review.sentiment_label === 'negative' ? 'error' : 'default'\n                            }\n                            sx={{ ml: 1 }}\n                          />\n                        )}\n                      </Box>\n                      <Typography>{review.review_text}</Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Typography color=\"text.secondary\">No reviews on file</Typography>\n          )}\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={3}>\n          <Typography color=\"text.secondary\">\n            Job history will be available when the jobs module is implemented\n          </Typography>\n        </TabPanel>\n      </Card>\n      )}\n\n      {/* Property Form Dialog */}\n      <Dialog open={showAddProperty} onClose={handleCancelProperty} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          {editingProperty ? 'Edit Property' : 'Add New Property'}\n        </DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth required>\n                <InputLabel>Property Type</InputLabel>\n                <Select\n                  value={propertyFormData.property_type || 'single_family'}\n                  label=\"Property Type\"\n                  onChange={(e: SelectChangeEvent) => handlePropertyInputChange('property_type', e.target.value)}\n                >\n                  <MenuItem value=\"single_family\">Single Family</MenuItem>\n                  <MenuItem value=\"townhouse\">Townhouse</MenuItem>\n                  <MenuItem value=\"condo\">Condo</MenuItem>\n                  <MenuItem value=\"apartment\">Apartment</MenuItem>\n                  <MenuItem value=\"commercial\">Commercial</MenuItem>\n                  <MenuItem value=\"industrial\">Industrial</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Square Footage\"\n                type=\"number\"\n                value={propertyFormData.square_footage || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('square_footage', parseInt(e.target.value) || null)}\n              />\n            </Grid>\n            \n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Street Address\"\n                value={propertyFormData.street_address || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('street_address', e.target.value)}\n                required\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"City\"\n                value={propertyFormData.city || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('city', e.target.value)}\n                required\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"State\"\n                value={propertyFormData.state || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('state', e.target.value)}\n                required\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"ZIP Code\"\n                value={propertyFormData.zip_code || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('zip_code', e.target.value)}\n                required\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Year Built\"\n                type=\"number\"\n                value={propertyFormData.year_built || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('year_built', parseInt(e.target.value) || null)}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <TextField\n                fullWidth\n                label=\"Bedrooms\"\n                type=\"number\"\n                value={propertyFormData.bedrooms || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('bedrooms', parseInt(e.target.value) || null)}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <TextField\n                fullWidth\n                label=\"Bathrooms\"\n                type=\"number\"\n                inputProps={{ step: 0.5 }}\n                value={propertyFormData.bathrooms || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('bathrooms', parseFloat(e.target.value) || null)}\n              />\n            </Grid>\n            \n            <Grid item xs={12}>\n              <Typography variant=\"h6\" sx={{ mt: 2, mb: 1 }}>Electrical Information</Typography>\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Main Panel Brand\"\n                value={propertyFormData.main_panel_brand || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('main_panel_brand', e.target.value)}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <TextField\n                fullWidth\n                label=\"Panel Amperage\"\n                type=\"number\"\n                value={propertyFormData.main_panel_amperage || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('main_panel_amperage', parseInt(e.target.value) || null)}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <TextField\n                fullWidth\n                label=\"Panel Age (years)\"\n                type=\"number\"\n                value={propertyFormData.main_panel_age || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('main_panel_age', parseInt(e.target.value) || null)}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Electrical Last Updated\"\n                type=\"date\"\n                InputLabelProps={{ shrink: true }}\n                value={propertyFormData.electrical_last_updated || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('electrical_last_updated', e.target.value)}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={propertyFormData.has_gfci_outlets || false}\n                      onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('has_gfci_outlets', e.target.checked)}\n                    />\n                  }\n                  label=\"Has GFCI Outlets\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={propertyFormData.has_afci_breakers || false}\n                      onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('has_afci_breakers', e.target.checked)}\n                    />\n                  }\n                  label=\"Has AFCI Breakers\"\n                />\n              </Box>\n            </Grid>\n            \n            <Grid item xs={12}>\n              <Typography variant=\"h6\" sx={{ mt: 2, mb: 1 }}>Access Information</Typography>\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Gate Code\"\n                value={propertyFormData.gate_code || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('gate_code', e.target.value)}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Key Location\"\n                value={propertyFormData.key_location || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('key_location', e.target.value)}\n              />\n            </Grid>\n            \n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Access Instructions\"\n                multiline\n                rows={2}\n                value={propertyFormData.access_instructions || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('access_instructions', e.target.value)}\n              />\n            </Grid>\n            \n            <Grid item xs={12}>\n              <Typography variant=\"h6\" sx={{ mt: 2, mb: 1 }}>Emergency Contact</Typography>\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"Emergency Contact Name\"\n                value={propertyFormData.emergency_contact_name || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('emergency_contact_name', e.target.value)}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"Emergency Contact Phone\"\n                value={propertyFormData.emergency_contact_phone || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('emergency_contact_phone', e.target.value)}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                label=\"Relationship\"\n                value={propertyFormData.emergency_contact_relationship || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('emergency_contact_relationship', e.target.value)}\n              />\n            </Grid>\n            \n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Notes\"\n                multiline\n                rows={3}\n                value={propertyFormData.notes || ''}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => handlePropertyInputChange('notes', e.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancelProperty}>Cancel</Button>\n          <Button\n            variant=\"contained\"\n            onClick={handleSaveProperty}\n            disabled={propertyLoading}\n            startIcon={<SaveIcon />}\n          >\n            {propertyLoading ? 'Saving...' : (editingProperty ? 'Update Property' : 'Add Property')}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nconst CustomerDetail: React.FC = () => (\n  <ComponentErrorBoundary componentName=\"CustomerDetail\">\n    <CustomerDetailComponent />\n  </ComponentErrorBoundary>\n);\n\nexport default CustomerDetail;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7V3H2v18h20V7zM6 19H4v-2h2zm0-4H4v-2h2zm0-4H4V9h2zm0-4H4V5h2zm4 12H8v-2h2zm0-4H8v-2h2zm0-4H8V9h2zm0-4H8V5h2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8zm-2-8h-2v2h2zm0 4h-2v2h2z\"\n}), 'Business');","import axios, { AxiosError, AxiosResponse, InternalAxiosRequestConfig } from 'axios';\nimport { errorLogger, withErrorHandling, ErrorType } from '../utils/errorHandling';\nimport { Customer, CustomerListItem, Property, CustomerContact, CustomerReview } from '../types/customer';\nimport { Job, JobListItem } from '../types/job';\nimport { Invoice, Estimate, Payment } from '../types/billing';\nimport { Item, Category, Supplier, StockMovement, PurchaseOrder } from '../types/inventory';\nimport { Appointment, TechnicianAvailability, ScheduleConflict } from '../types/scheduling';\n\n// Extend the axios config to include metadata\ninterface ExtendedAxiosRequestConfig extends InternalAxiosRequestConfig {\n  metadata?: {\n    startTime: number;\n  };\n}\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 10000, // 10 second timeout\n});\n\n// Request interceptor for adding auth tokens, performance monitoring, and logging\napi.interceptors.request.use(\n  (config: ExtendedAxiosRequestConfig) => {\n    // Add performance timing metadata\n    config.metadata = { startTime: performance.now() };\n    \n    // Add auth token from secure auth service\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n\n    // Add security headers\n    config.headers['X-Requested-With'] = 'XMLHttpRequest';\n    \n    // Add CSRF protection if available\n    const csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.getAttribute('content');\n    if (csrfToken) {\n      config.headers['X-CSRF-Token'] = csrfToken;\n    }\n\n    // Log API requests in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, {\n        params: config.params,\n        data: config.data\n      });\n    }\n\n    return config;\n  },\n  (error) => {\n    errorLogger.handleError(error, {\n      component: 'APIService',\n      action: 'Request Interceptor',\n      userMessage: 'Failed to prepare API request'\n    });\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling, performance monitoring, and logging\napi.interceptors.response.use(\n  (response: AxiosResponse) => {\n    // Calculate request duration for performance monitoring\n    const config = response.config as ExtendedAxiosRequestConfig;\n    const duration = performance.now() - (config.metadata?.startTime || 0);\n    \n    // Log slow requests\n    if (duration > 2000) {\n      console.warn(`⚠️ Slow API call: ${response.config.method?.toUpperCase()} ${response.config.url} took ${Math.round(duration)}ms`);\n      \n      // Log slow requests for production monitoring\n      if (process.env.NODE_ENV === 'production') {\n        errorLogger.handleError(new Error('Slow API response'), {\n          component: 'APIService',\n          action: `Slow Response: ${response.config.method?.toUpperCase()} ${response.config.url}`,\n          userMessage: 'API response was slower than expected'\n        });\n      }\n    }\n\n    // Log successful responses in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`✅ API Response: ${response.config.method?.toUpperCase()} ${response.config.url} (${Math.round(duration)}ms)`, {\n        status: response.status,\n        data: response.data\n      });\n    }\n    \n    return response;\n  },\n  async (error: AxiosError) => {\n    // Handle different types of errors\n    const errorDetails = errorLogger.handleError(error, {\n      component: 'APIService',\n      action: `${error.config?.method?.toUpperCase()} ${error.config?.url}`,\n      userMessage: getErrorMessage(error)\n    });\n\n    // Handle specific error cases\n    if (error.response?.status === 401) {\n      // Try to refresh token before giving up\n      const { authService } = await import('./authService');\n      const newToken = await authService.refreshToken();\n      \n      if (newToken && error.config) {\n        // Retry the original request with new token\n        error.config.headers.Authorization = `Bearer ${newToken}`;\n        return api.request(error.config);\n      } else {\n        // Refresh failed, logout user\n        authService.logout();\n      }\n    }\n\n    // Handle rate limiting with exponential backoff\n    if (error.response?.status === 429) {\n      const retryAfter = error.response.headers['retry-after'];\n      const delay = retryAfter ? parseInt(retryAfter) * 1000 : 1000;\n      \n      console.warn(`Rate limited. Retrying after ${delay}ms`);\n      \n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          if (error.config) {\n            api.request(error.config).then(resolve).catch(reject);\n          } else {\n            reject(error);\n          }\n        }, delay);\n      });\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// Helper function to get user-friendly error messages\nconst getErrorMessage = (error: AxiosError): string => {\n  if (!error.response) {\n    return 'Network connection error. Please check your internet connection.';\n  }\n\n  const status = error.response.status;\n  const data = error.response.data as any;\n\n  switch (status) {\n    case 400:\n      return data?.message || 'Invalid request. Please check your input.';\n    case 401:\n      return 'Your session has expired. Please log in again.';\n    case 403:\n      return 'You do not have permission to perform this action.';\n    case 404:\n      return 'The requested resource was not found.';\n    case 422:\n      return data?.message || 'Please check your input and try again.';\n    case 429:\n      return 'Too many requests. Please wait a moment and try again.';\n    case 500:\n      return 'Server error occurred. Our team has been notified.';\n    case 502:\n    case 503:\n    case 504:\n      return 'Service temporarily unavailable. Please try again later.';\n    default:\n      return data?.message || 'An unexpected error occurred. Please try again.';\n  }\n};\n\n// Enhanced API wrapper with error handling\nconst createApiMethod = <T>(apiCall: () => Promise<AxiosResponse<T>>, context: string) => {\n  return withErrorHandling(apiCall, {\n    component: 'APIService',\n    action: context\n  });\n};\n\n// Customer API\nexport const customerApi = {\n  getAll: (params?: any): Promise<{ data: { results: CustomerListItem[] } }> =>\n    api.get('/customers/', { params }),\n  \n  getById: (id: number): Promise<{ data: Customer }> =>\n    api.get(`/customers/${id}/`),\n  \n  create: (customer: Partial<Customer>): Promise<{ data: Customer }> =>\n    api.post('/customers/', customer),\n  \n  update: (id: number, customer: Partial<Customer>): Promise<{ data: Customer }> =>\n    api.put(`/customers/${id}/`, customer),\n  \n  delete: (id: number): Promise<void> =>\n    api.delete(`/customers/${id}/`),\n  \n  getProperties: (id: number): Promise<{ data: Property[] }> =>\n    api.get(`/customers/${id}/properties/`),\n  \n  addProperty: (id: number, property: Partial<Property>): Promise<{ data: Property }> =>\n    api.post(`/customers/${id}/add_property/`, property),\n  \n  getContacts: (id: number): Promise<{ data: CustomerContact[] }> =>\n    api.get(`/customers/${id}/contacts/`),\n  \n  addContact: (id: number, contact: Partial<CustomerContact>): Promise<{ data: CustomerContact }> =>\n    api.post(`/customers/${id}/add_contact/`, contact),\n  \n  getReviews: (id: number): Promise<{ data: CustomerReview[] }> =>\n    api.get(`/customers/${id}/reviews/`),\n  \n  addReview: (id: number, review: Partial<CustomerReview>): Promise<{ data: CustomerReview }> =>\n    api.post(`/customers/${id}/add_review/`, review),\n};\n\n// Property API\nexport const propertyApi = {\n  getAll: (params?: any): Promise<{ data: { results: Property[] } }> =>\n    api.get('/properties/', { params }),\n  \n  getById: (id: number): Promise<{ data: Property }> =>\n    api.get(`/properties/${id}/`),\n  \n  create: (property: Partial<Property>): Promise<{ data: Property }> =>\n    api.post('/properties/', property),\n  \n  update: (id: number, property: Partial<Property>): Promise<{ data: Property }> =>\n    api.put(`/properties/${id}/`, property),\n  \n  delete: (id: number): Promise<void> =>\n    api.delete(`/properties/${id}/`),\n};\n\n// Contact API\nexport const contactApi = {\n  getAll: (params?: any): Promise<{ data: { results: CustomerContact[] } }> =>\n    api.get('/contacts/', { params }),\n  \n  getById: (id: number): Promise<{ data: CustomerContact }> =>\n    api.get(`/contacts/${id}/`),\n  \n  update: (id: number, contact: Partial<CustomerContact>): Promise<{ data: CustomerContact }> =>\n    api.put(`/contacts/${id}/`, contact),\n  \n  delete: (id: number): Promise<void> =>\n    api.delete(`/contacts/${id}/`),\n};\n\n// Review API\nexport const reviewApi = {\n  getAll: (params?: any): Promise<{ data: { results: CustomerReview[] } }> =>\n    api.get('/reviews/', { params }),\n  \n  getById: (id: number): Promise<{ data: CustomerReview }> =>\n    api.get(`/reviews/${id}/`),\n  \n  update: (id: number, review: Partial<CustomerReview>): Promise<{ data: CustomerReview }> =>\n    api.put(`/reviews/${id}/`, review),\n  \n  delete: (id: number): Promise<void> =>\n    api.delete(`/reviews/${id}/`),\n};\n\n// Job API\nexport const jobApi = {\n  getAll: (params?: any): Promise<{ data: { results: JobListItem[] } }> =>\n    api.get('/jobs/', { params }),\n  \n  getById: (id: number): Promise<{ data: Job }> =>\n    api.get(`/jobs/${id}/`),\n  \n  create: (job: Partial<Job>): Promise<{ data: Job }> =>\n    api.post('/jobs/', job),\n  \n  update: (id: number, job: Partial<Job>): Promise<{ data: Job }> =>\n    api.put(`/jobs/${id}/`, job),\n  \n  delete: (id: number): Promise<void> =>\n    api.delete(`/jobs/${id}/`),\n  \n  updateStatus: (id: number, status: string): Promise<{ data: Job }> =>\n    api.patch(`/jobs/${id}/update_status/`, { status }),\n  \n  assignTechnicians: (id: number, technician_ids: number[]): Promise<{ data: Job }> =>\n    api.patch(`/jobs/${id}/assign_technicians/`, { technician_ids }),\n};\n\n// Technician API\nexport const technicianApi = {\n  getAll: (params?: any): Promise<{ data: any[] }> =>\n    api.get('/jobs/technicians/', { params }),\n  \n  getAvailable: (params?: any): Promise<{ data: any[] }> =>\n    api.get('/jobs/technicians/available/', { params }),\n  \n  getById: (id: number): Promise<{ data: any }> =>\n    api.get(`/jobs/technicians/${id}/`),\n};\n\n// Billing API\nexport const billingApi = {\n  // Invoice endpoints\n  getInvoices: (params?: any): Promise<{ data: { results: Invoice[] } }> =>\n    api.get('/billing/invoices/', { params }),\n  \n  getInvoiceById: (id: number): Promise<{ data: Invoice }> =>\n    api.get(`/billing/invoices/${id}/`),\n  \n  createInvoice: (invoice: Partial<Invoice>): Promise<{ data: Invoice }> =>\n    api.post('/billing/invoices/', invoice),\n  \n  updateInvoice: (id: number, invoice: Partial<Invoice>): Promise<{ data: Invoice }> =>\n    api.put(`/billing/invoices/${id}/`, invoice),\n  \n  deleteInvoice: (id: number): Promise<void> =>\n    api.delete(`/billing/invoices/${id}/`),\n  \n  sendInvoice: (id: number): Promise<{ data: Invoice }> =>\n    api.post(`/billing/invoices/${id}/send/`),\n  \n  // Estimate endpoints\n  getEstimates: (params?: any): Promise<{ data: { results: Estimate[] } }> =>\n    api.get('/billing/estimates/', { params }),\n  \n  getEstimateById: (id: number): Promise<{ data: Estimate }> =>\n    api.get(`/billing/estimates/${id}/`),\n  \n  createEstimate: (estimate: Partial<Estimate>): Promise<{ data: Estimate }> =>\n    api.post('/billing/estimates/', estimate),\n  \n  updateEstimate: (id: number, estimate: Partial<Estimate>): Promise<{ data: Estimate }> =>\n    api.put(`/billing/estimates/${id}/`, estimate),\n  \n  deleteEstimate: (id: number): Promise<void> =>\n    api.delete(`/billing/estimates/${id}/`),\n  \n  convertToInvoice: (id: number): Promise<{ data: Invoice }> =>\n    api.post(`/billing/estimates/${id}/convert_to_invoice/`),\n  \n  // Payment endpoints\n  getPayments: (params?: any): Promise<{ data: { results: Payment[] } }> =>\n    api.get('/billing/payments/', { params }),\n  \n  createPayment: (payment: Partial<Payment>): Promise<{ data: Payment }> =>\n    api.post('/billing/payments/', payment),\n};\n\n// Inventory API\nexport const inventoryApi = {\n  // Item endpoints\n  getItems: (params?: any): Promise<{ data: { results: Item[] } }> =>\n    api.get('/inventory/items/', { params }),\n  \n  getItemById: (id: number): Promise<{ data: Item }> =>\n    api.get(`/inventory/items/${id}/`),\n  \n  createItem: (item: Partial<Item>): Promise<{ data: Item }> =>\n    api.post('/inventory/items/', item),\n  \n  updateItem: (id: number, item: Partial<Item>): Promise<{ data: Item }> =>\n    api.put(`/inventory/items/${id}/`, item),\n  \n  deleteItem: (id: number): Promise<void> =>\n    api.delete(`/inventory/items/${id}/`),\n  \n  adjustStock: (id: number, quantity: number, reason: string): Promise<{ data: Item }> =>\n    api.post(`/inventory/items/${id}/adjust_stock/`, { quantity, reason }),\n  \n  // Category endpoints\n  getCategories: (): Promise<{ data: Category[] }> =>\n    api.get('/inventory/categories/'),\n  \n  createCategory: (category: Partial<Category>): Promise<{ data: Category }> =>\n    api.post('/inventory/categories/', category),\n  \n  // Supplier endpoints\n  getSuppliers: (): Promise<{ data: Supplier[] }> =>\n    api.get('/inventory/suppliers/'),\n  \n  createSupplier: (supplier: Partial<Supplier>): Promise<{ data: Supplier }> =>\n    api.post('/inventory/suppliers/', supplier),\n  \n  // Stock movement endpoints\n  getStockMovements: (params?: any): Promise<{ data: { results: StockMovement[] } }> =>\n    api.get('/inventory/stock-movements/', { params }),\n  \n  // Purchase order endpoints\n  getPurchaseOrders: (params?: any): Promise<{ data: { results: PurchaseOrder[] } }> =>\n    api.get('/inventory/purchase-orders/', { params }),\n  \n  createPurchaseOrder: (po: Partial<PurchaseOrder>): Promise<{ data: PurchaseOrder }> =>\n    api.post('/inventory/purchase-orders/', po),\n  \n  updatePurchaseOrder: (id: number, po: Partial<PurchaseOrder>): Promise<{ data: PurchaseOrder }> =>\n    api.put(`/inventory/purchase-orders/${id}/`, po),\n};\n\n// Scheduling API\nexport const schedulingApi = {\n  // Appointment endpoints\n  getAppointments: (params?: any): Promise<{ data: { results: Appointment[] } }> =>\n    api.get('/scheduling/appointments/', { params }),\n  \n  getAppointmentById: (id: number): Promise<{ data: Appointment }> =>\n    api.get(`/scheduling/appointments/${id}/`),\n  \n  createAppointment: (appointment: Partial<Appointment>): Promise<{ data: Appointment }> =>\n    api.post('/scheduling/appointments/', appointment),\n  \n  updateAppointment: (id: number, appointment: Partial<Appointment>): Promise<{ data: Appointment }> =>\n    api.put(`/scheduling/appointments/${id}/`, appointment),\n  \n  deleteAppointment: (id: number): Promise<void> =>\n    api.delete(`/scheduling/appointments/${id}/`),\n  \n  updateStatus: (id: number, status: string): Promise<{ data: Appointment }> =>\n    api.patch(`/scheduling/appointments/${id}/update_status/`, { status }),\n  \n  // Technician availability endpoints\n  getTechnicianAvailability: (params?: any): Promise<{ data: { results: TechnicianAvailability[] } }> =>\n    api.get('/scheduling/technician-availability/', { params }),\n  \n  createAvailability: (availability: Partial<TechnicianAvailability>): Promise<{ data: TechnicianAvailability }> =>\n    api.post('/scheduling/technician-availability/', availability),\n  \n  // Schedule conflict endpoints\n  getScheduleConflicts: (): Promise<{ data: { results: ScheduleConflict[] } }> =>\n    api.get('/scheduling/schedule-conflicts/'),\n  \n  resolveConflict: (id: number, notes: string): Promise<{ data: ScheduleConflict }> =>\n    api.patch(`/scheduling/schedule-conflicts/${id}/resolve/`, { resolution_notes: notes }),\n};\n\n// Analytics API\nexport const analyticsApi = {\n  getBusinessOverview: (): Promise<{ data: any }> =>\n    api.get('/analytics/analytics/business_overview/'),\n  \n  getFinancialSummary: (): Promise<{ data: any }> =>\n    api.get('/analytics/analytics/financial_summary/'),\n  \n  getOperationalMetrics: (): Promise<{ data: any }> =>\n    api.get('/analytics/analytics/operational_metrics/'),\n  \n  getCustomerInsights: (): Promise<{ data: any }> =>\n    api.get('/analytics/analytics/customer_insights/'),\n  \n  getInventoryInsights: (): Promise<{ data: any }> =>\n    api.get('/analytics/analytics/inventory_insights/'),\n};\n\nexport default api;","import { useMemo, useCallback, useRef, useEffect } from 'react';\nimport { debounce, throttle } from 'lodash';\n\n/**\n * Hook for memoizing expensive calculations\n */\nexport const useMemoizedCalculation = <T>(\n  calculation: () => T,\n  dependencies: React.DependencyList,\n  debugName?: string\n): T => {\n  return useMemo(() => {\n    const start = performance.now();\n    const result = calculation();\n    const duration = performance.now() - start;\n    \n    if (process.env.NODE_ENV === 'development' && duration > 16) {\n      console.warn(\n        `🐌 Slow calculation${debugName ? ` in ${debugName}` : ''}: ${Math.round(duration)}ms`\n      );\n    }\n    \n    return result;\n  }, dependencies);\n};\n\n/**\n * Hook for debounced callbacks to prevent excessive API calls\n */\nexport const useDebouncedCallback = <T extends (...args: any[]) => any>(\n  callback: T,\n  delay: number = 300,\n  dependencies: React.DependencyList = []\n): T => {\n  const debouncedFn = useRef<any>(null);\n  \n  useEffect(() => {\n    debouncedFn.current = debounce(callback, delay);\n    \n    return () => {\n      if (debouncedFn.current && typeof debouncedFn.current.cancel === 'function') {\n        debouncedFn.current.cancel();\n      }\n    };\n  }, [callback, delay, ...dependencies]);\n  \n  return useCallback((...args: Parameters<T>) => {\n    return debouncedFn.current?.(...args);\n  }, []) as T;\n};\n\n/**\n * Hook for throttled callbacks to limit execution frequency\n */\nexport const useThrottledCallback = <T extends (...args: any[]) => any>(\n  callback: T,\n  delay: number = 100,\n  dependencies: React.DependencyList = []\n): T => {\n  const throttledFn = useRef<any>(null);\n  \n  useEffect(() => {\n    throttledFn.current = throttle(callback, delay);\n    \n    return () => {\n      if (throttledFn.current && typeof throttledFn.current.cancel === 'function') {\n        throttledFn.current.cancel();\n      }\n    };\n  }, [callback, delay, ...dependencies]);\n  \n  return useCallback((...args: Parameters<T>) => {\n    return throttledFn.current?.(...args);\n  }, []) as T;\n};\n\n/**\n * Hook for measuring component render performance\n */\nexport const useRenderPerformance = (componentName: string) => {\n  const renderStart = useRef<number>(0);\n  const mountTime = useRef<number>(0);\n  \n  // Measure render start\n  renderStart.current = performance.now();\n  \n  useEffect(() => {\n    // Component mounted\n    mountTime.current = performance.now();\n    const mountDuration = mountTime.current - (renderStart.current || 0);\n    \n    if (process.env.NODE_ENV === 'development') {\n      if (mountDuration > 16) {\n        console.warn(`🐌 Slow mount for ${componentName}: ${Math.round(mountDuration)}ms`);\n      } else {\n        console.log(`⚡ ${componentName} mounted in ${Math.round(mountDuration)}ms`);\n      }\n    }\n    \n    return () => {\n      // Component will unmount\n      const unmountTime = performance.now();\n      const lifetime = unmountTime - (mountTime.current || 0);\n      \n      if (process.env.NODE_ENV === 'development') {\n        console.log(`📊 ${componentName} lifetime: ${Math.round(lifetime)}ms`);\n      }\n    };\n  }, [componentName]);\n  \n  // Measure render completion\n  useEffect(() => {\n    if (renderStart.current) {\n      const renderDuration = performance.now() - renderStart.current;\n      \n      if (process.env.NODE_ENV === 'development' && renderDuration > 16) {\n        console.warn(`🐌 Slow render for ${componentName}: ${Math.round(renderDuration)}ms`);\n      }\n    }\n  });\n};\n\n/**\n * Hook for optimizing large lists with virtual scrolling preparation\n */\nexport const useListOptimization = <T>(\n  items: T[],\n  itemHeight: number = 50,\n  containerHeight: number = 400\n) => {\n  return useMemo(() => {\n    const visibleCount = Math.ceil(containerHeight / itemHeight) + 2; // +2 for buffer\n    const startIndex = 0; // This would be calculated based on scroll position\n    const endIndex = Math.min(startIndex + visibleCount, items.length);\n    \n    return {\n      visibleItems: items.slice(startIndex, endIndex),\n      totalHeight: items.length * itemHeight,\n      startIndex,\n      endIndex,\n      visibleCount\n    };\n  }, [items, itemHeight, containerHeight]);\n};\n\n/**\n * Hook for lazy loading images and components\n */\nexport const useLazyLoading = () => {\n  const intersectionObserver = useRef<IntersectionObserver | null>(null);\n  \n  const observe = useCallback((element: Element, callback: () => void) => {\n    if (!intersectionObserver.current) {\n      intersectionObserver.current = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n              callback();\n              intersectionObserver.current?.unobserve(entry.target);\n            }\n          });\n        },\n        { threshold: 0.1 }\n      );\n    }\n    \n    intersectionObserver.current.observe(element);\n  }, []);\n  \n  const unobserve = useCallback((element: Element) => {\n    intersectionObserver.current?.unobserve(element);\n  }, []);\n  \n  useEffect(() => {\n    return () => {\n      intersectionObserver.current?.disconnect();\n    };\n  }, []);\n  \n  return { observe, unobserve };\n};\n\n/**\n * Hook for caching API responses in memory\n */\nexport const useAPICache = <T>() => {\n  const cache = useRef<Map<string, { data: T; timestamp: number }>>(new Map());\n  const CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n  \n  const get = useCallback((key: string): T | null => {\n    const cached = cache.current.get(key);\n    \n    if (cached) {\n      const isExpired = Date.now() - cached.timestamp > CACHE_DURATION;\n      \n      if (isExpired) {\n        cache.current.delete(key);\n        return null;\n      }\n      \n      return cached.data;\n    }\n    \n    return null;\n  }, []);\n  \n  const set = useCallback((key: string, data: T): void => {\n    cache.current.set(key, {\n      data,\n      timestamp: Date.now()\n    });\n  }, []);\n  \n  const clear = useCallback(() => {\n    cache.current.clear();\n  }, []);\n  \n  const size = cache.current.size;\n  \n  return { get, set, clear, size };\n};\n\nexport default {\n  useMemoizedCalculation,\n  useDebouncedCallback,\n  useThrottledCallback,\n  useRenderPerformance,\n  useListOptimization,\n  useLazyLoading,\n  useAPICache\n};","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');"],"names":["createSvgIcon","_jsx","d","TabPanel","props","children","value","index","other","_objectWithoutProperties","_excluded","_objectSpread","role","hidden","id","concat","Box","sx","p","CustomerDetailComponent","_customer$reviews","_customer$properties","_customer$reviews2","_customer$properties2","_customer$contacts","_customer$reviews3","_customer$properties3","_customer$properties4","_customer$contacts2","_customer$contacts3","_customer$reviews4","_customer$reviews5","useParams","navigate","useNavigate","useRenderPerformance","customer","setCustomer","useState","loading","setLoading","tabValue","setTabValue","isEditing","setIsEditing","isCreating","setIsCreating","formData","setFormData","saveLoading","setSaveLoading","error","setError","success","setSuccess","showAddProperty","setShowAddProperty","editingProperty","setEditingProperty","propertyFormData","setPropertyFormData","propertyLoading","setPropertyLoading","fetchCustomer","React","async","response","customerApi","getById","customerId","data","console","useEffect","first_name","last_name","email","phone","customer_type","street_address","city","state","zip_code","company_name","preferred_contact_method","notes","parseInt","handleInputChange","field","prev","handlePropertyInputChange","handleCancelProperty","Typography","averageRating","reviews","length","reduce","sum","review","rating","displayData","title","full_name","_jsxs","Snackbar","open","autoHideDuration","onClose","Alert","severity","display","alignItems","mb","IconButton","onClick","mr","ArrowBackIcon","Avatar","bgcolor","BusinessIcon","PersonIcon","flexGrow","variant","component","gap","mt","Chip","label","color","Button","startIcon","SaveIcon","create","update","_error$response","_error$response$data","message","disabled","CancelIcon","handleCancel","EditIcon","handleEdit","Card","CardContent","Grid","container","spacing","item","xs","gutterBottom","sm","TextField","fullWidth","onChange","e","target","required","type","FormControl","InputLabel","Select","MenuItem","multiline","rows","md","full_address","properties","ml","StarIcon","fontSize","toFixed","created_at","Date","toLocaleDateString","borderBottom","borderColor","Tabs","handleTabChange","_event","newValue","Tab","contacts","justifyContent","AddIcon","handleAddProperty","property_type","has_gfci_outlets","has_afci_breakers","map","property","HomeIcon","replace","l","toUpperCase","size","handleEditProperty","window","confirm","propertyApi","delete","propertyId","_error$response2","_error$response2$data","handleDeleteProperty","DeleteIcon","square_footage","year_built","bedrooms","bathrooms","main_panel_brand","main_panel_amperage","electrical_last_updated","fontStyle","textAlign","py","contact","contact_type","relationship","Array","_","i","source","sentiment_label","review_text","Dialog","maxWidth","DialogTitle","DialogContent","inputProps","step","parseFloat","main_panel_age","InputLabelProps","shrink","flexDirection","FormControlLabel","control","Checkbox","checked","gate_code","key_location","access_instructions","emergency_contact_name","emergency_contact_phone","emergency_contact_relationship","DialogActions","addProperty","_error$response3","_error$response3$data","CustomerDetail","ComponentErrorBoundary","componentName","api","axios","baseURL","process","headers","timeout","interceptors","request","use","config","_document$querySelect","metadata","startTime","performance","now","token","localStorage","getItem","Authorization","csrfToken","document","querySelector","getAttribute","errorLogger","handleError","action","userMessage","Promise","reject","_config$metadata","duration","_response$config$meth","_response$config$meth2","warn","method","url","Math","round","Error","_error$config","_error$config$method","_error$config2","getErrorMessage","status","authService","newToken","refreshToken","logout","retryAfter","delay","resolve","setTimeout","then","catch","getAll","params","get","post","put","getProperties","getContacts","addContact","getReviews","addReview","jobApi","job","updateStatus","patch","assignTechnicians","technician_ids","technicianApi","getAvailable","inventoryApi","getItems","getItemById","createItem","updateItem","deleteItem","adjustStock","quantity","reason","getCategories","createCategory","category","getSuppliers","createSupplier","supplier","getStockMovements","getPurchaseOrders","createPurchaseOrder","po","updatePurchaseOrder","analyticsApi","getBusinessOverview","getFinancialSummary","getOperationalMetrics","getCustomerInsights","getInventoryInsights","useMemoizedCalculation","calculation","dependencies","debugName","useMemo","start","result","renderStart","useRef","mountTime","current","useAPICache","cache","Map","useCallback","key","cached","timestamp","set","clear"],"sourceRoot":""}