"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[422],{1422:(e,t,o)=>{o.d(t,{authService:()=>n});var s=o(6291),r=o(4703);const n=new class{constructor(){this.refreshTokenTimeout=void 0}storeTokens(e,t){{const o={token:e,refresh:t,timestamp:Date.now()};window.crypto&&window.crypto.subtle?localStorage.setItem("authData",btoa(JSON.stringify(o))):(localStorage.setItem("authToken",e),localStorage.setItem("refreshToken",t))}}getStoredTokens(){try{const e=localStorage.getItem("authData");if(e){const t=JSON.parse(atob(e));if(Date.now()-t.timestamp<864e5)return{accessToken:t.token,refreshToken:t.refresh}}}catch(e){console.warn("Failed to decode stored auth data")}return{accessToken:localStorage.getItem("authToken"),refreshToken:localStorage.getItem("refreshToken")}}async login(e){try{const t=await s.Ay.post("/auth/login/",e),{access_token:o,refresh_token:r}=t.data;return this.storeTokens(o,r),this.scheduleTokenRefresh(o),t.data}catch(t){throw r.Fk.handleError(t,{component:"AuthService",action:"Login",userMessage:"Login failed. Please check your credentials."}),t}}async refreshToken(){try{const{refreshToken:e}=this.getStoredTokens();if(!e)return this.logout(),null;const t=await s.Ay.post("/auth/refresh/",{refresh_token:e}),{access_token:o}=t.data,{refreshToken:r}=this.getStoredTokens();return r&&(this.storeTokens(o,r),this.scheduleTokenRefresh(o)),o}catch(e){return r.Fk.handleError(e,{component:"AuthService",action:"Token Refresh",userMessage:"Session expired. Please log in again."}),this.logout(),null}}scheduleTokenRefresh(e){try{const t=1e3*JSON.parse(atob(e.split(".")[1])).exp,o=t-Date.now()-3e5;o>0&&(this.refreshTokenTimeout=setTimeout((()=>{this.refreshToken()}),o))}catch(t){console.warn("Failed to schedule token refresh:",t)}}getAccessToken(){const{accessToken:e}=this.getStoredTokens();return e}isAuthenticated(){const{accessToken:e}=this.getStoredTokens();return!!e}logout(){this.refreshTokenTimeout&&(clearTimeout(this.refreshTokenTimeout),this.refreshTokenTimeout=void 0),localStorage.removeItem("authToken"),localStorage.removeItem("refreshToken"),localStorage.removeItem("authData"),localStorage.removeItem("userProfile"),"/login"!==window.location.pathname&&(window.location.href="/#/login")}isValidTokenFormat(e){return 3===e.split(".").length}initialize(){const{accessToken:e}=this.getStoredTokens();e&&this.isValidTokenFormat(e)&&this.scheduleTokenRefresh(e)}}}}]);
//# sourceMappingURL=422.34da8fd3.chunk.js.map